name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  static:
    name: Static checks
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.12
        id: go
      
      - name: Checkout code
        uses: actions/checkout@master
        
      - name: Check dependency licenses
        run: make license-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOFLAG: -mod=readonly
          GOPROXY: https://proxy.golang.org

      - name: Check generated OpenAPI files
        run: sha256sum -c client/SHA256SUMS > /dev/null || { echo "Please generate client code using make generate-client"; exit 1; }
        
  database:
    name: Database checks
    runs-on: ubuntu-latest
    services:
      mysql:
          image: mysql:5.7
          ports:
            - 127.0.0.1:13306:3306
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      postgres:
          image: postgres:9.6
          ports:
            - 127.0.0.1:5432:5432
    steps:

      - name: Checkout code
        uses: actions/checkout@master
      
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client mysql-utilities postgresql-client

      - name: Create MySQL databases
        run: |
            mysql -h 127.0.0.1 -P 13306 -u root -e "CREATE DATABASE pipeline_migrations;"
            mysql -h 127.0.0.1 -P 13306 -u root -e 'CREATE DATABASE pipeline_automigrate; USE pipeline_automigrate; CREATE TABLE `schema_migrations` (`version` bigint(20) NOT NULL, `dirty` tinyint(1) NOT NULL, PRIMARY KEY (`version`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;'
      - name: Test MySQL database migrations
        run: |
            make bin/migrate
            bin/migrate -source "file://database/migrations/mysql" -database "mysql://root:@tcp(127.0.0.1:3306)/pipeline_migrations?multiStatements=true&charset=utf8mb4" up
            
      - name: Test MySQL database migrations are reversible
        run: |
            bin/migrate -source "file://database/migrations/mysql" -database "mysql://root:@tcp(127.0.0.1:13306)/pipeline_migrations?multiStatements=true&charset=utf8mb4" down
            bin/migrate -source "file://database/migrations/mysql" -database "mysql://root:@tcp(127.0.0.1:13306)/pipeline_migrations?multiStatements=true&charset=utf8mb4" up
            

      - name: Create PostgreSQL databases
        run: |
            psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE pipeline_migrations;"
            psql -h 127.0.0.1 -U postgres -c "CREATE DATABASE pipeline_automigrate;"
            psql -h 127.0.0.1 -U postgres -d pipeline_automigrate -c 'CREATE TABLE schema_migrations (version bigint NOT NULL, dirty BOOLEAN NOT NULL, PRIMARY KEY (version));'
      - name: Test PostgreSQL database migrations
        run: |
            make bin/migrate
            bin/migrate -source "file://database/migrations/postgres" -database "postgres://postgres:@127.0.0.1:5432/pipeline_migrations?sslmode=disable" up
            
      - name: Test PostgreSQL database migrations are reversible
        run: |
            bin/migrate -source "file://database/migrations/postgres" -database "postgres://postgres:@127.0.0.1:5432/pipeline_migrations?sslmode=disable" down
            bin/migrate -source "file://database/migrations/postgres" -database "postgres://postgres:@127.0.0.1:5432/pipeline_migrations?sslmode=disable" up


  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      vault:
        image: vault:1.1.0
        ports:
          - 127.0.0.1:8200:8200
        env:
            SKIP_SETCAP: true
            VAULT_DEV_ROOT_TOKEN_ID: 227e1cce-6bf7-30bb-2d2a-acc854318caf
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Checkout code
      uses: actions/checkout@master

    - name: Download dependencies
      run: go mod download
      env:
        GOFLAG: -mod=readonly
        GOPROXY: https://proxy.golang.org

    - name: Build
      run: make build
      env:
        VERBOSE: 1

    - name: Unit tests
      run: |
        make config/config.toml
        PIPELINE_CONFIG_DIR=$PWD/config make test
      env:
        VERBOSE: 1
        VAULT_ADDR: http://localhost:8200
        VAULT_TOKEN: 227e1cce-6bf7-30bb-2d2a-acc854318caf
        
    - name: Lint
      run: make lint
