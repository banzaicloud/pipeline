name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Please cache
        uses: actions/cache@v2
        with:
          path: |
            .plz-cache
          key: ${{ runner.os }}-plz-v3-${{ hashFiles('**/BUILD', '**/BUILD.plz', '**/.plzconfig*', '**/go.mod', '**/go.sum', '**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-plz-v3-

      - name: Go module cache
        id: go-module-cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Go build cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go', '**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Download Go modules
        if: steps.go-module-cache.outputs.cache-hit != 'true'
        run: go mod download

      - name: Build
        run: ./pleasew -p --profile ci build //...

      - name: Save Please log output
        uses: actions/upload-artifact@v1
        with:
          name: build-log
          path: plz-out/log

  test:
    name: Test
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Please cache
        uses: actions/cache@v2
        with:
          path: |
            .plz-cache
          key: ${{ runner.os }}-plz-v3-${{ hashFiles('**/BUILD', '**/BUILD.plz', '**/.plzconfig*', '**/go.mod', '**/go.sum', '**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-plz-v3-

      - name: Test
        run: ./pleasew -p --profile ci test --exclude integration //...

      - name: Save Please log output
        uses: actions/upload-artifact@v1
        with:
          name: test-log
          path: plz-out/log

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest

    needs: build

    services:
      vault:
        image: vault:1.4.2
        env:
          SKIP_SETCAP: true
          VAULT_DEV_ROOT_TOKEN_ID: 227e1cce-6bf7-30bb-2d2a-acc854318caf
        ports:
          - 8200

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Please cache
        uses: actions/cache@v2
        with:
          path: |
            .plz-cache
          key: ${{ runner.os }}-plz-v3-${{ hashFiles('**/BUILD', '**/BUILD.plz', '**/.plzconfig*', '**/go.mod', '**/go.sum', '**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-plz-v3-

      - name: Start kind cluster
        run: |
          ./pleasew -p --profile ci run ///pleasings2//tools/k8s:kind -- create cluster --kubeconfig $HOME/.kube/config
          echo "::set-env name=KUBECONFIG::$HOME/.kube/config"

      - name: Test
        run: |
          ./pleasew -p --profile ci build :kube-apiserver :etcd
          export TEST_ASSET_KUBE_APISERVER=$PWD/$(./pleasew -p --profile ci query output :kube-apiserver)
          export TEST_ASSET_ETCD=$PWD/$(./pleasew -p --profile ci query output :etcd)
          ./pleasew -p --profile ci test --include integration //...
        env:
          VAULT_ADDR: http://127.0.0.1:${{ job.services.vault.ports[8200] }}
          VAULT_TOKEN: 227e1cce-6bf7-30bb-2d2a-acc854318caf

      - name: Save Please log output
        uses: actions/upload-artifact@v1
        with:
          name: integration-test-log
          path: plz-out/log

  lint:
    name: Lint
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Please cache
        uses: actions/cache@v2
        with:
          path: |
            .plz-cache
          key: ${{ runner.os }}-plz-v3-${{ hashFiles('**/BUILD', '**/BUILD.plz', '**/.plzconfig*', '**/go.mod', '**/go.sum', '**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-plz-v3-

      - name: Go module cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Go build cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/*.go', '**/go.mod', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-build-

      - name: Lint
        run: ./pleasew -p --profile ci lint

      - name: Save Please log output
        uses: actions/upload-artifact@v1
        with:
          name: lint-log
          path: plz-out/log


  docker:
    name: Docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine tag
        uses: haya14busa/action-cond@v1
        id: imagetag
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.sha }}
          if_false: "master"

      - name: Build
        uses: docker/build-push-action@v1
        with:
          # username: ${{ secrets.DOCKER_USERNAME }}
          # password: ${{ secrets.DOCKER_PASSWORD }}
          repository: banzaicloud/pipeline
          tags: ${{ steps.imagetag.outputs.value }}
          add_git_labels: true
          # push: ${{ github.event_name == 'push' }}
          push: false
