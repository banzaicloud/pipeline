version: 2

jobs:
    checkout_code:
        docker:
            -
                image: circleci/golang:1.11
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            - checkout
            -
                persist_to_workspace:
                    root: /go/src/github.com/banzaicloud/pipeline
                    paths:
                        - .
    dependencies:
        docker:
            -
                image: circleci/golang:1.11
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                restore_cache:
                    name: Restore build dependencies
                    keys:
                        - gopkg-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}

            -
                restore_cache:
                    name: Restore dependencies
                    keys:
                        - gopkg-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
                        - gopkg-v1-{{ .Branch }}
                        - gopkg-v1-master
                        - gopkg-v1

            -
                restore_cache:
                    name: Restore license cache
                    keys:
                        - licensei-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
                        - licensei-v1-{{ .Branch }}
                        - licensei-v1-master
                        - licensei-v1

            -
                run:
                    name: Install dependencies
                    command: make vendor

            -
                run:
                    name: Download license information for dependencies
                    command: make license-cache

            -
                save_cache:
                    name: Save dependencies
                    key: gopkg-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
                    paths:
                        - vendor/

            -
                save_cache:
                    name: Save license cache
                    key: licensei-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
                    paths:
                        - .licensei.cache

            -
                save_cache:
                    name: Save build dependencies
                    key: gopkg-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}
                    paths:
                        - bin/

            -
                persist_to_workspace:
                    root: /go/src/github.com/banzaicloud/pipeline
                    paths:
                        - .licensei.cache
                        - vendor/

    checks:
        docker:
            -
                image: circleci/golang:1.11
            -
                image: mysql:5.7
                command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
                environment:
                    MYSQL_ROOT_PASSWORD: example
                    MYSQL_DATABASE: pipeline
                    MYSQL_USER: pipeline
                    MYSQL_PASSWORD: pipeline123
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                restore_cache:
                    name: Restore build dependencies
                    keys:
                        - checks-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}

            -
                run:
                    name: Check dependency licenses
                    command: make license-check

            -
                run:
                    name: Check generated OpenAPI files
                    command: sha256sum -c client/SHA256SUMS > /dev/null || { echo "Please generate client code using make generate-client"; exit 1; }

            -
                run:
                    name: Run linter
                    command: make lint

            -
                run:
                    name: Test database migrations
                    command: |
                        make bin/migrate
                        bin/migrate -source "file://database/migrations" -database "mysql://pipeline:pipeline123@tcp(127.0.0.1:3306)/pipeline?multiStatements=true&charset=utf8mb4" up

            -
                save_cache:
                    name: Save build dependencies
                    key: checks-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}
                    paths:
                        - bin/

    build:
        docker:
            -
                image: circleci/golang:1.11
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                run:
                    name: Build
                    command: make build

            -
                persist_to_workspace:
                    root: /go/src/github.com/banzaicloud/pipeline
                    paths:
                        - build/

    tests:
        docker:
            -
                image: circleci/golang:1.11
            -
                image: vault:0.11.0
                environment:
                    SKIP_SETCAP: true
                    VAULT_DEV_ROOT_TOKEN_ID: 227e1cce-6bf7-30bb-2d2a-acc854318caf
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                run:
                    name: Run tests
                    command: |
                        make config/config.toml
                        PIPELINE_CONFIG_DIR=$PWD/config GOARGS="-p=2" make test
                    environment:
                        VAULT_ADDR: http://localhost:8200
                        VAULT_TOKEN: 227e1cce-6bf7-30bb-2d2a-acc854318caf

            -
                persist_to_workspace:
                    root: /go/src/github.com/banzaicloud/pipeline
                    paths:
                        - test.txt


    integration_tests:
        docker:
            -
                image: circleci/golang:1.11
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                run:
                    name: Run integration tests
                    command: |
                        make config/config.toml
                        # PIPELINE_CONFIG_DIR=$PWD/config make GOARGS="-p=2 -tags integration" TEST_OUTPUT=test_integration.txt test
                        export PIPELINE_CONFIG_DIR=$PWD/config
                        set -o pipefail
                        go test -p=2 -tags integration -v \
                          ./pkg/providers/amazon/objectstore \
                          ./pkg/providers/azure/objectstore \
                          ./pkg/providers/google/objectstore \
                          ./pkg/providers/oracle/objectstore \
                          ./pkg/providers/alibaba/objectstore 2>&1 | tee test_integration.txt

            -
                persist_to_workspace:
                    root: /go/src/github.com/banzaicloud/pipeline
                    paths:
                        - test_integration.txt

    report:
        docker:
            -
                image: circleci/golang:1.11
        working_directory: /go/src/github.com/banzaicloud/pipeline
        steps:
            -
                attach_workspace:
                    at: /go/src/github.com/banzaicloud/pipeline

            -
                restore_cache:
                    name: Restore build dependencies
                    keys:
                        - report-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}

            -
                run:
                    name: Generate test reports
                    command: |
                        cat test_integration.txt >> test.txt
                        make junit-report
                    when: always

            -
                save_cache:
                    name: Save build dependencies
                    key: report-deps-v1-{{ .Branch }}-{{ checksum "Makefile" }}
                    paths:
                        - bin/

            -
                store_test_results:
                    path: build/test-results/

            -
                store_artifacts:
                    path: build/

workflows:
    version: 2
    build:
        jobs:
            - checkout_code
            -
                dependencies:
                    requires:
                        - checkout_code
            -
                checks:
                    requires:
                        - dependencies
            -
                build:
                    requires:
                        - checks
            -
                tests:
                    requires:
                        - checks
            -
                integration_tests:
                    requires:
                        - checks
            -
                report:
                    requires:
                        - tests
                        - integration_tests
