# Default values for pipeline


## Resource definitions for Kubernetes resources
replicaCount: 1
# Upgrade strategy
strategy:
  type: Recreate
  # this must be set to aviod issues when the chart is upgraded from rollingUpdate type
  # https://github.com/helm/helm/issues/5144#issuecomment-512758270
  rollingUpdate: null

## Additional entries to the hosts
hostAliases: []
#  - ip: "127.0.0.1"
#    hostnames:
#      - "foo.local"
#      - "bar.local"

image:
  repository: banzaicloud/pipeline
  tag: 0.40.0
  pullPolicy: IfNotPresent

resources:
  requests:
    cpu: 250m
    memory: 256Mi

worker:
  ## Resource definitions for Kubernetes resources
  replicaCount: 1
  # Upgrade strategy
  strategy: {}
  ## Additional entries to the hosts
  ## configuration is taken from the root level if not specified otherwise
  hostAliases: []
#    - ip: "127.0.0.1"
#      hostnames:
#        - "foo.local"
#        - "bar.local"
  # Image configuration is taken from the root level if not specified otherwise
  image: {}
    # repository: banzaicloud/pipeline
    # tag: 0.40.0
    # pullPolicy: IfNotPresent

  resources:
    requests:
      cpu: 250m
      memory: 256Mi

  deploymentLabels: {}
  deploymentAnnotations: {}

service:
  name: pipeline
  type: ClusterIP
  internalPort: 9090
  externalPort:  9090
  # TLS is always enabled, when the following secrets names are
  # not specified a Helm generated CA and certificate will be used.
  tls:
    # Name of the kubernetes.io/tls type Secret holding the
    # client/server key pair for authentication and the CA certificate.
    secretName: ""

serviceInternal:
  name: pipeline-internal
  type: ClusterIP
  externalPort:  9091
  internalPort: 9091
  tls: true

ingress:
  enabled: false
  annotations: {}
    #traefik.frontend.rule.type: PathPrefix
  hosts: []
    # - "/"
    # - "domain.com/xyz"
    # - "domain.com"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

env: {}

## Additional deployment labels and annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
deploymentLabels: {}
deploymentAnnotations: {}

## Pipeline metrics, rules and alerting configuration
metrics:
  enabled: false
  port: 9900
  serviceMonitor:
    enabled: false
    additionalLabels: {}
  alertRulesEnabled: false

## The Pipeline configuration definition
configuration:
  # Pipeline configs
  pipeline:
    basePath: /pipeline

  cluster:
    ingress:
      cert:
        source: file
        path: /sign-ca
        ca:
          key: ""
          cert: ""

    securityScan:
      anchore:
        enabled: false
        user: admin
        secretName: ""
        secretKey: adminPassword

  cicd:
    url: http://cicd:8000

  github:
    token: ""

  # Authentication
  auth:
    oidc:
      issuer: http://dex:5556/dex
      clientId: ""
      clientSecret: ""

    token:
      signingKey: ""

  # Pipeline Helm related configuration
  helm:
    home: "/cache/helm"

##
## Vault connector settings
##
vault:
  # Vault service endpoint
  serviceAddress: "https://vault:8200"
  # The secret that holds the Vault CA cert.
  # If left empty SKIP_VERIFY will be used.
  tlsSecret: ""

##
## MySQL configuration
## Read more: https://github.com/helm/charts/tree/master/stable/mysql
##
mysql:
  enabled: false

## Postgres configuration
## Read more: https://github.com/helm/charts/tree/master/stable/postgresql
##
postgres:
  enabled: true
  service: {}

##
## CloudSQL configuration
## Read more: https://github.com/rimusz/charts/tree/master/stable/gcloud-sqlproxy
##
cloudsql:
  enabled: false
  cloudsql:
    instances: []
    # instances:
    #   - project:
    #     region:
    #     instance:
    #     port:

# Database configuration
database:
  # mysql, postgres
  driver: ""
  host: ""
  port: ""
  tls: ""
  name: "pipeline"
  username: "pipeline-rw"
  password: ""
  existingSecret: ""

global:
  postgresql: {}
