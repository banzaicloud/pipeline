apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pipeline.fullname" . }}
  labels:
    app: {{ include "pipeline.name" . }}
    chart: {{ include "pipeline.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  githubClientId: {{ default .Values.configuration.auth.clientid .Values.configuration.auth.clientid | b64enc | quote }}
  githubClientSecret: {{ default .Values.configuration.auth.clientsecret .Values.configuration.auth.clientsecret | b64enc | quote }}
  tokenSigningKey: {{ default .Values.configuration.auth.clientsecret .Values.configuration.auth.tokenSigningKey | b64enc | quote }}
  githubToken: {{ .Values.configuration.github.token | b64enc | quote }}

---

{{ if .Values.configuration.monitor.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-federation-secrets
  labels:
    app: {{ include "pipeline.name" . }}
    chart: {{ include "pipeline.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data: {}

{{ end }}

---

{{ if .Values.service.tls  }}
{{- $cn := include "pipeline.fullname" . -}}
{{- $externalDNS := print $cn "." .Release.Namespace -}}
{{- $ca := genCA "pipeline-ca" 365 -}}
{{- $cert := genSignedCert $cn (list "127.0.0.1") (list $cn $externalDNS) 365 $ca -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pipeline.fullname" . }}-tls
  labels:
    app: {{ include "pipeline.name" . }}
    chart: {{ include "pipeline.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  ca.crt: {{ $ca.Cert | b64enc }}
  ca.key: {{ $ca.Key | b64enc }}
  server.crt: {{ $cert.Cert | b64enc }}
  server.key: {{ $cert.Key | b64enc }}
{{ end }}

---

{{ if eq .Values.configuration.cert.source "file" }}
{{- $ca := genCA "self-sign-ca" 365 -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pipeline.fullname" . }}-sign-ca
  labels:
    app: {{ include "pipeline.name" . }}
    chart: {{ include "pipeline.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  ca.crt.pem: {{ default $ca.Cert .Values.configuration.cert.ca.cert | b64enc }}
  ca.key.pem: {{ default $ca.Key .Values.configuration.cert.ca.key | b64enc }}
{{ end }}

{{ if and (not .Values.database.existingSecret) (eq (include "pipeline.database.secretName" .) ( printf "%s-database" (include "pipeline.fullname" .) ) ) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "pipeline.fullname" . }}-database
  labels:
    app: {{ template "pipeline.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
type: Opaque
data:
  password: {{ include "pipeline.database.password" . | b64enc | quote }}
{{ end }}
