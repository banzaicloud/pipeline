{
	"info": {
		"_postman_id": "cff8bef9-9b17-4637-b4b7-26f6681f0dd6",
		"name": "End2End TEST Organizations",
		"description": "Collection for K8S Cluster CRUD operations through the Banzai Cloud Pipeline API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "5372c327-46d4-46b0-ac55-3bafbc7b480d",
			"name": "Clusters",
			"item": [
				{
					"_postman_id": "879b9a70-4a69-42f9-b8fc-13cb0f7110a9",
					"name": "Cluster Create ACSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"alibabacluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"alibaba\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"acsk\": {\n        \t\"regionId\": \"eu-central-1\",\n        \t\"zoneId\": \"eu-central-1a\",\n        \t\"masterInstanceType\": \"ecs.sn1ne.large\",\n        \t\"masterSystemDiskCategory\": \"cloud_efficiency\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 1,\n            \t\t\"image\": \"centos_7\",\n            \t\t\"instanceType\": \"ecs.sn1ne.large\",\n\t\t        \t\"systemDiskCategory\": \"cloud_efficiency\"\n            \t}\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "075991d5-5bb9-4da3-b2d0-231150617ccc",
					"name": "Cluster Create EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"ec2\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n            },\n            \"master\": {\n                \"instanceType\": \"m4.xlarge\",\n                \"image\": \"ami-4d485ca7\"\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "306ff571-5ea5-48e7-af76-427f83e32706",
					"name": "Cluster Create AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"azcluster{{username}}{{$randomInt}}\",\n  \"location\": \"westeurope\",\n  \"cloud\": \"azure\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"aks\": {\n        \t\"resourceGroup\": \"{{az-resource-group}}\",\n        \t\"kubernetesVersion\": \"1.9.2\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t},\n            \t\"pool2\": {\n            \t    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t}\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "0823ccb4-6717-44e1-bb28-36da79de2f8e",
					"name": "Cluster Create EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"eks\": {\n\t\t\t\"version\":\"1.10\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"t2.medium\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false,\n\t                \"minCount\": 1,\n\t                \"maxCount\": 1,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-0ea01e1d1dea65b5c\"\n            \t}\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "9a5a4f64-23b9-4bc1-8375-74e929853131",
					"name": "Cluster Create GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9\"\n            },\n            \"nodeVersion\":\"1.9\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n                    \"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "5a5f6d34-6d8d-4f5e-82e6-d7f7f2b1e395",
					"name": "Cluster Create OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"okecluster-demo-{{$randomInt}}\",\n    \"location\": \"eu-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"general\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "81230047-219d-494c-8bd7-58cc278e7804",
					"name": "Cluster Create Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"dummy-cluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"dummyLocation\",\n    \"instanceType\": \"dummyInstanceType\",\n    \"secretId\": \"{{secret_id}}\",\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n            \n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "065cf4a5-0e4d-4a92-ad64-7c0266d305cf",
					"name": "Cluster Create Kubernetes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"kubernetes-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"kubernetes\",\n\t\"properties\": {\n\t\t\"kubernetes\": {\n\t\t\t\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "ba31ae4e-5958-4e93-a2c0-50bb0175fb34",
					"name": "Cluster Create with profile AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"ec2\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "5a1b3f3f-cdbc-4646-af01-68bf3f0210e5",
					"name": "Cluster Create with profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"eks\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "8a4ff55d-3643-4764-9307-f178ec5a4a76",
					"name": "Cluster Create with profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"azcluster{{username}}{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"azure\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"aks\": {\n            \"resourceGroup\": \"{{az-resource-group}}\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "4301d511-1cb1-48c2-81ce-5759e7a90bcd",
					"name": "Cluster Create with profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"google\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"gke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "011202ea-9209-432f-8cdb-c321c60cbe32",
					"name": "Cluster Create with profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"okecluster-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"oracle\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"oke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "680d99f7-b9c1-40e5-abd1-5d6374a16891",
					"name": "Cluster Update ACSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud\": \"alibaba\",\n  \"properties\": {\n        \"alibaba\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 2\n            \t}\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "13abfd89-a78c-4998-ae62-c85b7d9ed67f",
					"name": "Cluster Update AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "1099e95e-6ca5-4d63-93d2-09ba09fd1730",
					"name": "Cluster Update AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "f19b2c78-fc22-437f-9008-15a84bb44657",
					"name": "Cluster Update EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"autoscaling\": true, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 3\n            \t},\n            \t\"newpool1\": {\n            \t\t\"autoscaling\": true, \n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-0ea01e1d1dea65b5c\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "caac2c0d-b325-464f-b241-b4f10baacc1b",
					"name": "Cluster Update GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud\": \"google\",\n  \"properties\": {\n    \"gke\": {\n       \"master\": {\n            \"version\": \"1.9.4-gke.1\"\n      },\n      \"nodePools\": {\n        \"pool1\": {\n            \"autoscaling\": false, \n\t        \"minCount\": 1,\n\t        \"maxCount\": 2,\n            \"count\" : 2,\n            \"instanceType\": \"n1-standard-2\"\n        }\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "617deb35-3949-484b-9014-81cc95ae79a1",
					"name": "Cluster Update OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"oracle\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                },\n                \"pool2\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                }\n            }\n        }\n    }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "df2ed20c-d0fb-4d3b-9fab-6f90c12f5c74",
					"name": "Cluster Update Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n        \t\"node\": {\n            \t\"count\": 2\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "c9f665bc-99c3-467c-8256-43c61cd2783c",
					"name": "Helm init",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"kube-system\",\n  \"service_account\": \"tiller\",\n  \"tiller_image\": \"gcr.io/kubernetes-helm/tiller:v2.7.2\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/helminit",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"helminit"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "da7b3057-034d-450d-a7e8-3d47b40ae9ea",
					"name": "Install secrets",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"default\",\n  \"query\": {\n    \"tag\": \"\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "9c3b007e-18a8-49a2-97a2-727e50c7e9a6",
					"name": "Cluster Delete  FakeID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";",
									"    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";",
									"    tests[\"Valid code\"] = dataJSON.code == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/31231231241231231231321",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								"31231231241231231231321"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "c1b19b71-9c26-4ef5-aa77-8871797179dd",
					"name": "Cluster Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "b2c0e7e2-cc36-44dd-9c65-4391bee4b174",
					"name": "Get cluster status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:clusterId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":clusterId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "clusterId",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "2d5f38fd-5c86-494c-872b-ff5ce296a94f",
					"name": "Fetch cluster Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/details",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"details"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "b244437a-0adb-4eda-b8ae-65479a6a2fb8",
					"name": "Fetch cluster pod details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/pods",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"pods"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "a6febdf7-4f86-418b-8a76-c190ffe0c02f",
					"name": "Get cluster nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/nodes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"nodes"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "571af7c2-1ac6-4e84-8177-dab2afedf954",
					"name": "Cluster List",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Get the cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "d89e6337-8bac-461a-aa3e-6acbc5f77817",
					"name": "Cluster Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/config",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"config"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "5cfc1f7f-73f8-4d7a-a7d0-cf8b511c83a9",
					"name": "Cluster Public Endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/endpoints",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"endpoints"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "9d461737-06fd-4b12-af87-066d03c069a6",
					"name": "Cluster API endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/apiendpoint",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"apiendpoint"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "5eed4bee-e0ae-461a-ae33-4ca6779f272f",
					"name": "Update monitoring",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/monitoring",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"monitoring"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "d1315773-6e5d-486f-a8a6-bdf9e283e84e",
					"name": "Re-run cluster posthooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"InstallLogging\": {\n    \t\"bucketName\": \"\",\n    \t\"region\": \"\",\n    \t\"secretId\": \"\",\n       \t\"tls\": {\n       \t\t\"tlsEnabled\": true,\n            \"genTlsSecretName\": \"loggingSecret\",\n            \"namespace\": \"default\",\n            \"tlsHost\": \"fluent\"\n       \t}\n    }\t\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/posthooks",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"posthooks"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "9b1dc697-0ce9-48b6-a1ef-ca822527636b",
					"name": "Get cluster applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/application",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"application"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster applications"
					},
					"response": []
				},
				{
					"_postman_id": "9d7cb90f-03bf-47ca-8ae8-b2118f0a4e99",
					"name": "Cluster Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"     postman.setNextRequest(\"Cluster Info\");",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 1\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "94fe5bf2-67c0-49af-bcdd-32f6a6122e09",
			"name": "Catalog",
			"item": [
				{
					"_postman_id": "76117516-b223-4519-9349-cb2d79eaf976",
					"name": "Catalog List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/catalogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"catalogs"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "13e073c9-b58e-4940-b92d-2547862cce71",
					"name": "Catalog Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/catalogs/zeppelin",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"catalogs",
								"zeppelin"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "afd9bf55-e3eb-4e46-a9d8-dd1c6b1edc48",
			"name": "Deployments",
			"item": [
				{
					"_postman_id": "c2e771f3-4ab9-4181-9dfe-51d3747e10e7",
					"name": "Deployment Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"",
									"    pm.environment.set(\"deployment_name\", dataJSON.releaseName);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable/drone\",\n\t\"values\": {\n\t\t\"server\": {\n\t\t\t\"persistentVolume\": {\n\t\t\t\t\"enabled\": false\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "d665d683-62aa-4e7e-b5f3-95293c48d900",
					"name": "Deployment Create Fake APP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);",
									"    tests[\"Valid code\"] = dataJSON.status == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"pokol_app\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "6ff8540d-d78e-459d-837f-8ee11d47443b",
					"name": "List Deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"banzaicloud-stable/drone\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "36986ba8-e81a-444b-a380-264fba70e3a4",
					"name": "Deployment Init Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 2\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get deployment status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "ca6afae4-a5e2-41d4-ad00-a8da6c0e19c1",
			"name": "Deployment",
			"item": [
				{
					"_postman_id": "d5ba94d6-d18a-461e-8e87-013210e5233c",
					"name": "Deployment app Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 3\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Get deployment app status"
					},
					"response": []
				},
				{
					"_postman_id": "2d1fe7f8-1012-44a7-b422-76383a660fc4",
					"name": "Deployment Upgrade",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 501) {",
									"    tests[\"Response Code 501\"] = responseCode.code == 501;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Upgrades an existing deployment"
					},
					"response": []
				},
				{
					"_postman_id": "75a79052-95be-4e48-a362-b7a4f66bb27b",
					"name": "Deployment Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 200;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";",
									"    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "4032a29a-9dd1-4c1a-89f4-b8f3f251473d",
					"name": "Deployment Delete  FakeAPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 400) {",
									"    tests[\"Response Code 400\"] = responseCode.code == 400;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid code\"] = dataJSON.code == 400;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/pokollll-appp",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								"pokollll-appp"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "64a089ea-8c93-40e6-9409-6eb323d2fcb0",
					"name": "Deployment Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Get Deployment details\n"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "36996adb-268d-4a63-887b-c9a64c04093d",
			"name": "Profiles",
			"item": [
				{
					"_postman_id": "fd23f057-a628-49f7-a51f-cef857efef6a",
					"name": "Create Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"eu-west-1\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"master\": {\n\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t},\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "132eae7d-e3d5-4a1c-a09c-69c52c4a6955",
					"name": "Create Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"us-west-2\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-0ea01e1d1dea65b5c\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "e1ea5bc4-8248-4dab-994e-3cd5f148a926",
					"name": "Create Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t},\n\t\t\t\t\"pool2\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "84a98e0b-764f-4ff8-9b09-1eff9af30d5a",
					"name": "Create Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                },\n                \"pool2\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "fd9d7f3d-0981-45dc-85d8-f8080254f3c8",
					"name": "Create Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "7384392e-1c22-459d-b40b-a5502c1b68df",
					"name": "Update Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"ec2\": {\n      \"master\": {\n        \"instanceType\": \"m4.xlarge\",\n        \"image\": \"ami-4d485ca7\"\n      },\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-4d485ca7\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization Identifier"
								}
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "0e300b0f-a7c5-474a-ad33-8125bc2ca4bd",
					"name": "Update Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"eks\": {\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-0ea01e1d1dea65b5c\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "66d8574e-a812-4623-8c13-12639b3d8844",
					"name": "Update Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "13b43f18-d509-4412-bd08-63c2cfc18b33",
					"name": "Update Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool2\": {\n                    \"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "2db69332-1d24-4019-a744-7902a0b996cc",
					"name": "Update Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 2,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "1f0d4109-8a1e-47d5-8ce7-6083dad4c223",
					"name": "List profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster/:distribution_type",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster",
								":distribution_type"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "distribution_type",
									"value": "{{distribution_type}}",
									"description": "Profile's distribution type"
								}
							]
						},
						"description": "List the stored cluster profiles in pipeline"
					},
					"response": []
				},
				{
					"_postman_id": "6c1bacb6-455a-46b1-9c98-3a8b2f7bd9fd",
					"name": "Delete profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    postman.setNextRequest(\"List profiles\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster/:distribution_type/:profile_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster",
								":distribution_type",
								":profile_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "distribution_type",
									"value": "{{distribution_type}}",
									"description": "Profile's distribution type"
								},
								{
									"key": "profile_name",
									"value": "{{profile_name}}",
									"description": "Profile's name"
								}
							]
						},
						"description": "Delete an existing cluster profile"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "feef9621-c115-4916-b71f-5af2ce6abf2f",
			"name": "Secrets",
			"item": [
				{
					"_postman_id": "10d98ff7-04fb-49b9-8dfc-95064bd50e1c",
					"name": "List secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "067d2927-5ecd-46bf-9100-8b7c15258375",
					"name": "Get secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "96513b2a-cd8a-45c3-988a-293c74cec82c",
					"name": "List secret with filters",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets?type={{secret_type}}&tag={{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"query": [
								{
									"key": "type",
									"value": "{{secret_type}}",
									"description": "Cloud type"
								},
								{
									"key": "tag",
									"value": "{{tag}}",
									"description": "Secret's tag"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "01992127-1b90-4dee-9a87-ee3a153a2a3e",
					"name": "List allowed secret types and required keys",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/allowed/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"allowed",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "90282407-973f-4957-953d-47818443a8b5",
					"name": "Add secret Amazon",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret-{{$randomInt}}\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2da1dc5c-5f48-468f-ba1c-d911bc4ed5e6",
					"name": "Add secret Alibaba",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-alibaba-secret-{{$randomInt}}\",\n\t\"type\": \"alibaba\",\n\t\"values\": {\n\t\t\"ALIBABA_ACCESS_KEY_ID\": \"{{ALIBABA_ACCESS_KEY_ID}}\",\n\t\t\"ALIBABA_ACCESS_KEY_SECRET\": \"{{ALIBABA_ACCESS_KEY_SECRET}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "94abfc0a-4e58-4122-9fa6-118c268bac1f",
					"name": "Add secret TLS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-tls-secret-{{$randomInt}}\",\n\t\"type\": \"tls\",\n\t\"values\": {\n\t\t\"hosts\": \"localhost\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "62b600a0-dd38-4c5e-bbd8-dd6e20b10820",
					"name": "Add secret TLS Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-password-secret-{{$randomInt}}\",\n\t\"type\": \"password\",\n\t\"values\": {\n\t\t\"username\": \"root\",\n\t\t\"password\": \"randAlpha,16\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4550bd40-3ab8-4a0d-b402-f20ea3746701",
					"name": "Add secret Azure",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-azure-secret-{{$randomInt}}\",\n\t\"type\": \"azure\",\n\t\"values\": {\n\t\t\"AZURE_CLIENT_ID\": \"{{AZURE_CLIENT_ID}}\",\n\t\t\"AZURE_CLIENT_SECRET\": \"{{AZURE_CLIENT_SECRET}}\",\n\t\t\"AZURE_TENANT_ID\": \"{{AZURE_TENANT_ID}}\",\n\t\t\"AZURE_SUBSCRIPTION_ID\": \"{{AZURE_SUBSCRIPTION_ID}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f81b2fc6-9c7b-413c-b5bd-862e853538af",
					"name": "Add secret Google",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-google-secret-{{$randomInt}}\",\n\t\"type\": \"google\",\n\t\"values\": {\n\t\t\"type\": \"{{gke_type}}\",\n\t\t\"project_id\": \"{{gke-projectId}}\",\n\t\t\"private_key_id\": \"{{private_key_id}}\",\n\t\t\"private_key\": \"{{private_key}}\",\n\t\t\"client_email\": \"{{client_email}}\",\n\t\t\"client_id\": \"{{client_id}}\",\n\t\t\"auth_uri\": \"{{auth_uri}}\",\n\t\t\"token_uri\": \"{{token_uri}}\",\n\t\t\"auth_provider_x509_cert_url\": \"{{auth_provider_x509_cert_url}}\",\n\t\t\"client_x509_cert_url\": \"{{client_x509_cert_url}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "09d07b6f-e2c8-4b2a-ac4c-6c1c300efa5d",
					"name": "Add secret Oracle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-oci-secret-{{$randomInt}}\",\n\t\"type\": \"oracle\",\n\t\"version\": 1,\n\t\"values\": {\n\t\t\"user_ocid\": \"{{user_ocid}}\",\n\t\t\"api_key_fingerprint\": \"{{api_key_fingerprint}}\",\n\t\t\"api_key\": \"{{api_key}}\",\n\t\t\"region\": \"{{region}}\",\n\t\t\"compartment_ocid\": \"{{compartment_ocid}}\",\n\t\t\"tenancy_ocid\": \"{{tenancy_ocid}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c6e814ea-b9b3-485f-91fa-2717eaa8340e",
					"name": "Add secret SSH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-ssh-secret-{{$randomInt}}\",\n\t\"type\": \"ssh\",\n\t\"values\": {\n\t\t\"identifier\": \"\",\n\t\t\"private_key_data\": \"\",\n\t\t\"public_key_data\": \"\",\n\t\t\"public_key_fingerprint\": \"\",\n\t\t\"user\": \"\"\n\t}\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6692d105-05fc-45c6-ae85-7fefe06e3e4a",
					"name": "Add secret KUBERNETES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-kubernetes-secret-{{$randomInt}}\",\n\t\"type\": \"kubernetes\",\n\t\"values\": {\n\t\t\"K8Sconfig\": \"{{K8Sconfig}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a0168471-bc23-4a09-a70a-f5aaceca5291",
					"name": "Add secret Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-generic-secret-which-is-Docker-in-this-example-{{$randomInt}}\",\n\t\"type\": \"generic\",\n\t\"values\": {\n\t\t\"DOCKER_USERNAME\": \"{{DockerUsername}}\",\n\t\t\"DOCKER_PASSWORD\": \"{{DockerPassword}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "da4ee5fe-7a7c-4586-8b16-6022cc56b94b",
					"name": "Delete secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "07540d27-53d8-4dd2-9202-55c39fe55be6",
					"name": "Update secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
									"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t},\n\t\"version\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "430e003b-c2da-4c7c-a4c2-b543c847b28e",
					"name": "Validate secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id",
								"validate"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "d36370ad-09af-47f8-88ec-1f51af36dd58",
			"name": "Organization",
			"item": [
				{
					"_postman_id": "75fa65b4-c157-45a5-8cad-3917e3b764ac",
					"name": "List organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3a873a55-23c0-4143-a777-38e697a7f688",
					"name": "Get organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b7da2134-01ab-464f-96c1-b6599f35c7f6",
					"name": "Create organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"orgId\", dataJSON.id);",
									"    tests[\"Org ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{organization_name}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "75cd02c3-3306-4d7e-95fd-fc38f80d2061",
					"name": "Delete organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "0501ead8-12a7-4f31-aba5-810a87f09488",
			"name": "Auth",
			"item": [
				{
					"_postman_id": "37f54172-1fbb-4b86-9fcc-2355ceae87cf",
					"name": "Generate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    pm.environment.set(\"token\", dataJSON.token);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/tokens",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "8812b858-4618-4325-9a6c-6bcbd91f2291",
			"name": "User",
			"item": [
				{
					"_postman_id": "64c467c2-c140-4ac8-984f-91408429d8a8",
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"users"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "517bfb40-9f54-4624-843c-01ba63dd7067",
					"name": "Add users to organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/users/:user_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "db1aa39e-9d25-49ae-ac0b-bb821054ecf0",
			"name": "ObjectStore",
			"item": [
				{
					"_postman_id": "638596ff-3bd1-4742-bc73-7a3a67c58dc2",
					"name": "CheckBucket",
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName/?cloudType={{cloudType}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "{{cloudType}}",
									"description": "Bucket's cloud type"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "eb9340e6-3376-4960-bbba-9adc6ffaeeed",
					"name": "CreateBuckets Amazon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "187987c6-b722-47bc-9092-2a29c167d4a8",
					"name": "CreateBuckets Azure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secert identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"location\": \"\",\n\t\t\t\"storageAccount\": \"\",\n\t\t\t\"resourceGroup\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bb4cda80-b90b-4030-8393-6b1bd5fdcca3",
					"name": "CreateBuckets Google",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"google\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ca58eb67-6c94-4622-b911-91b39f9390a1",
					"name": "CreateBuckets Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"bbb\",\n\t\"properties\": {\n\t\t\"oracle\": {\n\t\t\t\"location\": \"eu-frankfurt-1\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d4f428eb-3406-4223-b7d3-271071ee6b91",
					"name": "ListBuckets Amazon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=amazon&location={{am-location}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon",
									"description": "Bucket's cloud: Amazon"
								},
								{
									"key": "location",
									"value": "{{am-location}}",
									"description": "Location of the buckets"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "af1d94e5-b24a-4fea-9758-dc3545abe166",
					"name": "ListBuckets Azure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=azure",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure",
									"description": "Bucket's cloud: Azure"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "4b8cace5-2c74-437e-8d96-03b6f49a3a0c",
					"name": "ListBuckets Google",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google",
									"description": "Bucket's cloud: Google"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "340f79cf-c3ba-4d77-838b-4931b5a92eaf",
					"name": "ListBuckets Oracle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=oracle",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle",
									"description": "Bucket's cloud: Oracle"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "fc77a95e-43d4-4b7e-aaed-1bf808e0602c",
					"name": "DeleteBucket Amazon",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=amazon",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon",
									"description": "Bucket's cloud: Amazon"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ded58ae2-c0d2-4cd2-93c1-69b08654575f",
					"name": "DeleteContainer Azure",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=azure&storageAccount={{az-storageAccount}}&resourceGroup={{az-resource-group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure",
									"description": "Bucket's cloud: Azure"
								},
								{
									"key": "storageAccount",
									"value": "{{az-storageAccount}}",
									"description": "Storage account name"
								},
								{
									"key": "resourceGroup",
									"value": "{{az-resource-group}}",
									"description": "Resource group name"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "83b03a10-1871-452a-95cf-916c3a9eb8da",
					"name": "DeleteBucket Google",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName/?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google",
									"description": "Bucket's cloud: Google"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "67efe883-7a58-4833-94d8-91ce41877a64",
					"name": "DeleteBucket Oracle",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=oracle&location=eu-frankfurt-1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle",
									"description": "Bucket's cloud: Oracle"
								},
								{
									"key": "location",
									"value": "eu-frankfurt-1",
									"description": "Location of the buckets"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket name"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "02c5cc09-4723-48b9-ab20-c90dd059d052",
			"name": "Helm",
			"item": [
				{
					"_postman_id": "2ee7126b-d8b8-4563-85f0-9222a3a46522",
					"name": "Chart List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/charts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"charts"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "314bd061-8dca-4237-9e03-b9b0075f7bbf",
					"name": "Chart Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/chart/:repoName/:chartName?version={{chartVersion}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"chart",
								":repoName",
								":chartName"
							],
							"query": [
								{
									"key": "version",
									"value": "{{chartVersion}}",
									"description": "Chart version"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								},
								{
									"key": "chartName",
									"value": "{{chartName}}",
									"description": "Chart name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "9f831cc6-1314-4f78-813f-c2dd2e016887",
					"name": "Repository List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								""
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "42e7e581-4013-4094-9903-4518ec9a5f3e",
					"name": "Repository Add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								""
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "90674451-28dc-469b-b608-06e40262d7aa",
					"name": "Repository Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "71c63f9b-19af-40f6-a638-b2c67b77894e",
					"name": "Repository Modify",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"cache\": \"statestore/colin014/helm/repository/cache/banzaicloud-stable-index.yaml\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\",\n\t\"username\": \"\",\n\t\"password\": \"\",\n\t\"certFile\": \"\",\n\t\"keyFile\": \"\",\n\t\"caFile\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1abb204b-40ed-43da-ad5b-4ecb9c7530e2",
					"name": "Repository Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName/update",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName",
								"update"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "59a4f5ac-bc3e-4adf-be50-427e4b8d5f84",
			"name": "Cloud info",
			"item": [
				{
					"_postman_id": "ecffa3e1-fa82-4170-8115-fd9fa1c902f5",
					"name": "Amazon",
					"item": [
						{
							"_postman_id": "7004b935-0a1a-4613-b9d6-eb172937fa46",
							"name": "Get Amazon cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "d9289194-2d68-4933-b90c-98e142b2fd19",
							"name": "Get Amazon cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=location",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "7e026b5d-1d82-4c63-b83a-89c8642d5a35",
							"name": "Get Amazon cloud config Images",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=image&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "tags",
											"value": "0.3.0",
											"description": "Image tags"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Image location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "b5f5246d-35e6-41be-bad7-03f40f95f0ad",
							"name": "Get Amazon cloud config InstanceType",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=instanceType&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "1e67eeee-c7c9-446b-bbf2-657ef12cbfa9",
							"name": "Get Amazon cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=location&fields=image&fields=instanceType&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "tags",
											"value": "0.3.0",
											"description": "Image tags"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "e38a4938-3aa4-49bc-ada7-5af61a33ceeb",
					"name": "Azure",
					"item": [
						{
							"_postman_id": "b5ce4ce9-ed23-44d1-bdf4-f300d807314e",
							"name": "Get Azure cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "77d0a7ec-5bef-43df-a50c-80a44c45532c",
							"name": "Get Azure cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "ee83c8c5-ff98-427c-93ff-8ff5bd56c66f",
							"name": "Get Azure cloud config NodeInsatnceTypes",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=instanceType&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "c98e2094-70b4-400b-912a-a5744745ff64",
							"name": "Get Azure cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "fe186255-2373-4766-9575-ae26f430be26",
							"name": "Get Azure cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=location&fields=instanceType&fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "fc2b8816-2a45-4185-9e92-5a14fb447bff",
					"name": "Google",
					"item": [
						{
							"_postman_id": "732c0e33-cee4-439e-a2c4-d8378e1585bf",
							"name": "Get Google cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "0dd9d1ef-78f3-4dd4-ade8-fee8d519d802",
							"name": "Get Google cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filters for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "6420aa1f-97d6-4b07-b110-5b8e8555f9da",
							"name": "Get Google cloud config InsatnceTypes",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=instanceType&location=asia-east1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "asia-east1-a",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "2095a866-c6cf-4028-b230-68e281c8eaeb",
							"name": "Get Google cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-central1-a",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "769f7a6b-5c35-435b-a573-9e1b13281875",
							"name": "Get Google cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=location&fields=instanceType&fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-central1-a",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "46eef04d-53c9-41d9-a42c-255a4efeedfb",
					"name": "Oracle",
					"item": [
						{
							"_postman_id": "4fe4e0c4-d859-4a53-bd9b-12dab60ca01d",
							"name": "Get Oracle cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "38fd0b12-b0b4-4f49-89f6-6e91fa2558fe",
							"name": "Get Oracle cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "e69914d7-ae03-4ced-b9a2-48c66cdede33",
							"name": "Get Oracle cloud config Images",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=image&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "Image location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "1268911e-4ca2-4388-80aa-a12095e867c0",
							"name": "Get Oracle cloud config InstanceType",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=instanceType&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "3e415617-5dab-4a2f-8c9a-c87b6dcbdc3e",
							"name": "Get Oracle cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=k8sVersion&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "ca4ad157-b3fa-4d94-80ca-7e7918694ade",
							"name": "Get Oracle cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=location&fields=instanceType&fields=k8sVersion&fields=image&location=us-ashburn-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-ashburn-1",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "0131f93c-7c23-4580-a8fa-02c8c1fb354a",
					"name": "Get supported clusters types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"project_id\": \"colin-pipeline\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"cloudinfo"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "ac8ba09a-eb7e-4482-be3a-cb1b256fcd56",
			"name": "Applications",
			"item": [
				{
					"_postman_id": "32148b2d-d9e5-4e52-8e92-71ad9842e5c4",
					"name": "Application List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e62c9c52-cb35-4081-a93f-e03b7f51a9c5",
					"name": "Application Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"MyApplication\",\n  \"catalogName\": \"mysql-simple\",\n  \"clusterId\": 0,\n  \"cluster\": {\n    \"name\": \"gkecluster-pipelineuser-1\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"profileName\": \"default\",\n    \"properties\": {\n      \"gke\": {\n        \"master\": {\n          \"version\": \"1.9.7-gke.3\"\n        },\n        \"nodePools\": {\n          \"pool1\": {\n            \"count\": 1,\n            \"instanceType\": \"n1-standard-2\"\n          }\n        },\n        \"nodeVersion\": \"1.9.7-gke.3\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "05974673-ee43-46f0-aedb-a6ceb175fe77",
					"name": "Application Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications/:appId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications",
								":appId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "appId",
									"value": "{{appId}}",
									"description": "Application identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "75c07bb3-b5dc-4b11-91a7-b2fe96f8c757",
			"name": "Resource groups",
			"item": [
				{
					"_postman_id": "8e9e4e3a-fe2b-4062-ad32-b4e2b6625c30",
					"name": "List resource group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "09985dc4-9354-4e3b-b600-1540ea9b45d7",
					"name": "Create resource group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee8f4c9a-6dca-4238-8fbe-e7903649ba03",
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"newResourceGroupName\", dataJSON.name);",
									"    tests[\"Resource group name: \" + dataJSON.name] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e0a34abc-745f-43a6-b0d5-13c635d17cb8",
					"name": "Delete resource group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups/:newResourceGroupName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups",
								":newResourceGroupName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "newResourceGroupName",
									"value": "{{newResourceGroupName}}",
									"description": "Resource group name to create"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "efdbdfb1-24c5-4d1a-a172-d8e4fc7abdf0",
			"name": "Get API Endpoints",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5cfcfbdb-9fe1-4cab-9b82-e3d6808a59d6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fc13eae6-5e8d-4024-9f9c-0fc8ef4b6e19",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}