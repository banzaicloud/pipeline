{
  "id": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
  "name": "End2End TEST Organizations copy",
  "description": "Collection for K8S Cluster CRUD operations through the Banzai Cloud Pipeline API",
  "auth": null,
  "events": [
    {
      "listen": "prerequest",
      "script": {
        "id": "844556e1-147c-408f-b994-fd3b011a6c78",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "55d10152-fb2d-44b5-bc60-84727e00e928",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variables": null,
  "order": [
    "88739f3e-9802-448c-aa5f-8c094db9d57e"
  ],
  "folders_order": [
    "1fc2de75-7b07-4fb0-823d-0a431faec003",
    "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
    "1dcf39c9-54a1-465f-afaf-f8e54206899e",
    "9ba8b226-7f31-449f-985c-cc527205c2ff",
    "d98da189-d298-4ebf-8717-d1df0ffc29fd",
    "1e054986-8f26-40ae-ab15-f3ed058524fa",
    "36c3820a-771e-408e-84ac-3c1ec76de048",
    "e65abb1c-6ac6-4825-9751-8d635703d9e4",
    "98017c76-7547-4bbe-95ec-77e0f501c1ab",
    "ad1206e1-acef-45ed-b049-97654d75747d",
    "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
    "d05825df-d7d5-427f-a1e0-28048cd400e3"
  ],
  "folders": [
    {
      "id": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "name": "Amazon",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "order": [
        "34b6fd4a-91ea-420b-afe2-dde27ff29157",
        "661ac6a9-d214-4955-a777-6f5c42ba1263",
        "477e0be2-0a47-4876-8438-d23d1d0f0e72",
        "c6310511-ca00-44f5-9b1e-a8b16d06a6ea",
        "d1b68ecb-36fb-4dcf-ac01-741dc0297930"
      ],
      "folders_order": []
    },
    {
      "id": "98017c76-7547-4bbe-95ec-77e0f501c1ab",
      "name": "Auth",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "e320b5f3-6201-49ab-a9df-b89333dba221"
      ],
      "folders_order": []
    },
    {
      "id": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "name": "Azure",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "order": [
        "c4fba935-bd9a-4790-9142-99db71493213",
        "23ad3aa7-568e-484f-aeef-7e8a98d46440",
        "c2aa05cb-e63e-4d28-b525-1bd3bd151d49",
        "ca6d3f2e-31dc-4d52-9a0b-fda8ed43236b",
        "6f463303-4075-45cd-8078-fc8cd37f189d"
      ],
      "folders_order": []
    },
    {
      "id": "1dcf39c9-54a1-465f-afaf-f8e54206899e",
      "name": "Catalog",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "94292e25-c45f-4354-bf6f-288dc3aacc2c",
        "dc332fa9-b991-489d-828c-d1a5344f513a"
      ],
      "folders_order": []
    },
    {
      "id": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "name": "Cloud info",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "d6684336-7f9a-4a21-8006-7c4372ab0492",
        "811b2426-059a-40ad-a002-4078e9897eaa"
      ],
      "folders_order": [
        "0634246d-d9c6-4021-af98-d401cfd9a6cf",
        "a15404ba-e1d0-480d-8689-383f29aaaa04",
        "816f83ae-7921-4730-8613-c67bf08bdefd"
      ]
    },
    {
      "id": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "name": "Cluster",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "e26b09af-ce9b-4524-86b0-02db05e09819",
        "7af6cf5d-5e36-40f6-b100-b1351b5c861b",
        "e1cfd815-41bb-4c29-adc2-b5a0895d410c",
        "b77a12b5-d635-475e-8134-d3d92c1e2666",
        "0b1b65c3-ae0b-438d-abfb-993670f02396",
        "0de1563f-d574-4aec-8586-0c4415ceb14d",
        "fa6093a2-2dbc-49a5-bae8-f8967892dc81",
        "c0f262fb-2e67-434f-93d1-50bc53908828",
        "365a0c35-a20e-47fb-a5be-b0786fb6d60c",
        "f1a84eb1-4920-430c-961d-2758e6694e50",
        "1d939db0-2b2f-431a-81f9-833987f457a5",
        "7e46658c-ca18-405b-b2b1-9955fbfeee1f",
        "470e3621-508f-4fa4-a57f-5ba656f0fa55",
        "ab372b23-bed2-48f5-9e03-6a4aaf22c1a0",
        "5187b762-7dac-4521-a90a-6d6d39efd0f3"
      ],
      "folders_order": []
    },
    {
      "id": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "name": "Clusters",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "9ea3f1c9-8f85-489a-a4d5-9ab72fec043f",
        "ca8d0e04-8b15-47d2-a063-f4a3fbf317c6",
        "9094e215-ee95-4b65-ab8f-26632e79bb03",
        "88c21776-44dd-4202-82b4-b98ca9f00eff",
        "e707311c-5cb5-433a-a48d-e4e4c56b0977",
        "ecf14ce1-eeca-4461-9b0b-4683fd3dc166",
        "ab60be04-3367-48bf-9f54-a053dd8164fd",
        "bc497588-cc70-44e9-9804-20ea219068ed",
        "dcf84b4c-f73e-4d7c-9854-aea67dd6590b"
      ],
      "folders_order": []
    },
    {
      "id": "d98da189-d298-4ebf-8717-d1df0ffc29fd",
      "name": "Deployment",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "06a3673c-d9b3-46d3-9eeb-2792393e6e37",
        "8a90b587-956e-46fb-82c5-33f9542135bf",
        "e2363aff-9981-426a-a116-b06a19bf6d5f",
        "b435665c-ab8e-4313-b3a6-8f13475c1869"
      ],
      "folders_order": []
    },
    {
      "id": "9ba8b226-7f31-449f-985c-cc527205c2ff",
      "name": "Deployments",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "6aa327a8-c05d-44e7-9bec-d0ce50560c16",
        "e13cfde8-cc00-4f4b-aff0-373f142f12b6",
        "e02c458a-7de0-4dcc-8dd8-0e33537b5623",
        "524b232e-fb1a-4287-8093-f0ad9cde7855"
      ],
      "folders_order": []
    },
    {
      "id": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "name": "Google",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "order": [
        "b1411abd-9263-4153-a9bd-ba9a4439af7e",
        "23f59463-8913-440c-9af4-ba781f4593f1",
        "f7666b19-a3da-4085-afe1-c6cc9decc869",
        "fc393d63-e642-468d-8563-447631bea890",
        "844c7b08-91e3-4690-8dbc-98b2ae345478"
      ],
      "folders_order": []
    },
    {
      "id": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "name": "Helm",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "7fff33d1-ec4b-4d77-9739-a58ca076f72a",
        "a92c9efa-3aab-4c32-bd39-eff34cbc54f3",
        "4d23c57a-38af-478c-8a67-faf0769076fd",
        "288c5067-9a73-4564-828f-0d5f07222f31",
        "dfc6f20f-5565-45f8-a695-45442e89e096",
        "3cbad335-8e1d-48a8-918b-6e61646af6c8",
        "7b27f608-e1fb-4a55-9b12-ba5703011fe7"
      ],
      "folders_order": []
    },
    {
      "id": "e65abb1c-6ac6-4825-9751-8d635703d9e4",
      "name": "Organization",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "3a804249-7eca-4e0e-bca7-15abe5fb0ad4",
        "24d6e69a-852e-437b-b054-1306d964c9cb",
        "0f9e8630-d18f-4104-8766-9a6ac90178bc",
        "40f2e008-85af-4ed9-bcc3-c6a24ce0d700"
      ],
      "folders_order": []
    },
    {
      "id": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "name": "Profiles",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "d87c2525-0d85-4bcd-9d99-ecf3b7939b1d",
        "e96ac904-940f-4b68-ad63-c1a0f959779f",
        "9b06b940-61ce-469a-b8de-1f8682af8177",
        "7cd5222c-173a-4f8c-a1da-4ac51160d65b",
        "e873acd7-ac57-4fb4-8841-32e0d0555f9f",
        "f3465d50-3627-43e8-8284-941803e7225e",
        "fa5d1023-b38e-4db9-9d2f-9e8f3628128b",
        "3283d6da-50c2-47ea-90c0-796ba1b86309"
      ],
      "folders_order": []
    },
    {
      "id": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "name": "Secrets",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "0d1b0f38-a4a0-4e84-99d3-90bab96aac01",
        "4edfd073-5d75-4796-9740-cb885b384757",
        "ca78da7d-e6a7-40b9-a510-118c5d3fc20d",
        "db73156f-800c-4410-b750-a43723180cae",
        "b3751348-6d92-4e21-9fb3-5fd8a87ae95b",
        "6e8f9332-f5a3-487b-b5f8-66ac6dc09376",
        "462d2d8b-be5e-4ba9-844f-4aa3581275f4",
        "3e2e24e6-1c9d-43e1-b564-b32aa2f32094",
        "4c276049-d371-4a41-baef-d054f6bb7474",
        "d7251281-4d35-4279-aa06-24c8b7217d69",
        "e57fdba2-ceda-4ce6-acb7-d545e02ed351"
      ],
      "folders_order": []
    },
    {
      "id": "ad1206e1-acef-45ed-b049-97654d75747d",
      "name": "User",
      "description": null,
      "auth": null,
      "events": null,
      "collection": "a9b3fa2a-53d2-439c-80ec-3582882661d4",
      "folder": null,
      "order": [
        "102c4615-26ce-4898-a2a6-a4d9e6288410"
      ],
      "folders_order": []
    }
  ],
  "requests": [
    {
      "id": "06a3673c-d9b3-46d3-9eeb-2792393e6e37",
      "name": "Deployment app Status",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
      "description": "Get deployment app status",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "HEAD",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
              "    console.log(\"Waiting...\" );",
              "    postman.setNextRequest(\"Delay Response 3\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "    ",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "d98da189-d298-4ebf-8717-d1df0ffc29fd",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "0b1b65c3-ae0b-438d-abfb-993670f02396",
      "name": "Helm init",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/helminit",
      "description": "Initialize helm in the cluster",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "4f7e7713-c0c0-4d42-8d1e-aad3a7bdffde",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "    var dataJSON = JSON.parse(responseBody);",
              "    ",
              "    console.log(dataJSON)",
              "    tests[\"Valid status\"] = dataJSON.status == 201;",
              "    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "{\n  \"namespace\": \"kube-system\",\n  \"service_account\": \"tiller\",\n  \"tiller_image\": \"gcr.io/kubernetes-helm/tiller:v2.7.2\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "0d1b0f38-a4a0-4e84-99d3-90bab96aac01",
      "name": "List secret",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "0de1563f-d574-4aec-8586-0c4415ceb14d",
      "name": "Cluster Delete  FakeID",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/31231231241231231231321",
      "description": "Delete a K8S cluster from the cloud, cleans up resources",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "3b611314-d6e9-4e5e-ae48-1494996f0bb2",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 404) {",
              "    tests[\"Response Code 404\"] = responseCode.code == 404;",
              "    var dataJSON = JSON.parse(responseBody);",
              "    ",
              "    console.log(dataJSON)",
              "    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";",
              "    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";",
              "    tests[\"Valid code\"] = dataJSON.code == \"404\";",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "0f9e8630-d18f-4104-8766-9a6ac90178bc",
      "name": "Create organization",
      "url": "{{url}}/api/v1/orgs",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "a093e930-5f6c-486c-a0cd-4355bb5f61de",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"orgId\", dataJSON.id);",
              "    tests[\"Org ID: \" + dataJSON.id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "e65abb1c-6ac6-4825-9751-8d635703d9e4",
      "rawModeData": "{\n\t\"name\": \"{{organization_name}}\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "102c4615-26ce-4898-a2a6-a4d9e6288410",
      "name": "Get users",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/users",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "ad1206e1-acef-45ed-b049-97654d75747d",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "1d939db0-2b2f-431a-81f9-833987f457a5",
      "name": "Cluster Config",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/config",
      "description": "Get the cluster configuration file",
      "data": [
        {
          "key": "name",
          "type": "text",
          "value": "zeppelin-k8s-charts"
        }
      ],
      "dataMode": "urlencoded",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "}",
              "else if (responseCode.code === 404) {",
              "    tests[\"Cluster Node Found!\"] = false",
              "    postman.setNextRequest(null);",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "    ",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "23ad3aa7-568e-484f-aeef-7e8a98d46440",
      "name": "Get AKS cloud config Locations",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "23f59463-8913-440c-9af4-ba781f4593f1",
      "name": "Get GKE cloud config Locations",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "24d6e69a-852e-437b-b054-1306d964c9cb",
      "name": "Get organization",
      "url": "{{url}}/api/v1/orgs/{{orgId}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "cc286fb5-ff2e-4a71-880f-9dac2ba84484",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "e65abb1c-6ac6-4825-9751-8d635703d9e4",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "288c5067-9a73-4564-828f-0d5f07222f31",
      "name": "Repository Add",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "3283d6da-50c2-47ea-90c0-796ba1b86309",
      "name": "Delete profile",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{cloud_type}}/{{profile_name}}",
      "description": "Delete an existing cluster profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "588d0d18-2f62-4c19-a28d-2d77a92dfe01",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "    postman.setNextRequest(\"List profiles\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "34b6fd4a-91ea-420b-afe2-dde27ff29157",
      "name": "Get AWS cloud config",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "365a0c35-a20e-47fb-a5be-b0786fb6d60c",
      "name": "Fetch cluster Details",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/details",
      "description": "Get cluster details",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "2918cae2-a5f9-47c2-979b-bfaf1152fdaf",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "}",
              "else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "3a804249-7eca-4e0e-bca7-15abe5fb0ad4",
      "name": "List organizations",
      "url": "{{url}}/api/v1/orgs",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "cc286fb5-ff2e-4a71-880f-9dac2ba84484",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "e65abb1c-6ac6-4825-9751-8d635703d9e4",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "3cbad335-8e1d-48a8-918b-6e61646af6c8",
      "name": "Repository Modify",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"cache\": \"statestore/colin014/helm/repository/cache/banzaicloud-stable-index.yaml\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\",\n\t\"username\": \"\",\n\t\"password\": \"\",\n\t\"certFile\": \"\",\n\t\"keyFile\": \"\",\n\t\"caFile\": \"\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "3e2e24e6-1c9d-43e1-b564-b32aa2f32094",
      "name": "Add secret KUBERNETES",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "efde9636-a9d8-474f-9bad-29904bc8dd82",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My kubernetes secret\",\n\t\"type\": \"kubernetes\",\n\t\"values\": {\n\t\t\"K8Sconfig\": \"{{K8Sconfig}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "40f2e008-85af-4ed9-bcc3-c6a24ce0d700",
      "name": "Delete organization",
      "url": "{{url}}/api/v1/orgs/{{orgId}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "3ec8fcd0-b28c-4772-a4b4-9c280eb223b0",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 204) {",
              "    tests[\"Response Code 204\"] = responseCode.code == 204;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "e65abb1c-6ac6-4825-9751-8d635703d9e4",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "462d2d8b-be5e-4ba9-844f-4aa3581275f4",
      "name": "Add secret SSH",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "f44f599f-cdfc-47cc-a21d-89e768b40b75",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My ssh secret\",\n\t\"type\": \"ssh\",\n\t\"values\": {\n\t\t\"identifier\": \"\",\n\t\t\"private_key_data\": \"\",\n\t\t\"public_key_data\": \"\",\n\t\t\"public_key_fingerprint\": \"\",\n\t\t\"user\": \"\"\n\t}\n}\n",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "470e3621-508f-4fa4-a57f-5ba656f0fa55",
      "name": "Cluster API endpoints",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/apiendpoint",
      "description": "List cluster public endpoints",
      "data": [
        {
          "key": "name",
          "type": "text",
          "value": "zeppelin-k8s-charts"
        }
      ],
      "dataMode": "urlencoded",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "}"
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "477e0be2-0a47-4876-8438-d23d1d0f0e72",
      "name": "Get AWS cloud config Images",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"image\"],\n\t\t\"image\": {\n\t\t\t\"tags\": [\"0.3.0\"],\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "4c276049-d371-4a41-baef-d054f6bb7474",
      "name": "Add secret Generic",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "ff12d199-301b-4295-9a35-e45d138966ba",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My generic secret, which is Docker in this example\",\n\t\"type\": \"generic\",\n\t\"values\": {\n\t\t\"DOCKER_USERNAME\": \"{{DockerUsername}}\",\n\t\t\"DOCKER_PASSWORD\": \"{{DockerPassword}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "4d23c57a-38af-478c-8a67-faf0769076fd",
      "name": "Repository List",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "4edfd073-5d75-4796-9740-cb885b384757",
      "name": "List secret with filters",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets?type={{secret_type}}&tag={{tag}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [
        {
          "key": "type",
          "value": "{{secret_type}}"
        },
        {
          "key": "tag",
          "value": "{{tag}}"
        }
      ],
      "auth": null,
      "events": null,
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "5187b762-7dac-4521-a90a-6d6d39efd0f3",
      "name": "Cluster Status",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Get cluster status",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "HEAD",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "90935d8f-b035-4e4b-aabe-bb1018ae4944",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "     postman.setNextRequest(\"Cluster Info\");",
              "",
              "} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
              "    console.log(\"Waiting...\" );",
              "    postman.setNextRequest(\"Delay Response 1\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "    ",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "524b232e-fb1a-4287-8093-f0ad9cde7855",
      "name": "Deployment Init Status",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
      "description": "Get deployment status",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "HEAD",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
              "    console.log(\"Waiting...\" );",
              "    postman.setNextRequest(\"Delay Response 2\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "    ",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "9ba8b226-7f31-449f-985c-cc527205c2ff",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "661ac6a9-d214-4955-a777-6f5c42ba1263",
      "name": "Get AWS cloud config Locations",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "6aa327a8-c05d-44e7-9bec-d0ce50560c16",
      "name": "Deployment Create",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
      "description": "Create a helm deployment",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "    var dataJSON = JSON.parse(responseBody);",
              "",
              "    pm.environment.set(\"deployment_name\", dataJSON.release_name);",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "9ba8b226-7f31-449f-985c-cc527205c2ff",
      "rawModeData": "{\n\t\"name\": \"banzaicloud-stable/drone\",\n\t\"values\": {\n\t\t\"server\": {\n\t\t\t\"persistentVolume\": {\n\t\t\t\t\"enabled\": false\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "6e8f9332-f5a3-487b-b5f8-66ac6dc09376",
      "name": "Add secret GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "e33bbef3-47de-4134-b439-9e7d7caf6af1",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My google secret\",\n\t\"type\": \"google\",\n\t\"values\": {\n\t\t\"type\": \"{{gke_type}}\",\n\t\t\"project_id\": \"{{gke-projectId}}\",\n\t\t\"private_key_id\": \"{{private_key_id}}\",\n\t\t\"private_key\": \"{{private_key}}\",\n\t\t\"client_email\": \"{{client_email}}\",\n\t\t\"client_id\": \"{{client_id}}\",\n\t\t\"auth_uri\": \"{{auth_uri}}\",\n\t\t\"token_uri\": \"{{token_uri}}\",\n\t\t\"auth_provider_x509_cert_url\": \"{{auth_provider_x509_cert_url}}\",\n\t\t\"client_x509_cert_url\": \"{{client_x509_cert_url}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "6f463303-4075-45cd-8078-fc8cd37f189d",
      "name": "Get AKS cloud config ALL field",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"instanceType\",\n\t\t\t\"k8sVersion\"\n\t\t],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"eastus\"\n\t\t},\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "7af6cf5d-5e36-40f6-b100-b1351b5c861b",
      "name": "Cluster Update AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Update an AKS cluster",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "1d33fe5d-239f-4bb8-968c-46ab44390e6d",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "{\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "7b27f608-e1fb-4a55-9b12-ba5703011fe7",
      "name": "Repository Update",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}/update",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "7cd5222c-173a-4f8c-a1da-4ac51160d65b",
      "name": "Update Profile AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Update an existing Amazon Web Services profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"nodeInstanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"amazon\": {\n      \"master\": {\n        \"instanceType\": \"m4.xlarge\",\n        \"image\": \"ami-16bfeb6f\"\n      },\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-16bfeb6f\"\n      }\n    }\n  }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "7e46658c-ca18-405b-b2b1-9955fbfeee1f",
      "name": "Cluster Public Endpoints",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/endpoints",
      "description": "List cluster public endpoints",
      "data": [
        {
          "key": "name",
          "type": "text",
          "value": "zeppelin-k8s-charts"
        }
      ],
      "dataMode": "urlencoded",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "}"
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "7fff33d1-ec4b-4d77-9739-a58ca076f72a",
      "name": "Chart List",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/charts",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "811b2426-059a-40ad-a002-4078e9897eaa",
      "name": "Get supported filter keys",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/filters",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "rawModeData": "{\n\t\"project_id\": \"colin-pipeline\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "844c7b08-91e3-4690-8dbc-98b2ae345478",
      "name": "Get GKE cloud config ALL field",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"instanceType\",\n\t\t\t\"k8sVersion\"\n\t\t],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"asia-east1-a\"\n\t\t},\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"us-central1-a\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "88739f3e-9802-448c-aa5f-8c094db9d57e",
      "name": "Get API Endpoints",
      "url": "{{url}}/api",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": null,
      "rawModeData": "",
      "headers": "",
      "pathVariables": {}
    },
    {
      "id": "88c21776-44dd-4202-82b4-b98ca9f00eff",
      "name": "Cluster Create Dummy",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Google Kubernetes Engine",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "08eb5646-ddb5-4066-88e6-c3557ec52e45",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n    \"name\":\"dummy-cluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"dummyLocation\",\n    \"nodeInstanceType\": \"dummyInstanceType\",\n    \"secret_id\": \"{{secret_id}}\",\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n            \n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "8a90b587-956e-46fb-82c5-33f9542135bf",
      "name": "Deployment Upgrade",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
      "description": "Upgrades an existing deployment",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "5938dc81-a51b-4ecf-969b-b147bf96ce59",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 501) {",
              "    tests[\"Response Code 501\"] = responseCode.code == 501;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}"
            ]
          }
        }
      ],
      "folder": "d98da189-d298-4ebf-8717-d1df0ffc29fd",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "9094e215-ee95-4b65-ab8f-26632e79bb03",
      "name": "Cluster Create GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Google Kubernetes Engine",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "86b45d04-946a-457b-b1d5-c3f6ec81fcc9",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n    \"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"nodeInstanceType\": \"n1-standard-1\",\n    \"secret_id\": \"{{secret_id}}\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9\"\n            },\n            \"nodeVersion\":\"1.9\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"count\": 1,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "94292e25-c45f-4354-bf6f-288dc3aacc2c",
      "name": "Catalog List",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/catalogs",
      "description": null,
      "data": [],
      "dataMode": null,
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "1dcf39c9-54a1-465f-afaf-f8e54206899e",
      "headers": "",
      "pathVariables": {}
    },
    {
      "id": "9b06b940-61ce-469a-b8de-1f8682af8177",
      "name": "Create Profile GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Create a Google Kubernetes Engine profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"count\": 1,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                },\n                \"pool2\": {\n                    \"count\": 2,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "9ea3f1c9-8f85-489a-a4d5-9ab72fec043f",
      "name": "Cluster Create AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Amazon Web Services",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "63677652-1d0c-4409-8aa3-b35f3331b6b2",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n  \"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"secret_id\": \"{{secret_id}}\",\n  \"nodeInstanceType\": \"m4.xlarge\",\n  \"properties\": {\n        \"amazon\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-16bfeb6f\"\t\n            \t}\n            },\n            \"master\": {\n                \"instanceType\": \"m4.xlarge\",\n                \"image\": \"ami-16bfeb6f\"\n            }\n        }\n    }\n}\n\n",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "a92c9efa-3aab-4c32-bd39-eff34cbc54f3",
      "name": "Chart Details",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/chart/{{repoName}}/{{chartName}}/{{chartVersion}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "ab372b23-bed2-48f5-9e03-6a4aaf22c1a0",
      "name": "Update monitoring",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/monitoring",
      "description": "List cluster public endpoints",
      "data": [
        {
          "key": "name",
          "type": "text",
          "value": "zeppelin-k8s-charts"
        }
      ],
      "dataMode": "urlencoded",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "}"
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "ab60be04-3367-48bf-9f54-a053dd8164fd",
      "name": "Cluster Create with profile AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Azure Container Service",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n\t\"name\":\"azcluster{{username}}{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"azure\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"azure\": {\n            \"resourceGroup\": \"{{az-resource-group}}\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "b1411abd-9263-4153-a9bd-ba9a4439af7e",
      "name": "Get GKE cloud config",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "b3751348-6d92-4e21-9fb3-5fd8a87ae95b",
      "name": "Add secret AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "c055c023-08ab-444a-a90e-3aa60c6713f7",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My azure secret\",\n\t\"type\": \"azure\",\n\t\"values\": {\n\t\t\"AZURE_CLIENT_ID\": \"{{AZURE_CLIENT_ID}}\",\n\t\t\"AZURE_CLIENT_SECRET\": \"{{AZURE_CLIENT_SECRET}}\",\n\t\t\"AZURE_TENANT_ID\": \"{{AZURE_TENANT_ID}}\",\n\t\t\"AZURE_SUBSCRIPTION_ID\": \"{{AZURE_SUBSCRIPTION_ID}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "b435665c-ab8e-4313-b3a6-8f13475c1869",
      "name": "Deployment Delete  FakeAPP",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/pokollll-appp",
      "description": "Delete Deployment\n",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "a593fab0-d03e-4681-a36a-f5053cde21fb",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 400) {",
              "    tests[\"Response Code 400\"] = responseCode.code == 400;",
              "    ",
              "    var dataJSON = JSON.parse(responseBody);",
              "    console.log(dataJSON)",
              "    tests[\"Valid code\"] = dataJSON.code == 400;",
              "    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}"
            ]
          }
        }
      ],
      "folder": "d98da189-d298-4ebf-8717-d1df0ffc29fd",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "b77a12b5-d635-475e-8134-d3d92c1e2666",
      "name": "Cluster Update Dummy",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Update an AKS cluster",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "37265830-f9a7-4967-bca4-cdbe793e27be",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "{\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n        \t\"node\": {\n            \t\"count\": 2\n        \t}\n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "bc497588-cc70-44e9-9804-20ea219068ed",
      "name": "Cluster Create with profile GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Google Kubernetes Engine",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n\t\"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"google\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"google\": {\n           \n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "c0f262fb-2e67-434f-93d1-50bc53908828",
      "name": "Get cluster status",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Get cluster details",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "2918cae2-a5f9-47c2-979b-bfaf1152fdaf",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "}",
              "else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "c2aa05cb-e63e-4d28-b525-1bd3bd151d49",
      "name": "Get AKS cloud config NodeInsatnceTypes",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"instanceType\"],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "c4fba935-bd9a-4790-9142-99db71493213",
      "name": "Get AKS cloud config",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "c6310511-ca00-44f5-9b1e-a8b16d06a6ea",
      "name": "Get AWS cloud config NodeInstanceType",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [ \"instanceType\" ],\n\t\t\"instanceType\": {\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "ca6d3f2e-31dc-4d52-9a0b-fda8ed43236b",
      "name": "Get AKS cloud config Kubernetes version",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "a15404ba-e1d0-480d-8689-383f29aaaa04",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"k8sVersion\"],\n\t\t\"k8sVersion\":{\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "ca78da7d-e6a7-40b9-a510-118c5d3fc20d",
      "name": "List allowed secret types and required keys",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/allowed/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "ca8d0e04-8b15-47d2-a063-f4a3fbf317c6",
      "name": "Cluster Create AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Azure Container Service",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "ecdbacca-9637-48f1-baf4-b93f26c4819f",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n  \"name\":\"azcluster{{username}}{{$randomInt}}\",\n  \"location\": \"westeurope\",\n  \"cloud\": \"azure\",\n  \"secret_id\": \"{{secret_id}}\",\n  \"nodeInstanceType\": \"Standard_B2ms\",\n  \"properties\": {\n        \"azure\": {\n        \t\"resourceGroup\": \"{{az-resource-group}}\",\n        \t\"kubernetesVersion\": \"1.9.2\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 1,\n                \t\"nodeInstanceType\": \"Standard_B2ms\"\n            \t},\n            \t\"pool2\": {\n            \t\t\"count\": 1,\n                \t\"nodeInstanceType\": \"Standard_B2ms\"\n            \t}\n        \t}\n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "d1b68ecb-36fb-4dcf-ac01-741dc0297930",
      "name": "Get AWS cloud config ALL field",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "0634246d-d9c6-4021-af98-d401cfd9a6cf",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"image\",\n\t\t\t\"instanceType\"\n\t\t],\n\t\t\"image\": {\n\t\t\t\"tags\": [ \"0.3.0\" ],\n\t\t\t\"location\": \"eu-west-1\"\n\t\t},\n\t\t\"instanceType\": {\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "d6684336-7f9a-4a21-8006-7c4372ab0492",
      "name": "Get supported clusters types",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "93fb38b1-df0a-4d8d-93e3-c981e06516a5",
      "rawModeData": "{\n\t\"project_id\": \"colin-pipeline\"\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "d7251281-4d35-4279-aa06-24c8b7217d69",
      "name": "Delete secret",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "f67f8eb9-7691-4bd3-90ce-5d91bbef9b48",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 204) {",
              "    tests[\"Response Code 204\"] = responseCode.code == 204;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "d87c2525-0d85-4bcd-9d99-ecf3b7939b1d",
      "name": "Create Profile AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Create an Amazon Web Services profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"eu-west-1\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"master\": {\n\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\"image\": \"ami-16bfeb6f\"\n\t\t\t},\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\t\"spotPrice\": \"0.2\",\n\t\t\t\t\t\"minCount\": 1,\n\t\t\t\t\t\"maxCount\": 2,\n\t\t\t\t\t\"image\": \"ami-16bfeb6f\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "db73156f-800c-4410-b750-a43723180cae",
      "name": "Add secret AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "3679fad9-1b76-4af5-9243-c373e7702416",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My amazon secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "dc332fa9-b991-489d-828c-d1a5344f513a",
      "name": "Catalog Details",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/catalogs/zeppelin",
      "description": null,
      "data": [],
      "dataMode": null,
      "headerData": [],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "1dcf39c9-54a1-465f-afaf-f8e54206899e",
      "headers": "",
      "pathVariables": {}
    },
    {
      "id": "dcf84b4c-f73e-4d7c-9854-aea67dd6590b",
      "name": "Cluster List",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Get the cluster details",
      "data": [
        {
          "key": "name",
          "type": "text",
          "value": "zeppelin-k8s-charts"
        }
      ],
      "dataMode": "urlencoded",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "}",
              "else if (responseCode.code === 404) {",
              "    tests[\"Cluster Node Found!\"] = false",
              "    postman.setNextRequest(null);",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "    ",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "dfc6f20f-5565-45f8-a695-45442e89e096",
      "name": "Repository Delete",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "d05825df-d7d5-427f-a1e0-28048cd400e3",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\n",
      "pathVariables": {}
    },
    {
      "id": "e02c458a-7de0-4dcc-8dd8-0e33537b5623",
      "name": "List Deployment",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
      "description": "List helm deployment",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "c45ecb31-d574-4ddf-aaa5-ae2d554e0832",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "9ba8b226-7f31-449f-985c-cc527205c2ff",
      "rawModeData": "{\"name\": \"banzaicloud-stable/drone\"}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e13cfde8-cc00-4f4b-aff0-373f142f12b6",
      "name": "Deployment Create Fake APP",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
      "description": "Create a helm deployment",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 404) {",
              "    tests[\"Response Code 404\"] = responseCode.code == 404;",
              "    var dataJSON = JSON.parse(responseBody);",
              "    ",
              "    console.log(dataJSON)",
              "    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);",
              "    tests[\"Valid code\"] = dataJSON.status == \"404\";",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "9ba8b226-7f31-449f-985c-cc527205c2ff",
      "rawModeData": "{\"name\": \"pokol_app\"}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e1cfd815-41bb-4c29-adc2-b5a0895d410c",
      "name": "Cluster Update GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Update an AKS cluster",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "37265830-f9a7-4967-bca4-cdbe793e27be",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "{\n  \"cloud\": \"google\",\n  \"properties\": {\n    \"google\": {\n       \"master\": {\n            \"version\": \"1.9.4-gke.1\"\n      },\n      \"nodePools\": {\n        \"pool1\": {\n            \"count\" : 2,\n            \"nodeInstanceType\": \"n1-standard-2\"\n        }\n      }\n    }\n  }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e2363aff-9981-426a-a116-b06a19bf6d5f",
      "name": "Deployment Delete ",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
      "description": "Delete Deployment\n",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/x-www-form-urlencoded"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "04be7a1d-e73b-435f-8f58-a43bfd7b77ff",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "    ",
              "    var dataJSON = JSON.parse(responseBody);",
              "    console.log(dataJSON)",
              "    tests[\"Valid status\"] = dataJSON.status == 200;",
              "    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";",
              "    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}",
              " "
            ]
          }
        }
      ],
      "folder": "d98da189-d298-4ebf-8717-d1df0ffc29fd",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
      "pathVariables": {}
    },
    {
      "id": "e26b09af-ce9b-4524-86b0-02db05e09819",
      "name": "Cluster Update AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Update an AWS cluster",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "bb0bfcd1-a1c2-4cc0-b03e-61e4bb31fcee",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-16bfeb6f\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e320b5f3-6201-49ab-a9df-b89333dba221",
      "name": "Generate token",
      "url": "{{url}}/api/v1/tokens",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "9482b21b-a4e5-4135-9f66-a5c76a3f8d0a",
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "    var dataJSON = JSON.parse(responseBody);",
              "    ",
              "    pm.environment.set(\"token\", dataJSON.token);",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}",
              " ",
              "",
              "",
              ""
            ]
          }
        }
      ],
      "folder": "98017c76-7547-4bbe-95ec-77e0f501c1ab",
      "rawModeData": "",
      "headers": "",
      "pathVariables": {}
    },
    {
      "id": "e57fdba2-ceda-4ce6-acb7-d545e02ed351",
      "name": "Update secret",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "e1ceffc9-d5dd-4e05-a224-2511b893134c",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
              "    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "36c3820a-771e-408e-84ac-3c1ec76de048",
      "rawModeData": "{\n\t\"name\": \"My amazon secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e707311c-5cb5-433a-a48d-e4e4c56b0977",
      "name": "Cluster Create Kubernetes",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Google Kubernetes Engine",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n\t\"name\": \"kubernetes-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"kubernetes\",\n\t\"properties\": {\n\t\t\"kubernetes\": {\n\t\t\t\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e873acd7-ac57-4fb4-8841-32e0d0555f9f",
      "name": "Update Profile AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Update an existing Azure Container Service profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "e96ac904-940f-4b68-ad63-c1a0f959779f",
      "name": "Create Profile AKS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Create an Azure Container Service profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 1,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t},\n\t\t\t\t\"pool2\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "ecf14ce1-eeca-4461-9b0b-4683fd3dc166",
      "name": "Cluster Create with profile AWS",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
      "description": "Creates a K8S cluster in the Amazon Web Services",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "",
              "    pm.environment.set(\"timestampHeader\", new Date());",
              "    var dataJSON = JSON.parse(responseBody);",
              "    pm.environment.set(\"cluster_id\", dataJSON.id);",
              "    tests[\"Cluster ID: \" + dataJSON.id] = true;",
              "",
              "    postman.setNextRequest(\"Cluster Status\");",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1fc2de75-7b07-4fb0-823d-0a431faec003",
      "rawModeData": "{\n\t\"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"amazon\": {\n           \n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "f1a84eb1-4920-430c-961d-2758e6694e50",
      "name": "Get cluster nodes",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/nodes",
      "description": "Get cluster details",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "9e432b4f-2978-46e4-bb33-ce37204dffae",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "f3465d50-3627-43e8-8284-941803e7225e",
      "name": "Update Profile GKE",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
      "description": "Update an existing Google Kubernetes Engine profile",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "PUT",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 201) {",
              "    tests[\"Response Code 201\"] = responseCode.code == 201;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool2\": {\n                    \"count\": 2,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "f7666b19-a3da-4085-afe1-c6cc9decc869",
      "name": "Get GKE cloud config NodeInsatnceTypes",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"instanceType\"],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"asia-east1-a\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "fa5d1023-b38e-4db9-9d2f-9e8f3628128b",
      "name": "List profiles",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{cloud_type}}",
      "description": "List the stored cluster profiles in pipeline",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "GET",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "id": "3bbc178d-32ee-487c-8c4a-e6b0970ad765",
            "type": "text/javascript",
            "exec": [
              "if (responseCode.code === 200) {",
              "    tests[\"Response Code 200\"] = responseCode.code == 200;",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    console.warn(responseBody);",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ]
          }
        }
      ],
      "folder": "1e054986-8f26-40ae-ab15-f3ed058524fa",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "fa6093a2-2dbc-49a5-bae8-f8967892dc81",
      "name": "Cluster Delete ",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
      "description": "Delete a K8S cluster from the cloud, cleans up resources",
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json"
        }
      ],
      "method": "DELETE",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "",
              "if (responseCode.code === 202) {",
              "    tests[\"Response Code 202\"] = responseCode.code == 202;",
              "    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)",
              "",
              "} else {",
              "    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
              "    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
              "    postman.setNextRequest(null);",
              "",
              "}",
              " "
            ]
          }
        }
      ],
      "folder": "dc0e9ba9-6186-41bd-99c8-f9720f04fc82",
      "rawModeData": "",
      "headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
      "pathVariables": {}
    },
    {
      "id": "fc393d63-e642-468d-8563-447631bea890",
      "name": "Get GKE cloud config Kubernetes version",
      "url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
      "description": null,
      "data": [],
      "dataMode": "raw",
      "headerData": [
        {
          "key": "Authorization",
          "value": "Bearer {{token}}"
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "enabled": false
        }
      ],
      "method": "POST",
      "pathVariableData": [],
      "queryParams": [],
      "auth": null,
      "events": null,
      "folder": "816f83ae-7921-4730-8613-c67bf08bdefd",
      "rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"k8sVersion\"],\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"us-central1-a\"\n\t\t}\n\t}\n}",
      "headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
      "pathVariables": {}
    }
  ]
}
