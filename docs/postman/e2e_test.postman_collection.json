{
	"id": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
	"name": "End2End TEST Organizations",
	"description": "Collection for K8S Cluster CRUD operations through the Banzai Cloud Pipeline API",
	"auth": null,
	"events": [],
	"variables": [],
	"order": [
		"42e76857-3d21-4c4b-a363-465603a0bfef"
	],
	"folders_order": [
		"edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
		"0d6fb767-c3d3-4866-b9d5-775bbf970a80",
		"bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
		"2548c3d3-4f67-4536-9a82-427f86c000db",
		"f4dc54db-d5c7-429c-8333-54c0dc4c0352",
		"e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
		"de16e6c1-f05f-4757-a857-b491c0baa57a",
		"0ccd6a85-db4a-46a3-957c-8d86f4dd01d0",
		"109cbd18-10c0-4c99-bba6-c61e7b218700",
		"fac9b057-3606-4e70-8384-f8ceba877d11",
		"be27ba49-933c-4875-8495-47889ee6252d"
	],
	"folders": [
		{
			"id": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"name": "Amazon",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"order": [
				"bca90d5f-43c2-4d4d-bad2-de51937ad1cd",
				"22cc4ef8-3394-49ee-b3e2-176f66640163",
				"1e788833-11a4-421b-88d2-d180fea95941",
				"5e901c57-6a1d-4639-ae91-eb3c73e10128",
				"9b996d40-b62a-4031-84dd-813eb53c6602"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "8362d322-6b4e-4f77-99ac-2a2b1d565bac"
		},
		{
			"id": "0ccd6a85-db4a-46a3-957c-8d86f4dd01d0",
			"name": "Auth",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"3c597753-7918-44e5-a737-22819b13be5f"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "0ccd6a85-db4a-46a3-957c-8d86f4dd01d0"
		},
		{
			"id": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"name": "Azure",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"order": [
				"b5862651-4840-49be-9bf3-32144ccbc337",
				"863223d8-31e2-4b8f-a477-888505bff2fb",
				"59559b2e-4a74-42c4-a739-61bc125a1381",
				"951c06fa-8ace-4c60-b1bd-57980b189d2c",
				"85104a85-6513-4772-9d03-bbebaef2e757"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "84d20dd3-31b0-4367-993f-04ab2e95221c"
		},
		{
			"id": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"name": "Cloud info",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"4025dba5-e857-43fc-a257-7d49b51fe66e",
				"080324ff-a5b4-4716-bca3-9e4c23e64390"
			],
			"folders_order": [
				"8362d322-6b4e-4f77-99ac-2a2b1d565bac",
				"84d20dd3-31b0-4367-993f-04ab2e95221c",
				"fef9b0ee-40cb-4326-b518-f829a53a93ac"
			],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "fac9b057-3606-4e70-8384-f8ceba877d11"
		},
		{
			"id": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"name": "Cluster",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"7f197e54-d892-4705-964d-6620d67b1faf",
				"82598e12-83cc-4f04-b54b-7c316bef821c",
				"cc8b19a6-bf26-4737-84ad-b70294f0fe50",
				"0c57ebb1-1ef2-4a5f-b64d-cbff2a41c560",
				"bc371198-3c71-4de3-98b2-6d80d3ad4165",
				"23ed61b0-14b1-437b-88b6-3103860cd91e",
				"14994d0c-628c-43b3-9765-116d87b66d42",
				"e1571989-b270-4b5f-98f1-b65013d0849a",
				"ae61dbff-3a1d-4f46-a603-258932b735ff",
				"c536b2ed-7f34-4363-9190-ceeb980d52e5",
				"bda04043-8391-4848-9e68-98b16df8ac0b",
				"7a37b088-549d-4889-8027-3fa044bd26fe",
				"cf105360-c8e8-4579-aa15-9dce684f4966",
				"ec2219d9-6c1c-4c86-ba96-ac2bdbe68de4",
				"79138939-8a40-4e12-89d8-5a73da544474"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "0d6fb767-c3d3-4866-b9d5-775bbf970a80"
		},
		{
			"id": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"name": "Clusters",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"7a277069-a540-4c73-9ca5-5ac650552bc7",
				"ab45b35d-d55c-4cfa-8b1e-ea070975b991",
				"940dbc3c-c584-44a7-bbcf-a6fe24cc1e47",
				"72db81a1-e57f-4c22-a305-605842119735",
				"d0f14246-5844-420e-b9e6-1fe9f1886ca4",
				"8f67c8dd-b57f-47fb-aac1-c3485841ca8b",
				"7cea48aa-c2bb-479b-8455-7e3dbc23eba6",
				"4c8cc9f1-e6cd-4b9e-9f34-a09a57551149",
				"d2e32c9c-c70d-437b-a16a-774ba8e0f4b8"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d"
		},
		{
			"id": "2548c3d3-4f67-4536-9a82-427f86c000db",
			"name": "Deployment",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"e9434ffe-ca0f-4a7c-a3af-af1b75df7aa0",
				"7adfb76e-aca2-4281-afff-2fd8497b4865",
				"bfaeed82-4b1e-417e-9560-704bdd548339",
				"51586ce6-b1ea-456d-8392-9ad08f6b5513"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "2548c3d3-4f67-4536-9a82-427f86c000db"
		},
		{
			"id": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
			"name": "Deployments",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"a01f1c7a-950e-48c8-a778-c114460b2a4a",
				"38aaf28f-b580-4e0b-9010-dceb0a9e3080",
				"d07209e3-83c1-4240-a689-f48dfb10b266",
				"a9dddcd3-adf4-427b-9971-0a3ba9c2dcec"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7"
		},
		{
			"id": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"name": "Google",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"order": [
				"385a69a8-4ebf-427a-bd1d-1e42daff1fe6",
				"b80eefd7-c2ef-4849-ae15-1e3898be92e1",
				"49647feb-5193-4fd5-b3c9-130d9dc5a132",
				"e21a96fe-ca52-47ee-bd2a-73b19479ae07",
				"f010bb6c-91a6-4322-a07d-a3ae8f3879c5"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "fef9b0ee-40cb-4326-b518-f829a53a93ac"
		},
		{
			"id": "be27ba49-933c-4875-8495-47889ee6252d",
			"name": "Helm",
			"description": null,
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"31a4405a-c1cf-41d8-b286-bdfbe2faa4cc",
				"6390bab1-9a5d-4840-8698-5ce5373d485b",
				"359a55cc-e7fe-43ed-9500-c8622efac512",
				"51697e8c-0c7f-4ee3-ae4a-8042fd848178",
				"e8098fe8-edf6-4bac-a81b-143ee4594178",
				"0868fce5-940e-490a-a63c-001c9c61877a",
				"84f91b5a-5dc4-4407-9374-ae6d11cc1a2c"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "be27ba49-933c-4875-8495-47889ee6252d"
		},
		{
			"id": "de16e6c1-f05f-4757-a857-b491c0baa57a",
			"name": "Organization",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"9629e4cc-7564-4c68-a9f6-7fc6d8d35faf",
				"1942fd58-19a8-42de-9e26-044df0c791c0",
				"cb4acf5d-7f7f-48f9-8d0c-bb9ef8f4e791",
				"ba96523b-01ab-4708-b6c4-926113d97de9"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "de16e6c1-f05f-4757-a857-b491c0baa57a"
		},
		{
			"id": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"name": "Profiles",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"df8ba29e-a165-421d-b081-cb0ea5a9d019",
				"7f107f4a-7787-4e51-bbd5-9508f027b740",
				"c9ba4abe-4d87-49ab-82ca-633f5bf46e92",
				"1e674ec2-107b-4ecf-bfdc-024d3bdc5993",
				"6d575077-d15a-4e6a-b37d-ec814fa8bff9",
				"e032462f-5b28-45ab-995d-2048d1ea25e2",
				"a0f04ace-28bb-4700-a07a-c4ad7cd45172",
				"73ec51c5-fac1-42bc-b81b-0e3372d1947a"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "f4dc54db-d5c7-429c-8333-54c0dc4c0352"
		},
		{
			"id": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"name": "Secrets",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"989282f9-537b-4fd0-91ec-42d5e5a7f5ab",
				"bd9bc860-4a36-4292-983d-099471abcadd",
				"05ee724f-ea62-4054-a064-70573f85c899",
				"0d3e68c8-3738-4ec4-8a2f-cbdfd3e14443",
				"7b18418d-1a23-44c2-a82e-0de2f7a4bcce",
				"f00656e1-d264-4592-a96f-9fd28a1de8b4",
				"fcf0aa5e-1f6f-42f8-a51a-ff37e5662e66",
				"4a3ad663-e015-461e-b3dc-9f930d4d8f86",
				"63f9e26a-af68-4103-a67a-63963571595c"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d"
		},
		{
			"id": "109cbd18-10c0-4c99-bba6-c61e7b218700",
			"name": "User",
			"description": "",
			"auth": null,
			"events": null,
			"collection": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folder": null,
			"order": [
				"c80ece91-a58a-414f-9dae-2d1bad51e0df"
			],
			"folders_order": [],
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"folderId": "109cbd18-10c0-4c99-bba6-c61e7b218700"
		}
	],
	"requests": [
		{
			"id": "05ee724f-ea62-4054-a064-70573f85c899",
			"name": "List allowed secret types and required keys",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/allowed/secrets",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "080324ff-a5b4-4716-bca3-9e4c23e64390",
			"name": "Get supported filter keys",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/filters",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"project_id\": \"colin-pipeline\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "0868fce5-940e-490a-a63c-001c9c61877a",
			"name": "Repository Modify",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
			"description": null,
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"cache\": \"statestore/colin014/helm/repository/cache/banzaicloud-stable-index.yaml\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\",\n\t\"username\": \"\",\n\t\"password\": \"\",\n\t\"certFile\": \"\",\n\t\"keyFile\": \"\",\n\t\"caFile\": \"\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "0c57ebb1-1ef2-4a5f-b64d-cbff2a41c560",
			"name": "Cluster Update Dummy",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Update an AKS cluster",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "37265830-f9a7-4967-bca4-cdbe793e27be",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n        \t\"node\": {\n            \t\"count\": 2\n        \t}\n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "0d3e68c8-3738-4ec4-8a2f-cbdfd3e14443",
			"name": "Add secret AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "8b59ab87-f31f-49ef-aa73-c9ad2d6772ea",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
							"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"secret_id\", dataJSON.secret_id);\n    tests[\"Secret ID: \" + dataJSON.secret_id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"My amazon secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "14994d0c-628c-43b3-9765-116d87b66d42",
			"name": "Cluster Delete ",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Delete a K8S cluster from the cloud, cleans up resources",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}",
							" "
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}\n ",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "1942fd58-19a8-42de-9e26-044df0c791c0",
			"name": "Get organization",
			"url": "{{url}}/api/v1/orgs/{{orgId}}",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "cc286fb5-ff2e-4a71-880f-9dac2ba84484",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "de16e6c1-f05f-4757-a857-b491c0baa57a",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "1e674ec2-107b-4ecf-bfdc-024d3bdc5993",
			"name": "Update Profile AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Update an existing Amazon Web Services profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"nodeInstanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"amazon\": {\n      \"master\": {\n        \"instanceType\": \"m4.xlarge\",\n        \"image\": \"ami-16bfeb6f\"\n      },\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-16bfeb6f\"\n      }\n    }\n  }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "1e788833-11a4-421b-88d2-d180fea95941",
			"name": "Get AWS cloud config Images",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"image\"],\n\t\t\"image\": {\n\t\t\t\"tags\": [\"0.3.0\"],\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "22cc4ef8-3394-49ee-b3e2-176f66640163",
			"name": "Get AWS cloud config Locations",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "23ed61b0-14b1-437b-88b6-3103860cd91e",
			"name": "Cluster Delete  FakeID",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/31231231241231231231321",
			"description": "Delete a K8S cluster from the cloud, cleans up resources",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "3b611314-d6e9-4e5e-ae48-1494996f0bb2",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 404) {",
							"    tests[\"Response Code 404\"] = responseCode.code == 404;",
							"    var dataJSON = JSON.parse(responseBody);",
							"    ",
							"    console.log(dataJSON)",
							"    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";",
							"    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";",
							"    tests[\"Valid code\"] = dataJSON.code == \"404\";",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 404) {\n    tests[\"Response Code 404\"] = responseCode.code == 404;\n    var dataJSON = JSON.parse(responseBody);\n    \n    console.log(dataJSON)\n    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";\n    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";\n    tests[\"Valid code\"] = dataJSON.code == \"404\";\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "31a4405a-c1cf-41d8-b286-bdfbe2faa4cc",
			"name": "Chart List",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/charts",
			"description": null,
			"data": [],
			"dataMode": null,
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "359a55cc-e7fe-43ed-9500-c8622efac512",
			"name": "Repository List",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
			"description": null,
			"data": [],
			"dataMode": null,
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "385a69a8-4ebf-427a-bd1d-1e42daff1fe6",
			"name": "Get GKE cloud config",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "38aaf28f-b580-4e0b-9010-dceb0a9e3080",
			"name": "Deployment Create Fake APP",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
			"description": "Create a helm deployment",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 404) {",
							"    tests[\"Response Code 404\"] = responseCode.code == 404;",
							"    var dataJSON = JSON.parse(responseBody);",
							"    ",
							"    console.log(dataJSON)",
							"    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);",
							"    tests[\"Valid code\"] = dataJSON.status == \"404\";",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 404) {\n    tests[\"Response Code 404\"] = responseCode.code == 404;\n    var dataJSON = JSON.parse(responseBody);\n    \n    console.log(dataJSON)\n    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);\n    tests[\"Valid code\"] = dataJSON.status == \"404\";\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\"name\": \"pokol_app\"}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "3c597753-7918-44e5-a737-22819b13be5f",
			"name": "Generate token",
			"url": "{{url}}/api/v1/token",
			"description": null,
			"data": [],
			"dataMode": "params",
			"headerData": [
				{
					"key": "",
					"value": "",
					"enabled": false
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "9482b21b-a4e5-4135-9f66-a5c76a3f8d0a",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"    var dataJSON = JSON.parse(responseBody);",
							"    ",
							"    pm.environment.set(\"token\", dataJSON.token);",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "0ccd6a85-db4a-46a3-957c-8d86f4dd01d0",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n    var dataJSON = JSON.parse(responseBody);\n    \n    pm.environment.set(\"token\", dataJSON.token);\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "",
			"pathVariables": []
		},
		{
			"id": "4025dba5-e857-43fc-a257-7d49b51fe66e",
			"name": "Get supported clusters types",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fac9b057-3606-4e70-8384-f8ceba877d11",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"project_id\": \"colin-pipeline\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "42e76857-3d21-4c4b-a363-465603a0bfef",
			"name": "Get API Endpoints",
			"url": "{{url}}/api",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": null,
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "",
			"pathVariables": []
		},
		{
			"id": "49647feb-5193-4fd5-b3c9-130d9dc5a132",
			"name": "Get GKE cloud config NodeInsatnceTypes",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"instanceType\"],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"asia-east1-a\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "4a3ad663-e015-461e-b3dc-9f930d4d8f86",
			"name": "Add secret Repo",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "cb45eb73-c3d2-4c5a-a67f-e02bc754273d",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
							"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"secret_id\", dataJSON.secret_id);\n    tests[\"Secret ID: \" + dataJSON.secret_id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"My repo secret\",\n\t\"type\": \"repo\",\n\t\"values\": {\n\t\t\"RepoName\": \"{{RepoName}}\",\n\t\t\"RepoSecret\": \"{{RepoSecret}}\"\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "4c8cc9f1-e6cd-4b9e-9f34-a09a57551149",
			"name": "Cluster Create with profile GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Google Kubernetes Engine",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"google\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"google\": {\n           \n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "51586ce6-b1ea-456d-8392-9ad08f6b5513",
			"name": "Deployment Delete  FakeAPP",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/pokollll-appp",
			"description": "Delete Deployment\n",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded"
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "a593fab0-d03e-4681-a36a-f5053cde21fb",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 400) {",
							"    tests[\"Response Code 400\"] = responseCode.code == 400;",
							"    ",
							"    var dataJSON = JSON.parse(responseBody);",
							"    console.log(dataJSON)",
							"    tests[\"Valid code\"] = dataJSON.code == 400;",
							"    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}"
						]
					}
				}
			],
			"folder": "2548c3d3-4f67-4536-9a82-427f86c000db",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 400) {\n    tests[\"Response Code 400\"] = responseCode.code == 400;\n    \n    var dataJSON = JSON.parse(responseBody);\n    console.log(dataJSON)\n    tests[\"Valid code\"] = dataJSON.code == 400;\n    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "51697e8c-0c7f-4ee3-ae4a-8042fd848178",
			"name": "Repository Add",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
			"description": null,
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "59559b2e-4a74-42c4-a739-61bc125a1381",
			"name": "Get AKS cloud config NodeInsatnceTypes",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"instanceType\"],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "5e901c57-6a1d-4639-ae91-eb3c73e10128",
			"name": "Get AWS cloud config NodeInstanceType",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [ \"instanceType\" ],\n\t\t\"instanceType\": {\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "6390bab1-9a5d-4840-8698-5ce5373d485b",
			"name": "Chart Details",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/chart/{{repoName}}/{{chartName}}/{{chartVersion}}",
			"description": null,
			"data": [],
			"dataMode": null,
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "63f9e26a-af68-4103-a67a-63963571595c",
			"name": "Delete secret",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "f67f8eb9-7691-4bd3-90ce-5d91bbef9b48",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 204) {",
							"    tests[\"Response Code 204\"] = responseCode.code == 204;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Response Code 204\"] = responseCode.code == 204;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "6d575077-d15a-4e6a-b37d-ec814fa8bff9",
			"name": "Update Profile AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Update an existing Azure Container Service profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "72db81a1-e57f-4c22-a305-605842119735",
			"name": "Cluster Create Dummy",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Google Kubernetes Engine",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "08eb5646-ddb5-4066-88e6-c3557ec52e45",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n    \"name\":\"dummy-cluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"dummyLocation\",\n    \"nodeInstanceType\": \"dummyInstanceType\",\n    \"secret_id\": \"{{secret_id}}\",\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n            \n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "73ec51c5-fac1-42bc-b81b-0e3372d1947a",
			"name": "Delete profile",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{cloud_type}}/{{profile_name}}",
			"description": "Delete an existing cluster profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "588d0d18-2f62-4c19-a28d-2d77a92dfe01",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"    postman.setNextRequest(\"List profiles\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n    postman.setNextRequest(\"List profiles\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "79138939-8a40-4e12-89d8-5a73da544474",
			"name": "Cluster Status",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Get cluster status",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "HEAD",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "90935d8f-b035-4e4b-aabe-bb1018ae4944",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"     postman.setNextRequest(\"Cluster Info\");",
							"",
							"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
							"    console.log(\"Waiting...\" );",
							"    postman.setNextRequest(\"Delay Response 1\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"    ",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n     postman.setNextRequest(\"Cluster Info\");\n\n} else if (responseCode.code === 404 || responseCode.code === 503 )  {\n    console.log(\"Waiting...\" );\n    postman.setNextRequest(\"Delay Response 1\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n    \n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "7a277069-a540-4c73-9ca5-5ac650552bc7",
			"name": "Cluster Create AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Amazon Web Services",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "63677652-1d0c-4409-8aa3-b35f3331b6b2",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n  \"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"secret_id\": \"{{secret_id}}\",\n  \"nodeInstanceType\": \"m4.xlarge\",\n  \"properties\": {\n        \"amazon\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-16bfeb6f\"\t\n            \t}\n            },\n            \"master\": {\n                \"instanceType\": \"m4.xlarge\",\n                \"image\": \"ami-16bfeb6f\"\n            }\n        }\n    }\n}\n\n",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "7a37b088-549d-4889-8027-3fa044bd26fe",
			"name": "Cluster Public Endpoints",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/endpoints",
			"description": "List cluster public endpoints",
			"data": [
				{
					"key": "name",
					"type": "text",
					"value": "zeppelin-k8s-charts"
				}
			],
			"dataMode": "urlencoded",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded"
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"}"
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "7adfb76e-aca2-4281-afff-2fd8497b4865",
			"name": "Deployment Upgrade",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
			"description": "Upgrades an existing deployment",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded"
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "5938dc81-a51b-4ecf-969b-b147bf96ce59",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 501) {",
							"    tests[\"Response Code 501\"] = responseCode.code == 501;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}"
						]
					}
				}
			],
			"folder": "2548c3d3-4f67-4536-9a82-427f86c000db",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 501) {\n    tests[\"Response Code 501\"] = responseCode.code == 501;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "7b18418d-1a23-44c2-a82e-0de2f7a4bcce",
			"name": "Add secret AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6196696f-c96b-4726-805a-f5334380d2ae",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
							"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"secret_id\", dataJSON.secret_id);\n    tests[\"Secret ID: \" + dataJSON.secret_id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"My azure secret\",\n\t\"type\": \"azure\",\n\t\"values\": {\n\t\t\"AZURE_CLIENT_ID\": \"{{AZURE_CLIENT_ID}}\",\n\t\t\"AZURE_CLIENT_SECRET\": \"{{AZURE_CLIENT_SECRET}}\",\n\t\t\"AZURE_TENANT_ID\": \"{{AZURE_TENANT_ID}}\",\n\t\t\"AZURE_SUBSCRIPTION_ID\": \"{{AZURE_SUBSCRIPTION_ID}}\"\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "7cea48aa-c2bb-479b-8455-7e3dbc23eba6",
			"name": "Cluster Create with profile AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Azure Container Service",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\":\"azcluster{{username}}{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"azure\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"azure\": {\n            \"resourceGroup\": \"{{az-resource-group}}\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "7f107f4a-7787-4e51-bbd5-9508f027b740",
			"name": "Create Profile AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Create an Azure Container Service profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 1,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t},\n\t\t\t\t\"pool2\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"nodeInstanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "7f197e54-d892-4705-964d-6620d67b1faf",
			"name": "Cluster Update AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Update an AWS cluster",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "bb0bfcd1-a1c2-4cc0-b03e-61e4bb31fcee",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-16bfeb6f\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "82598e12-83cc-4f04-b54b-7c316bef821c",
			"name": "Cluster Update AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Update an AKS cluster",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "1d33fe5d-239f-4bb8-968c-46ab44390e6d",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "84f91b5a-5dc4-4407-9374-ae6d11cc1a2c",
			"name": "Repository Update",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}/update",
			"description": null,
			"data": [],
			"dataMode": null,
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "85104a85-6513-4772-9d03-bbebaef2e757",
			"name": "Get AKS cloud config ALL field",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"instanceType\",\n\t\t\t\"k8sVersion\"\n\t\t],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"eastus\"\n\t\t},\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "863223d8-31e2-4b8f-a477-888505bff2fb",
			"name": "Get AKS cloud config Locations",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "8f67c8dd-b57f-47fb-aac1-c3485841ca8b",
			"name": "Cluster Create with profile AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Amazon Web Services",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profile_name\": \"default\",\n\t\"properties\": {\n\t\t\"amazon\": {\n           \n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "940dbc3c-c584-44a7-bbcf-a6fe24cc1e47",
			"name": "Cluster Create GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Google Kubernetes Engine",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "86b45d04-946a-457b-b1d5-c3f6ec81fcc9",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n    \"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"nodeInstanceType\": \"n1-standard-1\",\n    \"secret_id\": \"{{secret_id}}\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9\"\n            },\n            \"nodeVersion\":\"1.9\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"count\": 1,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "951c06fa-8ace-4c60-b1bd-57980b189d2c",
			"name": "Get AKS cloud config Kubernetes version",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"k8sVersion\"],\n\t\t\"k8sVersion\":{\n\t\t\t\"location\": \"eastus\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "9629e4cc-7564-4c68-a9f6-7fc6d8d35faf",
			"name": "List organizations",
			"url": "{{url}}/api/v1/orgs",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "cc286fb5-ff2e-4a71-880f-9dac2ba84484",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "de16e6c1-f05f-4757-a857-b491c0baa57a",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "989282f9-537b-4fd0-91ec-42d5e5a7f5ab",
			"name": "List secret",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "9b996d40-b62a-4031-84dd-813eb53c6602",
			"name": "Get AWS cloud config ALL field",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"image\",\n\t\t\t\"instanceType\"\n\t\t],\n\t\t\"image\": {\n\t\t\t\"tags\": [ \"0.3.0\" ],\n\t\t\t\"location\": \"eu-west-1\"\n\t\t},\n\t\t\"instanceType\": {\n\t\t\t\"location\": \"eu-west-1\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "a01f1c7a-950e-48c8-a778-c114460b2a4a",
			"name": "Deployment Create",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
			"description": "Create a helm deployment",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"    var dataJSON = JSON.parse(responseBody);",
							"",
							"    pm.environment.set(\"deployment_name\", dataJSON.release_name);",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n    var dataJSON = JSON.parse(responseBody);\n\n    pm.environment.set(\"deployment_name\", dataJSON.release_name);\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"banzaicloud-stable/drone\",\n\t\"values\": {\n\t\t\"server\": {\n\t\t\t\"persistentVolume\": {\n\t\t\t\t\"enabled\": false\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "a0f04ace-28bb-4700-a07a-c4ad7cd45172",
			"name": "List profiles",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{cloud_type}}",
			"description": "List the stored cluster profiles in pipeline",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "3bbc178d-32ee-487c-8c4a-e6b0970ad765",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "a9dddcd3-adf4-427b-9971-0a3ba9c2dcec",
			"name": "Deployment Init Status",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
			"description": "Get deployment status",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "HEAD",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
							"    console.log(\"Waiting...\" );",
							"    postman.setNextRequest(\"Delay Response 2\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"    ",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n} else if (responseCode.code === 404 || responseCode.code === 503 )  {\n    console.log(\"Waiting...\" );\n    postman.setNextRequest(\"Delay Response 2\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n    \n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "ab45b35d-d55c-4cfa-8b1e-ea070975b991",
			"name": "Cluster Create AKS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Azure Container Service",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "ecdbacca-9637-48f1-baf4-b93f26c4819f",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n  \"name\":\"azcluster{{username}}{{$randomInt}}\",\n  \"location\": \"westeurope\",\n  \"cloud\": \"azure\",\n  \"secret_id\": \"{{secret_id}}\",\n  \"nodeInstanceType\": \"Standard_B2ms\",\n  \"properties\": {\n        \"azure\": {\n        \t\"resourceGroup\": \"{{az-resource-group}}\",\n        \t\"kubernetesVersion\": \"1.9.2\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 1,\n                \t\"nodeInstanceType\": \"Standard_B2ms\"\n            \t},\n            \t\"pool2\": {\n            \t\t\"count\": 1,\n                \t\"nodeInstanceType\": \"Standard_B2ms\"\n            \t}\n        \t}\n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "ae61dbff-3a1d-4f46-a603-258932b735ff",
			"name": "Fetch cluster Details",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/details",
			"description": "Get cluster details",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "2918cae2-a5f9-47c2-979b-bfaf1152fdaf",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"}",
							"else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;\n\n    postman.setNextRequest(\"Cluster Status\");\n}\nelse {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "b5862651-4840-49be-9bf3-32144ccbc337",
			"name": "Get AKS cloud config",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "84d20dd3-31b0-4367-993f-04ab2e95221c",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "b80eefd7-c2ef-4849-ae15-1e3898be92e1",
			"name": "Get GKE cloud config Locations",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "ba96523b-01ab-4708-b6c4-926113d97de9",
			"name": "Delete organization",
			"url": "{{url}}/api/v1/orgs/{{orgId}}",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "3ec8fcd0-b28c-4772-a4b4-9c280eb223b0",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 204) {",
							"    tests[\"Response Code 204\"] = responseCode.code == 204;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "de16e6c1-f05f-4757-a857-b491c0baa57a",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Response Code 204\"] = responseCode.code == 204;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "bc371198-3c71-4de3-98b2-6d80d3ad4165",
			"name": "Helm init",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/helminit",
			"description": "Initialize helm in the cluster",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "4f7e7713-c0c0-4d42-8d1e-aad3a7bdffde",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"    var dataJSON = JSON.parse(responseBody);",
							"    ",
							"    console.log(dataJSON)",
							"    tests[\"Valid status\"] = dataJSON.status == 201;",
							"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n    var dataJSON = JSON.parse(responseBody);\n    \n    console.log(dataJSON)\n    tests[\"Valid status\"] = dataJSON.status == 201;\n    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n  \"namespace\": \"kube-system\",\n  \"service_account\": \"tiller\",\n  \"tiller_image\": \"gcr.io/kubernetes-helm/tiller:v2.7.2\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "bca90d5f-43c2-4d4d-bad2-de51937ad1cd",
			"name": "Get AWS cloud config",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "8362d322-6b4e-4f77-99ac-2a2b1d565bac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "bd9bc860-4a36-4292-983d-099471abcadd",
			"name": "List secret with filter",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets?type={{cloud_type}}",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [
				{
					"key": "type",
					"value": "{{cloud_type}}",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"auth": null,
			"events": [],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "bda04043-8391-4848-9e68-98b16df8ac0b",
			"name": "Cluster Config",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/config",
			"description": "Get the cluster configuration file",
			"data": [
				{
					"key": "name",
					"type": "text",
					"value": "zeppelin-k8s-charts"
				}
			],
			"dataMode": "urlencoded",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"}",
							"else if (responseCode.code === 404) {",
							"    tests[\"Cluster Node Found!\"] = false",
							"    postman.setNextRequest(null);",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"    ",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n}\nelse if (responseCode.code === 404) {\n    tests[\"Cluster Node Found!\"] = false\n    postman.setNextRequest(null);\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n    \n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "bfaeed82-4b1e-417e-9560-704bdd548339",
			"name": "Deployment Delete ",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
			"description": "Delete Deployment\n",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded",
					"enabled": true
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "04be7a1d-e73b-435f-8f58-a43bfd7b77ff",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"    ",
							"    var dataJSON = JSON.parse(responseBody);",
							"    console.log(dataJSON)",
							"    tests[\"Valid status\"] = dataJSON.status == 200;",
							"    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";",
							"    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;",
							"",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"}",
							" "
						]
					}
				}
			],
			"folder": "2548c3d3-4f67-4536-9a82-427f86c000db",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n    \n    var dataJSON = JSON.parse(responseBody);\n    console.log(dataJSON)\n    tests[\"Valid status\"] = dataJSON.status == 200;\n    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";\n    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;\n\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n}\n ",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "c536b2ed-7f34-4363-9190-ceeb980d52e5",
			"name": "Get cluster nodes",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/nodes",
			"description": "Get cluster details",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "9e432b4f-2978-46e4-bb33-ce37204dffae",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "c80ece91-a58a-414f-9dae-2d1bad51e0df",
			"name": "Get users",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/users",
			"description": "",
			"data": null,
			"dataMode": "params",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "109cbd18-10c0-4c99-bba6-c61e7b218700",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "c9ba4abe-4d87-49ab-82ca-633f5bf46e92",
			"name": "Create Profile GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Create a Google Kubernetes Engine profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"count\": 1,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                },\n                \"pool2\": {\n                    \"count\": 2,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "cb4acf5d-7f7f-48f9-8d0c-bb9ef8f4e791",
			"name": "Create organization",
			"url": "{{url}}/api/v1/orgs",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "a093e930-5f6c-486c-a0cd-4355bb5f61de",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"orgId\", dataJSON.id);",
							"    tests[\"Org ID: \" + dataJSON.id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "de16e6c1-f05f-4757-a857-b491c0baa57a",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"orgId\", dataJSON.id);\n    tests[\"Org ID: \" + dataJSON.id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"{{organization_name}}\"\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "cc8b19a6-bf26-4737-84ad-b70294f0fe50",
			"name": "Cluster Update GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Update an AKS cluster",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "37265830-f9a7-4967-bca4-cdbe793e27be",
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n  \"cloud\": \"google\",\n  \"properties\": {\n    \"google\": {\n       \"master\": {\n            \"version\": \"1.9.4-gke.1\"\n      },\n      \"nodePools\": {\n        \"pool1\": {\n            \"count\" : 2,\n            \"nodeInstanceType\": \"n1-standard-2\"\n        }\n      }\n    }\n  }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "cf105360-c8e8-4579-aa15-9dce684f4966",
			"name": "Cluster API endpoints",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/apiendpoint",
			"description": "List cluster public endpoints",
			"data": [
				{
					"key": "name",
					"type": "text",
					"value": "zeppelin-k8s-charts"
				}
			],
			"dataMode": "urlencoded",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded"
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"}"
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "d07209e3-83c1-4240-a689-f48dfb10b266",
			"name": "List Deployment",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
			"description": "List helm deployment",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "c45ecb31-d574-4ddf-aaa5-ae2d554e0832",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "bfe742d5-a5e9-4d6f-86af-4ab05f798df7",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\"name\": \"banzaicloud-stable/drone\"}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "d0f14246-5844-420e-b9e6-1fe9f1886ca4",
			"name": "Cluster Create Kubernetes",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Creates a K8S cluster in the Google Kubernetes Engine",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "fe99d227-5aab-4b02-a1a6-79cfd1fc8701",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 202) {",
							"    tests[\"Response Code 202\"] = responseCode.code == 202;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 202) {\n    tests[\"Response Code 202\"] = responseCode.code == 202;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    postman.setNextRequest(\"Cluster Status\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"kubernetes-{{username}}-{{$randomInt}}\",\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"cloud\": \"kubernetes\",\n\t\"properties\": {\n\t\t\"kubernetes\": {\n\t\t\t\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "d2e32c9c-c70d-437b-a16a-774ba8e0f4b8",
			"name": "Cluster List",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
			"description": "Get the cluster details",
			"data": [
				{
					"key": "name",
					"type": "text",
					"value": "zeppelin-k8s-charts"
				}
			],
			"dataMode": "urlencoded",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"}",
							"else if (responseCode.code === 404) {",
							"    tests[\"Cluster Node Found!\"] = false",
							"    postman.setNextRequest(null);",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    postman.setNextRequest(null);",
							"",
							"    ",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "edc9cb3e-af79-4ee0-b6e0-67ace3197b2d",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n}\nelse if (responseCode.code === 404) {\n    tests[\"Cluster Node Found!\"] = false\n    postman.setNextRequest(null);\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    postman.setNextRequest(null);\n\n    \n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "df8ba29e-a165-421d-b081-cb0ea5a9d019",
			"name": "Create Profile AWS",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Create an Amazon Web Services profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"eu-west-1\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"master\": {\n\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\"image\": \"ami-16bfeb6f\"\n\t\t\t},\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\t\"spotPrice\": \"0.2\",\n\t\t\t\t\t\"minCount\": 1,\n\t\t\t\t\t\"maxCount\": 2,\n\t\t\t\t\t\"image\": \"ami-16bfeb6f\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "e032462f-5b28-45ab-995d-2048d1ea25e2",
			"name": "Update Profile GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
			"description": "Update an existing Google Kubernetes Engine profile",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "PUT",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "6795b382-1ed8-42ca-8aa9-ffebb2f585dd",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "f4dc54db-d5c7-429c-8333-54c0dc4c0352",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"google\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool2\": {\n                    \"count\": 2,\n                    \"nodeInstanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "e1571989-b270-4b5f-98f1-b65013d0849a",
			"name": "Get cluster status",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
			"description": "Get cluster details",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"enabled": true
				}
			],
			"method": "GET",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "2918cae2-a5f9-47c2-979b-bfaf1152fdaf",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"cluster_id\", dataJSON.id);",
							"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
							"",
							"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
							"",
							"    postman.setNextRequest(\"Cluster Status\");",
							"}",
							"else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"cluster_id\", dataJSON.id);\n    tests[\"Cluster ID: \" + dataJSON.id] = true;\n\n    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;\n\n    postman.setNextRequest(\"Cluster Status\");\n}\nelse {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "e21a96fe-ca52-47ee-bd2a-73b19479ae07",
			"name": "Get GKE cloud config Kubernetes version",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"k8sVersion\"],\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"us-central1-a\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "e8098fe8-edf6-4bac-a81b-143ee4594178",
			"name": "Repository Delete",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
			"description": null,
			"data": [],
			"dataMode": null,
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				}
			],
			"method": "DELETE",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": null,
			"folder": "be27ba49-933c-4875-8495-47889ee6252d",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\n",
			"pathVariables": []
		},
		{
			"id": "e9434ffe-ca0f-4a7c-a3af-af1b75df7aa0",
			"name": "Deployment app Status",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
			"description": "Get deployment app status",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/json"
				}
			],
			"method": "HEAD",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"",
							"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
							"    console.log(\"Waiting...\" );",
							"    postman.setNextRequest(\"Delay Response 3\");",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"    ",
							"}",
							" ",
							"",
							"",
							""
						]
					}
				}
			],
			"folder": "2548c3d3-4f67-4536-9a82-427f86c000db",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n\n} else if (responseCode.code === 404 || responseCode.code === 503 )  {\n    console.log(\"Waiting...\" );\n    postman.setNextRequest(\"Delay Response 3\");\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n    \n}\n \n\n\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "ec2219d9-6c1c-4c86-ba96-ac2bdbe68de4",
			"name": "Update monitoring",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/monitoring",
			"description": "List cluster public endpoints",
			"data": [
				{
					"key": "name",
					"type": "text",
					"value": "zeppelin-k8s-charts"
				}
			],
			"dataMode": "urlencoded",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}"
				},
				{
					"key": "Content-Type",
					"value": "application/x-www-form-urlencoded"
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"if (responseCode.code === 200) {",
							"    tests[\"Response Code 200\"] = responseCode.code == 200;",
							"}"
						]
					}
				}
			],
			"folder": "0d6fb767-c3d3-4866-b9d5-775bbf970a80",
			"preRequestScript": null,
			"tests": "\nif (responseCode.code === 200) {\n    tests[\"Response Code 200\"] = responseCode.code == 200;\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/x-www-form-urlencoded\n",
			"pathVariables": []
		},
		{
			"id": "f00656e1-d264-4592-a96f-9fd28a1de8b4",
			"name": "Add secret GKE",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "cb45eb73-c3d2-4c5a-a67f-e02bc754273d",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
							"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"secret_id\", dataJSON.secret_id);\n    tests[\"Secret ID: \" + dataJSON.secret_id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"My google secret\",\n\t\"type\": \"google\",\n\t\"values\": {\n\t\t\"type\": \"{{gke_type}}\",\n\t\t\"project_id\": \"{{gke-projectId}}\",\n\t\t\"private_key_id\": \"{{private_key_id}}\",\n\t\t\"private_key\": \"{{private_key}}\",\n\t\t\"client_email\": \"{{client_email}}\",\n\t\t\"client_id\": \"{{client_id}}\",\n\t\t\"auth_uri\": \"{{auth_uri}}\",\n\t\t\"token_uri\": \"{{token_uri}}\",\n\t\t\"auth_provider_x509_cert_url\": \"{{auth_provider_x509_cert_url}}\",\n\t\t\"client_x509_cert_url\": \"{{client_x509_cert_url}}\"\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "f010bb6c-91a6-4322-a07d-a3ae8f3879c5",
			"name": "Get GKE cloud config ALL field",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": false
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [],
			"folder": "fef9b0ee-40cb-4326-b518-f829a53a93ac",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\n\t\t\t\"location\",\n\t\t\t\"instanceType\",\n\t\t\t\"k8sVersion\"\n\t\t],\n\t\t\"instanceType\":{\n\t\t\t\"location\": \"asia-east1-a\"\n\t\t},\n\t\t\"k8sVersion\": {\n\t\t\t\"location\": \"us-central1-a\"\n\t\t}\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\n//Content-Type: application/json\n",
			"pathVariables": []
		},
		{
			"id": "fcf0aa5e-1f6f-42f8-a51a-ff37e5662e66",
			"name": "Add secret KUBERNETES",
			"url": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
			"description": "",
			"data": [],
			"dataMode": "raw",
			"headerData": [
				{
					"key": "Authorization",
					"value": "Bearer {{token}}",
					"description": "",
					"enabled": true
				},
				{
					"key": "Content-Type",
					"value": "application/json",
					"description": "",
					"enabled": true
				}
			],
			"method": "POST",
			"pathVariableData": [],
			"queryParams": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"id": "cb45eb73-c3d2-4c5a-a67f-e02bc754273d",
						"type": "text/javascript",
						"exec": [
							"if (responseCode.code === 201) {",
							"    tests[\"Response Code 201\"] = responseCode.code == 201;",
							"",
							"    pm.environment.set(\"timestampHeader\", new Date());",
							"    var dataJSON = JSON.parse(responseBody);",
							"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
							"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
							"} else {",
							"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
							"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
							"    console.warn(responseBody);",
							"    postman.setNextRequest(null);",
							"}",
							""
						]
					}
				}
			],
			"folder": "e76bf8cc-84e6-4fa6-a6a4-ad5cadd17d6d",
			"preRequestScript": null,
			"tests": "if (responseCode.code === 201) {\n    tests[\"Response Code 201\"] = responseCode.code == 201;\n\n    pm.environment.set(\"timestampHeader\", new Date());\n    var dataJSON = JSON.parse(responseBody);\n    pm.environment.set(\"secret_id\", dataJSON.secret_id);\n    tests[\"Secret ID: \" + dataJSON.secret_id] = true;\n} else {\n    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );\n    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false\n    console.warn(responseBody);\n    postman.setNextRequest(null);\n}\n",
			"currentHelper": null,
			"helperAttributes": null,
			"collectionId": "88e9faec-75f0-4f88-a073-d6c3ac3b9a51",
			"rawModeData": "{\n\t\"name\": \"My kubernetes secret\",\n\t\"type\": \"kubernetes\",\n\t\"values\": {\n\t\t\"K8Sconfig\": \"{{K8Sconfig}}\"\n\t}\n}",
			"headers": "Authorization: Bearer {{token}}\nContent-Type: application/json\n",
			"pathVariables": []
		}
	]
}
