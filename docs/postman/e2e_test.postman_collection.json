{
	"info": {
		"_postman_id": "171c2976-1253-47b5-a910-73e9f43427fd",
		"name": "End2End TEST Organizations",
		"description": "Collection for K8S Cluster CRUD operations through the Banzai Cloud Pipeline API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "33250de7-5634-43fb-8cfd-37ea36eb4adb",
			"name": "Clusters",
			"item": [
				{
					"_postman_id": "33561738-47db-4754-b5bd-75a73324338b",
					"name": "Cluster Create ACSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"alibabacluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"alibaba\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"acsk\": {\n        \t\"regionId\": \"eu-central-1\",\n        \t\"zoneId\": \"eu-central-1a\",\n        \t\"masterInstanceType\": \"ecs.sn1ne.large\",\n        \t\"masterSystemDiskCategory\": \"cloud_efficiency\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 1,\n            \t\t\"image\": \"centos_7\",\n            \t\t\"instanceType\": \"ecs.sn1ne.large\",\n\t\t        \t\"systemDiskCategory\": \"cloud_efficiency\"\n            \t}\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "8f6831ad-c799-4b5c-b877-d32aa60b3dd7",
					"name": "Cluster Create EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"ec2\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n            },\n            \"master\": {\n                \"instanceType\": \"m4.xlarge\",\n                \"image\": \"ami-4d485ca7\"\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "3d1fc01f-1098-407c-8b38-66d7d6479e04",
					"name": "Cluster Create AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"azcluster{{username}}{{$randomInt}}\",\n  \"location\": \"westeurope\",\n  \"cloud\": \"azure\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"aks\": {\n        \t\"resourceGroup\": \"{{az-resource-group}}\",\n        \t\"kubernetesVersion\": \"1.9.2\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t},\n            \t\"pool2\": {\n            \t    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t}\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "4ad5f7f4-02fd-4da2-b580-b5f2f9466f39",
					"name": "Cluster Create EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"eks\": {\n\t\t\t\"version\":\"1.10\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"t2.medium\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false,\n\t                \"minCount\": 1,\n\t                \"maxCount\": 1,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-0ea01e1d1dea65b5\"\n            \t}\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "6b4211f2-ffc9-4887-b207-516723923b34",
					"name": "Cluster Create GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9\"\n            },\n            \"nodeVersion\":\"1.9\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n                    \"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "2fad503b-57b1-4e10-bfac-a94b43cb5874",
					"name": "Cluster Create OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"okecluster-demo-{{$randomInt}}\",\n    \"location\": \"eu-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"general\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "ea3e28a8-2991-4c07-97fc-3703527841fc",
					"name": "Cluster Create Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"dummy-cluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"dummyLocation\",\n    \"instanceType\": \"dummyInstanceType\",\n    \"secretId\": \"{{secret_id}}\",\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n            \n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "02a24991-d361-45f9-8f00-da4bab9aac90",
					"name": "Cluster Create Kubernetes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"kubernetes-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"kubernetes\",\n\t\"properties\": {\n\t\t\"kubernetes\": {\n\t\t\t\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "c13aa96d-814b-43dc-bdf3-351e56f66d0b",
					"name": "Cluster Create with profile AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"ec2\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "59e6d331-5573-4db9-9ed5-0eb978796515",
					"name": "Cluster Create with profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"eks\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "c3caef5e-756d-4702-bfcd-84c8cde00026",
					"name": "Cluster Create with profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"azcluster{{username}}{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"azure\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"aks\": {\n            \"resourceGroup\": \"{{az-resource-group}}\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "63f27c19-d262-4edd-89c1-7bce3f45bb67",
					"name": "Cluster Create with profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"google\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"gke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "2fdeb9b8-377d-466b-90e0-90a4859bf437",
					"name": "Cluster Create with profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"okecluster-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"oracle\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"oke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "46839b86-1a10-49f6-9b1c-19bf3464d6c3",
					"name": "Cluster Update ACSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud\": \"alibaba\",\n  \"properties\": {\n        \"alibaba\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"count\": 2\n            \t}\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "3e747c69-ae20-4ac4-b711-01acb76f68f0",
					"name": "Cluster Update AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "2561af2b-b8e1-49f3-b0c3-9db44c9ee8b3",
					"name": "Cluster Update AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "5d09cebe-54cc-4b63-8913-5ff70daefd65",
					"name": "Cluster Update EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"autoscaling\": true, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 3\n            \t},\n            \t\"newpool1\": {\n            \t\t\"autoscaling\": true, \n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "5af04f0f-8247-4463-9b8d-18c8a5e58d78",
					"name": "Cluster Update GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud\": \"google\",\n  \"properties\": {\n    \"gke\": {\n       \"master\": {\n            \"version\": \"1.9.4-gke.1\"\n      },\n      \"nodePools\": {\n        \"pool1\": {\n            \"autoscaling\": false, \n\t        \"minCount\": 1,\n\t        \"maxCount\": 2,\n            \"count\" : 2,\n            \"instanceType\": \"n1-standard-2\"\n        }\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "58d5c59a-1bda-4cd3-89d8-6659f046e44d",
					"name": "Cluster Update OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"oracle\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                },\n                \"pool2\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                }\n            }\n        }\n    }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "687f0765-9d47-4704-a3ed-d05f47911aed",
					"name": "Cluster Update Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n        \t\"node\": {\n            \t\"count\": 2\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "401bdc6b-1654-4496-a7e7-5b289defe122",
					"name": "Helm init",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"kube-system\",\n  \"service_account\": \"tiller\",\n  \"tiller_image\": \"gcr.io/kubernetes-helm/tiller:v2.7.2\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/helminit",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"helminit"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "bb737fad-ef05-4ecb-8e67-eca3cfb478a1",
					"name": "Install secrets",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"default\",\n  \"query\": {\n    \"tag\": \"\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "a89de512-ff75-4ed8-b61e-ff23d715cadb",
					"name": "Cluster Delete  FakeID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";",
									"    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";",
									"    tests[\"Valid code\"] = dataJSON.code == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/31231231241231231231321",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								"31231231241231231231321"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "bd904a2d-a094-40da-8912-ec3d035ea8db",
					"name": "Cluster Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "b035175e-67db-4c47-a866-5f562847a99b",
					"name": "Get cluster status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:clusterId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":clusterId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "clusterId",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "f5dc7567-7195-4b8c-8020-860703f7b94c",
					"name": "Fetch cluster Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/details",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"details"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "97cc3695-7cc1-48ad-99d9-0d52390a03a5",
					"name": "Fetch cluster pod details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/pods",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"pods"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "a4cd9eeb-3bec-4d5a-83d4-30c681d721d1",
					"name": "Get cluster nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/nodes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"nodes"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "4f886253-315f-4348-be18-297eeb39ca00",
					"name": "Cluster List",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Get the cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "4e4bcb80-8042-45fc-b9ff-58b0dff48860",
					"name": "Cluster Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/config",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"config"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "9df13fa3-6774-4fa5-8a05-8612ab2ec8aa",
					"name": "Cluster Public Endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/endpoints",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"endpoints"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "44c8f910-2045-4875-8274-eff64e5b31f0",
					"name": "Cluster API endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/apiendpoint",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"apiendpoint"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "5908a950-95d3-453d-a775-6e08e9948128",
					"name": "Update monitoring",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/monitoring",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"monitoring"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "e3dfc017-7665-4377-9f65-cfd1eb7b72e2",
					"name": "Re-run cluster posthooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"InstallLogging\": {\n    \t\"bucketName\": \"\",\n    \t\"region\": \"\",\n    \t\"secretId\": \"\",\n       \t\"tls\": {\n       \t\t\"tlsEnabled\": true,\n            \"genTlsSecretName\": \"loggingSecret\",\n            \"namespace\": \"default\",\n            \"tlsHost\": \"fluent\"\n       \t}\n    }\t\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/posthooks",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"posthooks"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "8c61674b-9db1-4425-be93-1fb3a35b59b5",
					"name": "Get cluster applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/application",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"application"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster applications"
					},
					"response": []
				},
				{
					"_postman_id": "103af2e9-0c27-4fff-af4d-6400e1db375f",
					"name": "Cluster Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"     postman.setNextRequest(\"Cluster Info\");",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 1\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get cluster status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "e97412a2-b8d5-4e7c-a53b-3ac75c0adb47",
			"name": "Catalog",
			"item": [
				{
					"_postman_id": "4a5e611a-80a7-46f0-bfd6-0d06daaa29f6",
					"name": "Catalog List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/catalogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"catalogs"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dad097ad-0ca7-42f2-8326-ca2ef62f0b58",
					"name": "Catalog Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/catalogs/zeppelin",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"catalogs",
								"zeppelin"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "f01cce31-4cb8-4a2f-9c8e-1452e2493e35",
			"name": "Deployments",
			"item": [
				{
					"_postman_id": "32f3c001-5033-4049-bfb0-1c8fd7167ec2",
					"name": "Deployment Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"",
									"    pm.environment.set(\"deployment_name\", dataJSON.releaseName);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable/drone\",\n\t\"values\": {\n\t\t\"server\": {\n\t\t\t\"persistentVolume\": {\n\t\t\t\t\"enabled\": false\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "3aed22e9-314b-4f3f-a28d-3dfd8c9cc3da",
					"name": "Deployment Create Fake APP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);",
									"    tests[\"Valid code\"] = dataJSON.status == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"pokol_app\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "aee22ce2-7be2-4a18-95e8-0ad3433d5bd6",
					"name": "List Deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"banzaicloud-stable/drone\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "List helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "00023f61-bfd4-43b0-90e2-5977c91664f4",
					"name": "Deployment Init Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 2\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Get deployment status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "76bb85cf-84f5-41d0-9fdc-0cf43f6d5a0a",
			"name": "Deployment",
			"item": [
				{
					"_postman_id": "b5418aed-52e8-4d73-96cf-a6f432267ad9",
					"name": "Deployment app Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 3\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Get deployment app status"
					},
					"response": []
				},
				{
					"_postman_id": "ab75a017-ee43-49e3-91f7-ccc3058e9b1a",
					"name": "Deployment Upgrade",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 501) {",
									"    tests[\"Response Code 501\"] = responseCode.code == 501;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Upgrades an existing deployment"
					},
					"response": []
				},
				{
					"_postman_id": "3587d480-1aa7-4759-bc06-b1a8504aad27",
					"name": "Deployment Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 200;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";",
									"    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "9641780c-cb81-45bd-946e-af5f687d4b49",
					"name": "Deployment Delete  FakeAPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 400) {",
									"    tests[\"Response Code 400\"] = responseCode.code == 400;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid code\"] = dataJSON.code == 400;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/pokollll-appp",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								"pokollll-appp"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								}
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "4e33f7ad-207c-4da8-8d5a-a21acb577ae8",
					"name": "Deployment Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/clusters/:cluster_id/deployments/:deployment_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"clusters",
								":cluster_id",
								"deployments",
								":deployment_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "cluster_id",
									"value": "{{cluster_id}}",
									"description": "Cluster identifier"
								},
								{
									"key": "deployment_name",
									"value": "{{deployment_name}}",
									"description": "Deployment's name"
								}
							]
						},
						"description": "Get Deployment details\n"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "5cda8498-a7d7-40f3-a69f-e0cb40172a0f",
			"name": "Profiles",
			"item": [
				{
					"_postman_id": "37a55a04-5d06-403f-bc1b-12d9a2686ea4",
					"name": "Create Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"eu-west-1\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"master\": {\n\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t},\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "3934869a-39f5-4ca0-a111-2b9c5e6d0893",
					"name": "Create Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"us-west-2\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "c174cd16-fe75-4408-99dc-beae9678db59",
					"name": "Create Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t},\n\t\t\t\t\"pool2\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create an Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "4f28e45c-4df2-4331-84d9-d145af839b86",
					"name": "Create Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                },\n                \"pool2\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "a5c1c1ef-a795-457b-b3a1-2a24877aa77c",
					"name": "Create Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "04e17ad1-732d-4766-9efb-b1dd0a4aa846",
					"name": "Update Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"ec2\": {\n      \"master\": {\n        \"instanceType\": \"m4.xlarge\",\n        \"image\": \"ami-4d485ca7\"\n      },\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-4d485ca7\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization Identifier"
								}
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "2c385301-f8aa-4f12-94ef-20b21121ac32",
					"name": "Update Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"eks\": {\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-4d485ca7\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "90a7dbca-a07a-4dd7-93a4-5e941993bd1b",
					"name": "Update Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "f9f6de29-b417-417f-995d-dd4cc197d8a1",
					"name": "Update Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool2\": {\n                    \"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "49b421d3-c199-4c3e-8e82-fda3e2b81f33",
					"name": "Update Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 2,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "87f94d21-a7c2-45fd-8472-2cdb63a04197",
					"name": "List profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster/:distribution_type",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster",
								":distribution_type"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "distribution_type",
									"value": "{{distribution_type}}",
									"description": "Profile's distribution type"
								}
							]
						},
						"description": "List the stored cluster profiles in pipeline"
					},
					"response": []
				},
				{
					"_postman_id": "03d59218-9ef1-4a1c-a790-e24231df3a55",
					"name": "Delete profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    postman.setNextRequest(\"List profiles\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/profiles/cluster/:distribution_type/:profile_name",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"profiles",
								"cluster",
								":distribution_type",
								":profile_name"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "distribution_type",
									"value": "{{distribution_type}}",
									"description": "Profile's distribution type"
								},
								{
									"key": "profile_name",
									"value": "{{profile_name}}",
									"description": "Profile's name"
								}
							]
						},
						"description": "Delete an existing cluster profile"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "eb455738-ee89-4314-83a9-c2037aa592a9",
			"name": "Secrets",
			"item": [
				{
					"_postman_id": "fb405d01-21e8-4450-9b03-95662c022798",
					"name": "List secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1dcfe873-571f-4761-8309-5a9707485348",
					"name": "Get secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "286bd090-4f56-4bb6-8a6e-5c3a9dab510b",
					"name": "List secret with filters",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets?type={{secret_type}}&tag={{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"query": [
								{
									"key": "type",
									"value": "{{secret_type}}",
									"description": "Cloud type"
								},
								{
									"key": "tag",
									"value": "{{tag}}",
									"description": "Secret's tag"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0c460aee-c905-4cb7-8a9d-38d5cc34545d",
					"name": "List allowed secret types and required keys",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/allowed/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"allowed",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "785965c9-0547-450a-8002-1b428833659c",
					"name": "Add secret Amazon",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret-{{$randomInt}}\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b1f8a249-9b7b-449d-859d-df237d4e1b7a",
					"name": "Add secret Alibaba",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-alibaba-secret-{{$randomInt}}\",\n\t\"type\": \"alibaba\",\n\t\"values\": {\n\t\t\"ALIBABA_ACCESS_KEY_ID\": \"{{ALIBABA_ACCESS_KEY_ID}}\",\n\t\t\"ALIBABA_ACCESS_KEY_SECRET\": \"{{ALIBABA_ACCESS_KEY_SECRET}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "052fe58a-3bca-4327-a755-42fccb9541ea",
					"name": "Add secret TLS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-tls-secret-{{$randomInt}}\",\n\t\"type\": \"tls\",\n\t\"values\": {\n\t\t\"hosts\": \"localhost\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6d5c5f43-f808-4689-91ce-b6a53318ef74",
					"name": "Add secret TLS Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-password-secret-{{$randomInt}}\",\n\t\"type\": \"password\",\n\t\"values\": {\n\t\t\"username\": \"root\",\n\t\t\"password\": \"randAlpha,16\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d5822c7e-3f1e-47d4-bc84-6629d2a3dbec",
					"name": "Add secret Azure",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-azure-secret-{{$randomInt}}\",\n\t\"type\": \"azure\",\n\t\"values\": {\n\t\t\"AZURE_CLIENT_ID\": \"{{AZURE_CLIENT_ID}}\",\n\t\t\"AZURE_CLIENT_SECRET\": \"{{AZURE_CLIENT_SECRET}}\",\n\t\t\"AZURE_TENANT_ID\": \"{{AZURE_TENANT_ID}}\",\n\t\t\"AZURE_SUBSCRIPTION_ID\": \"{{AZURE_SUBSCRIPTION_ID}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "be7f6f92-da14-4877-9afe-685938f198f2",
					"name": "Add secret Google",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-google-secret-{{$randomInt}}\",\n\t\"type\": \"google\",\n\t\"values\": {\n\t\t\"type\": \"{{gke_type}}\",\n\t\t\"project_id\": \"{{gke-projectId}}\",\n\t\t\"private_key_id\": \"{{private_key_id}}\",\n\t\t\"private_key\": \"{{private_key}}\",\n\t\t\"client_email\": \"{{client_email}}\",\n\t\t\"client_id\": \"{{client_id}}\",\n\t\t\"auth_uri\": \"{{auth_uri}}\",\n\t\t\"token_uri\": \"{{token_uri}}\",\n\t\t\"auth_provider_x509_cert_url\": \"{{auth_provider_x509_cert_url}}\",\n\t\t\"client_x509_cert_url\": \"{{client_x509_cert_url}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5b0bf7d7-13e5-4330-bde1-f56491b1ed7f",
					"name": "Add secret Oracle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-oci-secret-{{$randomInt}}\",\n\t\"type\": \"oracle\",\n\t\"version\": 1,\n\t\"values\": {\n\t\t\"user_ocid\": \"{{user_ocid}}\",\n\t\t\"api_key_fingerprint\": \"{{api_key_fingerprint}}\",\n\t\t\"api_key\": \"{{api_key}}\",\n\t\t\"region\": \"{{region}}\",\n\t\t\"compartment_ocid\": \"{{compartment_ocid}}\",\n\t\t\"tenancy_ocid\": \"{{tenancy_ocid}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "29375a25-264e-42bd-9c8c-8b4023869b46",
					"name": "Add secret SSH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-ssh-secret-{{$randomInt}}\",\n\t\"type\": \"ssh\",\n\t\"values\": {\n\t\t\"identifier\": \"\",\n\t\t\"private_key_data\": \"\",\n\t\t\"public_key_data\": \"\",\n\t\t\"public_key_fingerprint\": \"\",\n\t\t\"user\": \"\"\n\t}\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7e8eed1a-4447-4c81-bb09-288267f31642",
					"name": "Add secret KUBERNETES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-kubernetes-secret-{{$randomInt}}\",\n\t\"type\": \"kubernetes\",\n\t\"values\": {\n\t\t\"K8Sconfig\": \"{{K8Sconfig}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "78c6eddd-201d-4dd2-b1fb-660dde0bea10",
					"name": "Add secret Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-generic-secret-which-is-Docker-in-this-example-{{$randomInt}}\",\n\t\"type\": \"generic\",\n\t\"values\": {\n\t\t\"DOCKER_USERNAME\": \"{{DockerUsername}}\",\n\t\t\"DOCKER_PASSWORD\": \"{{DockerPassword}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b7bbca94-ff56-45a6-a060-fa0392cab034",
					"name": "Delete secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e50b350c-f20d-4ff2-8677-509d9484e27b",
					"name": "Update secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
									"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t},\n\t\"version\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "99d6f02a-2e47-4ce5-9791-b02ee8e25d58",
					"name": "Validate secret",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/secrets/:secret_id/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"secrets",
								":secret_id",
								"validate"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "secret_id",
									"value": "{{secret_id}}",
									"description": "Secret identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "10d58f44-daa7-45aa-9699-60af9f60cb22",
			"name": "Organization",
			"item": [
				{
					"_postman_id": "6a9c6b47-c505-471e-82c8-7565a7ede6e1",
					"name": "List organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "887fcc2a-9436-45b7-953b-9ce78f18d879",
					"name": "Get organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7685dbf0-32a1-4fb2-9aef-44860ff9346b",
					"name": "Create organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"orgId\", dataJSON.id);",
									"    tests[\"Org ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{organization_name}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "17b79d60-8787-4845-b174-ab7b2582b9ad",
					"name": "Delete organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "e0c58c12-9f52-4c76-b8c9-184a4c46f81e",
			"name": "Auth",
			"item": [
				{
					"_postman_id": "9006b006-12f4-4255-b12b-971595ffb130",
					"name": "Generate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    pm.environment.set(\"token\", dataJSON.token);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/tokens",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "848fd183-4086-43de-807c-3aa758b3a740",
			"name": "User",
			"item": [
				{
					"_postman_id": "0a6a1c97-9ccc-420f-bea8-ea263b759c98",
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"users"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "360bbaa4-4462-4960-9b14-f9b8043b22e6",
					"name": "Add users to organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/users/:user_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"users",
								":user_id"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"description": "User identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "3f33c472-f1d6-400b-b78a-50143a1d18dc",
			"name": "ObjectStore",
			"item": [
				{
					"_postman_id": "1ff42743-ae96-4465-8430-363b020d6c73",
					"name": "CheckBucket",
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName/?cloudType={{cloudType}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "{{cloudType}}",
									"description": "Bucket's cloud type"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f1cfb05d-ecbb-4dbf-b0f8-cfb1de8bde63",
					"name": "CreateBuckets Amazon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7a80643b-66aa-4a58-9106-34028af3a08e",
					"name": "CreateBuckets Azure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secert identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"location\": \"\",\n\t\t\t\"storageAccount\": \"\",\n\t\t\t\"resourceGroup\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a09a00e6-2b23-4cdc-a43c-31f065bd00e1",
					"name": "CreateBuckets Google",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"google\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cba67731-430e-46cf-916f-33c0fa576564",
					"name": "CreateBuckets Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secretId\": \"{{secret_id}}\",\n\t\"name\": \"bbb\",\n\t\"properties\": {\n\t\t\"oracle\": {\n\t\t\t\"location\": \"eu-frankfurt-1\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ce0ed4a2-8415-4a8e-9bcc-2880402e01de",
					"name": "ListBuckets Amazon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=amazon&location={{am-location}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon",
									"description": "Bucket's cloud: Amazon"
								},
								{
									"key": "location",
									"value": "{{am-location}}",
									"description": "Location of the buckets"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1a8165be-931d-43f2-9a32-dda5d749c8b6",
					"name": "ListBuckets Azure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=azure",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure",
									"description": "Bucket's cloud: Azure"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e0b0704b-87cc-4b6e-8f60-5564a30523a7",
					"name": "ListBuckets Google",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google",
									"description": "Bucket's cloud: Google"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d4cbecea-8ae2-4292-bc78-51275aade26e",
					"name": "ListBuckets Oracle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets?cloudType=oracle",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle",
									"description": "Bucket's cloud: Oracle"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "760ab1a7-763e-4e54-b832-000fa71b7307",
					"name": "DeleteBucket Amazon",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=amazon",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon",
									"description": "Bucket's cloud: Amazon"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "eee3ed0d-27bb-48a1-b198-dec9fad760d0",
					"name": "DeleteContainer Azure",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=azure&storageAccount={{az-storageAccount}}&resourceGroup={{az-resource-group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure",
									"description": "Bucket's cloud: Azure"
								},
								{
									"key": "storageAccount",
									"value": "{{az-storageAccount}}",
									"description": "Storage account name"
								},
								{
									"key": "resourceGroup",
									"value": "{{az-resource-group}}",
									"description": "Resource group name"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dce60262-05d2-47c3-9550-bdbc2d6a34dc",
					"name": "DeleteBucket Google",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName/?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google",
									"description": "Bucket's cloud: Google"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket's name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ada8f44c-a471-4a1b-84d7-c4b50d7ab0b5",
					"name": "DeleteBucket Oracle",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/buckets/:bucketName?cloudType=oracle&location=eu-frankfurt-1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"buckets",
								":bucketName"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle",
									"description": "Bucket's cloud: Oracle"
								},
								{
									"key": "location",
									"value": "eu-frankfurt-1",
									"description": "Location of the buckets"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "bucketName",
									"value": "{{bucketName}}",
									"description": "Bucket name"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "a5474dfa-e370-4d3f-9fcd-2947710e6093",
			"name": "Helm",
			"item": [
				{
					"_postman_id": "e8cbef90-fccd-4f81-a8e5-7c545917061b",
					"name": "Chart List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/charts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"charts"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7398eb8d-360d-477e-95b6-30a600946ea0",
					"name": "Chart Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/chart/:repoName/:chartName?version={{chartVersion}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"chart",
								":repoName",
								":chartName"
							],
							"query": [
								{
									"key": "version",
									"value": "{{chartVersion}}",
									"description": "Chart version"
								}
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								},
								{
									"key": "chartName",
									"value": "{{chartName}}",
									"description": "Chart name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "63fca612-d7a8-4e00-9c3f-8d7bf0781e1c",
					"name": "Repository List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								""
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "27804121-716b-4c59-9860-ed3df6ec09b4",
					"name": "Repository Add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								""
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c84a4d49-9b49-49c6-978e-2f71778cb029",
					"name": "Repository Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "06d89148-ec56-4aac-bcd0-a47d72d2d893",
					"name": "Repository Modify",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"cache\": \"statestore/colin014/helm/repository/cache/banzaicloud-stable-index.yaml\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\",\n\t\"username\": \"\",\n\t\"password\": \"\",\n\t\"certFile\": \"\",\n\t\"keyFile\": \"\",\n\t\"caFile\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b102a858-8eb5-4bd9-9f2b-cbc33a1f8b93",
					"name": "Repository Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/helm/repos/:repoName/update",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"helm",
								"repos",
								":repoName",
								"update"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "repoName",
									"value": "{{repoName}}",
									"description": "Repository name"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "100fe18f-2bbe-4df4-9fb1-578b5ee50eb2",
			"name": "Cloud info",
			"item": [
				{
					"_postman_id": "57cbe64c-90a4-42ed-9b49-389150bef553",
					"name": "Amazon",
					"item": [
						{
							"_postman_id": "781ffdb7-02ec-4149-90fd-6631bcec1b1d",
							"name": "Get Amazon cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "c24cae31-9d7a-4969-8ffd-09a4c8e316ec",
							"name": "Get Amazon cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=location",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "4f7096fb-7d6d-4c1a-baf2-252e3314548d",
							"name": "Get Amazon cloud config Images",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=image&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "tags",
											"value": "0.3.0",
											"description": "Image tags"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Image location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "dafac62c-bc4a-4ba7-a978-12a924fbefbf",
							"name": "Get Amazon cloud config InstanceType",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=instanceType&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "adca84c9-71ec-48f6-8404-83b871a0385e",
							"name": "Get Amazon cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/amazon?fields=location&fields=image&fields=instanceType&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "tags",
											"value": "0.3.0",
											"description": "Image tags"
										},
										{
											"key": "location",
											"value": "eu-west-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "02113860-5355-4de2-b91f-59c5efb07079",
					"name": "Azure",
					"item": [
						{
							"_postman_id": "d7ee9e16-c920-442f-acf0-edb21e5c4fb9",
							"name": "Get Azure cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "e64a0a97-2a5f-4086-8895-f357ec6b6ba5",
							"name": "Get Azure cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "2b7891a7-3efc-4a3b-be10-59b19ef595f3",
							"name": "Get Azure cloud config NodeInsatnceTypes",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=instanceType&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "e288ab0c-58cb-4010-9993-93c186184b34",
							"name": "Get Azure cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "e0248241-4c5a-4487-9de6-eb94eedd234a",
							"name": "Get Azure cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/azure?fields=location&fields=instanceType&fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eastus",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "ee10888d-a790-41a9-93e0-e88dd94f938b",
					"name": "Google",
					"item": [
						{
							"_postman_id": "c91ca451-afac-459c-b220-5f5a368ddacc",
							"name": "Get Google cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "6468fffd-17bf-4df7-acd0-acd9dd295729",
							"name": "Get Google cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filters for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "f6fe6d8e-45d5-44fb-9711-4f15618163d4",
							"name": "Get Google cloud config InsatnceTypes",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=instanceType&location=asia-east1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "asia-east1-a",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "3e4bc1b8-c2a1-4821-961a-e1e010d92fac",
							"name": "Get Google cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-central1-a",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "6fba9b52-313c-4a7d-ac83-b855def50408",
							"name": "Get Google cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/google?fields=location&fields=instanceType&fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-central1-a",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "77db5965-e2e4-433b-b5e1-10599fcd6b1e",
					"name": "Oracle",
					"item": [
						{
							"_postman_id": "2542a231-c731-4530-bf23-54139092ee0c",
							"name": "Get Oracle cloud config",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "c380d989-cb13-4f93-8d49-05605dcc565a",
							"name": "Get Oracle cloud config Locations",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "f51efc9e-268a-4efd-a892-e19569734719",
							"name": "Get Oracle cloud config Images",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=image&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "Image location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "388ac506-2866-435e-9b2c-af90b5949956",
							"name": "Get Oracle cloud config InstanceType",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=instanceType&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "Instance type location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "db1e228c-4973-4a1f-a4ba-a3d56cc17947",
							"name": "Get Oracle cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=k8sVersion&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "61d4a711-5218-4eb4-9cfb-a1f82cf33686",
							"name": "Get Oracle cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo/oracle?fields=location&fields=instanceType&fields=k8sVersion&fields=image&location=us-ashburn-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										":orgId",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "instanceType",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "k8sVersion",
											"description": "Filter for"
										},
										{
											"key": "fields",
											"value": "image",
											"description": "Filter for"
										},
										{
											"key": "location",
											"value": "us-ashburn-1",
											"description": "K8S version location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}",
											"description": "Secret identifier"
										}
									],
									"variable": [
										{
											"key": "orgId",
											"value": "{{orgId}}",
											"description": "Organization identifier"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "1dfded7c-e071-4efc-935b-62a803fd0989",
					"name": "Get supported clusters types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"project_id\": \"colin-pipeline\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/cloudinfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"cloudinfo"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "299acfb3-900e-4e8f-92fe-03c472b5bf4b",
			"name": "Applications",
			"item": [
				{
					"_postman_id": "dceebda0-ad07-440a-ac3a-ebde22d16907",
					"name": "Application List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "abb88c69-f8f5-48b0-a4b8-25bf824597c0",
					"name": "Application Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"MyApplication\",\n  \"catalogName\": \"mysql-simple\",\n  \"clusterId\": 0,\n  \"cluster\": {\n    \"name\": \"gkecluster-pipelineuser-1\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"profileName\": \"default\",\n    \"properties\": {\n      \"gke\": {\n        \"master\": {\n          \"version\": \"1.9.7-gke.3\"\n        },\n        \"nodePools\": {\n          \"pool1\": {\n            \"count\": 1,\n            \"instanceType\": \"n1-standard-2\"\n          }\n        },\n        \"nodeVersion\": \"1.9.7-gke.3\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "15bfd913-49ad-4989-bca5-3858bf87927a",
					"name": "Application Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/applications/:appId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"applications",
								":appId"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "appId",
									"value": "{{appId}}",
									"description": "Application identifier"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "f01bd3d8-51ef-496a-a27f-f404b1e36bd4",
			"name": "Resource groups",
			"item": [
				{
					"_postman_id": "b3ceaf5d-5a67-4f6a-ba0b-a6750c3692a6",
					"name": "List resource group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "890f3639-815c-40d6-a661-b26a4811ef1b",
					"name": "Create resource group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee8f4c9a-6dca-4238-8fbe-e7903649ba03",
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"newResourceGroupName\", dataJSON.name);",
									"    tests[\"Resource group name: \" + dataJSON.name] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "d83f80b5-f381-4b83-8aa6-bea86683d9e8",
					"name": "Delete resource group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "secretId",
								"value": "{{secret_id}}",
								"description": "Secret identifier"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/:orgId/azure/resourcegroups/:newResourceGroupName",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								":orgId",
								"azure",
								"resourcegroups",
								":newResourceGroupName"
							],
							"variable": [
								{
									"key": "orgId",
									"value": "{{orgId}}",
									"description": "Organization identifier"
								},
								{
									"key": "newResourceGroupName",
									"value": "{{newResourceGroupName}}",
									"description": "Resource group name to create"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "06c2b2c2-c234-446a-af72-6627e03f58ae",
			"name": "Get API Endpoints",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6Ijg5YjY3NzI1LTFmNjYtNDg1Mi1iNjljLTlhMzYyY2UwY2M1YiIsImlhdCI6MTUzMzkwODIwNywiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.EhwVGSXhgBb7IPKgo61R-VNRSi9qlHYCmjOpYKXQTDI",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "5cfcfbdb-9fe1-4cab-9b82-e3d6808a59d6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fc13eae6-5e8d-4024-9f9c-0fc8ef4b6e19",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}