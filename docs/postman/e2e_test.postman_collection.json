{
	"info": {
		"_postman_id": "289e07c4-44b3-4bcc-b037-65dee9228018",
		"name": "End2End TEST Organizations",
		"description": "Collection for K8S Cluster CRUD operations through the Banzai Cloud Pipeline API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "5c5e1ff6-3386-401f-b986-3fd6c804fc8d",
			"name": "Clusters",
			"item": [
				{
					"_postman_id": "e1d4df72-d609-4661-8dd4-f5d7edc3e801",
					"name": "Cluster Create EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"ec2\": {\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n            },\n            \"master\": {\n                \"instanceType\": \"m4.xlarge\",\n                \"image\": \"ami-4d485ca7\"\n            }\n        }\n    }\n}\n\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "cc27cb96-641b-412e-b8ae-ebb72732fff6",
					"name": "Cluster Create AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"azcluster{{username}}{{$randomInt}}\",\n  \"location\": \"westeurope\",\n  \"cloud\": \"azure\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"aks\": {\n        \t\"resourceGroup\": \"{{az-resource-group}}\",\n        \t\"kubernetesVersion\": \"1.9.2\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t},\n            \t\"pool2\": {\n            \t    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                \t\"instanceType\": \"Standard_B2ms\"\n            \t}\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "30be802e-9794-4e76-bfcc-ed448ce20337",
					"name": "Cluster Create EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"secretId\": \"{{secret_id}}\",\n  \"properties\": {\n        \"eks\": {\n\t\t\t\"version\":\"1.10\",\n            \"nodePools\": {\n            \t\"pool1\": {\n            \t\t\"instanceType\": \"t2.medium\",\n\t            \t\"spotPrice\": \"0.2\",\n            \t\t\"autoscaling\": false,\n\t                \"minCount\": 1,\n\t                \"maxCount\": 1,\n            \t\t\"count\": 1,\n\t                \"image\": \"ami-73a6e20b\"\n            \t}\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "6f7caaa2-5367-45ac-8573-5e0ae2b996e7",
					"name": "Cluster Create GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9\"\n            },\n            \"nodeVersion\":\"1.9\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n                    \"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "de0d798e-032b-4380-b178-5f757e15d9d5",
					"name": "Cluster Create OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"okecluster-demo-{{$randomInt}}\",\n    \"location\": \"eu-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"secretId\": \"{{secret_id}}\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"general\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "eb40d0ae-f604-46f4-9552-cece261554ba",
					"name": "Cluster Create Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"dummy-cluster-{{username}}-{{$randomInt}}\",\n    \"location\": \"dummyLocation\",\n    \"instanceType\": \"dummyInstanceType\",\n    \"secretId\": \"{{secret_id}}\",\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n            \n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "6dcc17d8-cd06-4c14-ad12-d61b669ed1fe",
					"name": "Cluster Create Kubernetes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"kubernetes-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"kubernetes\",\n\t\"properties\": {\n\t\t\"kubernetes\": {\n\t\t\t\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "d75f7311-83fb-495c-9d47-9868146afb76",
					"name": "Cluster Create with profile AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"awscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"ec2\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "5e469471-dee6-45cb-98c1-c2883fa608db",
					"name": "Cluster Create with profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"ekscluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"amazon\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"eks\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Amazon Web Services"
					},
					"response": []
				},
				{
					"_postman_id": "efac491d-37a2-4358-8f7f-5953f3130231",
					"name": "Cluster Create with profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"azcluster{{username}}{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"azure\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"aks\": {\n            \"resourceGroup\": \"{{az-resource-group}}\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Azure Container Service"
					},
					"response": []
				},
				{
					"_postman_id": "61204b2f-a7a5-43c8-9c75-f6c187cbea86",
					"name": "Cluster Create with profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"gkecluster-{{username}}-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"google\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"gke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "d73b463d-cb89-4f44-bc33-2078234f74e4",
					"name": "Cluster Create with profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"okecluster-{{$randomInt}}\",\n\t\"secretId\": \"{{secret_id}}\",\n\t\"cloud\": \"oracle\",\n\t\"profileName\": \"default\",\n\t\"properties\": {\n\t\t\"oke\": {\n           \n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Creates a K8S cluster in the Google Kubernetes Engine"
					},
					"response": []
				},
				{
					"_postman_id": "e3d84e73-48f5-4be3-a160-6f79fc4259ed",
					"name": "Cluster Update AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "c90ad0ff-9330-4828-8ac8-d2388f706b38",
					"name": "Cluster Update AWS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "5f59d87c-4ba2-47c8-ae64-3355ee3ff4eb",
					"name": "Cluster Update EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n            \t\t\"autoscaling\": true, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 3\n            \t},\n            \t\"newpool1\": {\n            \t\t\"autoscaling\": true, \n            \t\t\"instanceType\": \"m4.xlarge\",\n\t            \t\"spotPrice\": \"0.2\",\n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n\t                \"image\": \"ami-4d485ca7\"\t\n            \t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AWS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "31e349b8-d2ba-4be4-9ae8-291d937560b3",
					"name": "Cluster Update GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cloud\": \"google\",\n  \"properties\": {\n    \"gke\": {\n       \"master\": {\n            \"version\": \"1.9.4-gke.1\"\n      },\n      \"nodePools\": {\n        \"pool1\": {\n            \"autoscaling\": false, \n\t        \"minCount\": 1,\n\t        \"maxCount\": 2,\n            \"count\" : 2,\n            \"instanceType\": \"n1-standard-2\"\n        }\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "0cf91cec-7f90-4ccb-a278-01172ca3ec9a",
					"name": "Cluster Update OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"oracle\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                },\n                \"pool2\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 1,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"compute\"\n                \t}\n                }\n            }\n        }\n    }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "b983b0f7-36f5-4138-8b91-acba199984a5",
					"name": "Cluster Update Dummy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cloud\": \"dummy\",\n    \"properties\": {\n        \"dummy\": {\n        \t\"node\": {\n            \t\"count\": 2\n        \t}\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Update an AKS cluster"
					},
					"response": []
				},
				{
					"_postman_id": "941d812f-bf42-478a-bfb7-000158ac4575",
					"name": "Helm init",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"kube-system\",\n  \"service_account\": \"tiller\",\n  \"tiller_image\": \"gcr.io/kubernetes-helm/tiller:v2.7.2\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/helminit",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"helminit"
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "29856f15-78fe-42e2-b0e6-643069d94082",
					"name": "Install secrets",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 201;",
									"    tests[\"Valid message\"] = dataJSON.message == \"helm initialising\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"namespace\": \"default\",\n  \"query\": {\n    \"tag\": \"\"\n  }\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"secrets"
							]
						},
						"description": "Initialize helm in the cluster"
					},
					"response": []
				},
				{
					"_postman_id": "e9fbb5a0-2b73-4457-81a7-124068abf5c1",
					"name": "Cluster Delete  FakeID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = dataJSON.message == \"Cluster not found\";",
									"    tests[\"Valid Error\"] = dataJSON.error == \"record not found\";",
									"    tests[\"Valid code\"] = dataJSON.code == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/31231231241231231231321",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"31231231241231231231321"
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "d4e3907d-5260-4a19-a4dd-6a1c7afebf93",
					"name": "Cluster Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 202) {",
									"    tests[\"Response Code 202\"] = responseCode.code == 202;",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(155679)",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Delete a K8S cluster from the cloud, cleans up resources"
					},
					"response": []
				},
				{
					"_postman_id": "693aef42-b2d7-467e-8a02-e657e03ae0aa",
					"name": "Get cluster status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "c0567cca-f49d-481c-8772-5359b5d1f842",
					"name": "Fetch cluster Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/details",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"details"
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "ba8a318e-904c-4df1-9690-00a2f4d29735",
					"name": "Fetch cluster pod details",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"cluster_id\", dataJSON.id);",
									"    tests[\"Cluster ID: \" + dataJSON.id] = true;",
									"",
									"    tests[\"Valid id\"] = dataJSON.id == environment.cluster_id;",
									"",
									"    postman.setNextRequest(\"Cluster Status\");",
									"}",
									"else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/pods",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"pods"
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "c5e6f537-c5c0-46c1-818f-21febd3bf470",
					"name": "Get cluster nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/nodes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"nodes"
							]
						},
						"description": "Get cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "9b9fe9e5-7398-42b3-ac29-7573184ff64b",
					"name": "Cluster List",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters"
							]
						},
						"description": "Get the cluster details"
					},
					"response": []
				},
				{
					"_postman_id": "9e39f8d4-86fb-455c-8aa0-1f4a9f5bc0f5",
					"name": "Cluster Config",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/config",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"config"
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "2f01a423-3a71-4470-ac05-7f0bac0744e4",
					"name": "Cluster Public Endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/endpoints",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"endpoints"
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "9f228508-2914-48fc-92a0-34f89367df53",
					"name": "Cluster API endpoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/apiendpoint",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"apiendpoint"
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "3a59cdf9-493a-4e4e-8410-f287b922a68e",
					"name": "Update monitoring",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"type": "text",
									"value": "zeppelin-k8s-charts"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/monitoring",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"monitoring"
							]
						},
						"description": "List cluster public endpoints"
					},
					"response": []
				},
				{
					"_postman_id": "bff5546f-40c1-4754-b217-8fd4af897d07",
					"name": "Re-run cluster posthooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"}",
									"else if (responseCode.code === 404) {",
									"    tests[\"Cluster Node Found!\"] = false",
									"    postman.setNextRequest(null);",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"InstallLogging\": {\n    \t\"bucketName\": \"\",\n    \t\"region\": \"\",\n    \t\"secretId\": \"\",\n       \t\"tls\": {\n       \t\t\"tlsEnabled\": true,\n            \"genTlsSecretName\": \"loggingSecret\",\n            \"namespace\": \"default\",\n            \"tlsHost\": \"fluent\"\n       \t}\n    }\t\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/posthooks",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"posthooks"
							]
						},
						"description": "Get the cluster configuration file"
					},
					"response": []
				},
				{
					"_postman_id": "8239865f-2817-4b1d-8d2a-74e5a4541f58",
					"name": "Get cluster applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/application",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"application"
							]
						},
						"description": "Get cluster applications"
					},
					"response": []
				},
				{
					"_postman_id": "563fdc6c-2c46-40c8-b745-a3efb8986794",
					"name": "Cluster Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"     postman.setNextRequest(\"Cluster Info\");",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 1\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}"
							]
						},
						"description": "Get cluster status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "e976f888-aebb-45db-bac8-f702a7cb0a1b",
			"name": "Catalog",
			"item": [
				{
					"_postman_id": "327a904c-b1ff-42a6-8846-31eb7476b3f7",
					"name": "Catalog List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/catalogs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"catalogs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a2f99884-6b19-42f2-91df-546df74bea72",
					"name": "Catalog Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/catalogs/zeppelin",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"catalogs",
								"zeppelin"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "71f23749-9553-4a84-846e-9ec05954e0ff",
			"name": "Deployments",
			"item": [
				{
					"_postman_id": "6b77d37e-b777-4acb-8a15-ce2ada26cb93",
					"name": "Deployment Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"    var dataJSON = JSON.parse(responseBody);",
									"",
									"    pm.environment.set(\"deployment_name\", dataJSON.releaseName);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable/drone\",\n\t\"values\": {\n\t\t\"server\": {\n\t\t\t\"persistentVolume\": {\n\t\t\t\t\"enabled\": false\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments"
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "35b433f7-e844-42bb-8a3c-dd9cdbd35ed6",
					"name": "Deployment Create Fake APP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 404) {",
									"    tests[\"Response Code 404\"] = responseCode.code == 404;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    console.log(dataJSON)",
									"    tests[\"Valid Message\"] = /^Error loading chart: stat \\/opt\\/helm\\/.*.no such file or directory$/.test(dataJSON.message);",
									"    tests[\"Valid code\"] = dataJSON.status == \"404\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"pokol_app\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments"
							]
						},
						"description": "Create a helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "b30f6048-451e-4444-a060-d2a9328527cf",
					"name": "List Deployment",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"banzaicloud-stable/drone\"}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments"
							]
						},
						"description": "List helm deployment"
					},
					"response": []
				},
				{
					"_postman_id": "aa3351f8-6d25-444c-8448-1b3589039726",
					"name": "Deployment Init Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 2\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments"
							]
						},
						"description": "Get deployment status"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "f61a04af-6748-4b2e-bdd4-6663997240f3",
			"name": "Deployment",
			"item": [
				{
					"_postman_id": "800976f3-178a-4a06-91c9-726bbe2e90be",
					"name": "Deployment app Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"} else if (responseCode.code === 404 || responseCode.code === 503 )  {",
									"    console.log(\"Waiting...\" );",
									"    postman.setNextRequest(\"Delay Response 3\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"    ",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments",
								"{{deployment_name}}"
							]
						},
						"description": "Get deployment app status"
					},
					"response": []
				},
				{
					"_postman_id": "82746694-aac0-4852-8f9c-77e985a66dfb",
					"name": "Deployment Upgrade",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 501) {",
									"    tests[\"Response Code 501\"] = responseCode.code == 501;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments",
								"{{deployment_name}}"
							]
						},
						"description": "Upgrades an existing deployment"
					},
					"response": []
				},
				{
					"_postman_id": "e4d5e4f8-275e-4d9f-b60b-ecfc5475b924",
					"name": "Deployment Delete ",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid status\"] = dataJSON.status == 200;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Deployment deleted!\";",
									"    tests[\"Valid name\"] = dataJSON.name == environment.deployment_name;",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments",
								"{{deployment_name}}"
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "e1dd46c9-6c0c-4f82-a725-d930b0aea4a2",
					"name": "Deployment Delete  FakeAPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 400) {",
									"    tests[\"Response Code 400\"] = responseCode.code == 400;",
									"    ",
									"    var dataJSON = JSON.parse(responseBody);",
									"    console.log(dataJSON)",
									"    tests[\"Valid code\"] = dataJSON.code == 400;",
									"    tests[\"Valid message\"] = dataJSON.message == \"Error deleting deployment\";",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/pokollll-appp",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments",
								"pokollll-appp"
							]
						},
						"description": "Delete Deployment\n"
					},
					"response": []
				},
				{
					"_postman_id": "f0747dba-1477-4fc9-8ae3-0b664ace1362",
					"name": "Deployment Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/clusters/{{cluster_id}}/deployments/{{deployment_name}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"clusters",
								"{{cluster_id}}",
								"deployments",
								"{{deployment_name}}"
							]
						},
						"description": "Get Deployment details\n"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "242e9923-4c09-43fb-a866-1fefa97db971",
			"name": "Profiles",
			"item": [
				{
					"_postman_id": "3134df5b-4c3f-4d3e-a45a-db35349c57c5",
					"name": "Create Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"eu-west-1\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"ec2\": {\n\t\t\t\"master\": {\n\t\t\t\t\"instanceType\": \"m4.xlarge\",\n\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t},\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "b6303feb-d81f-4860-81d2-8c226056ded5",
					"name": "Create Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"us-west-2\",\n\t\"cloud\": \"amazon\",\n\t\"properties\": {\n\t\t\"eks\": {\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"instanceType\": \"m4.xlarge\",\n            \t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"image\": \"ami-4d485ca7\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Create an Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "64b19465-4028-4d45-a9cd-b0a402cec5cc",
					"name": "Create Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t},\n\t\t\t\t\"pool2\": {\n\t\t\t\t\t\"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Create an Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "19da6ee8-f044-4414-97ef-26badac77e6b",
					"name": "Create Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool1\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 1,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 1,\n                    \"instanceType\": \"n1-standard-2\"\n                },\n                \"pool2\": {\n                    \"autoscaling\": false, \n\t                \"minCount\": 2,\n\t                \"maxCount\": 2,\n            \t\t\"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "83e0c71f-2b35-44d2-ada7-7b22a85e7084",
					"name": "Create Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 3,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Create a Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "5820d926-1e79-432e-b554-086bffe5d0d7",
					"name": "Update Profile EC2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"eu-west-1\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"ec2\": {\n      \"master\": {\n        \"instanceType\": \"m4.xlarge\",\n        \"image\": \"ami-4d485ca7\"\n      },\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-4d485ca7\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "d3e3bc7e-eae6-4ef2-9716-de6ff9244ba5",
					"name": "Update Profile EKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{profile_name}}\",\n  \"location\": \"us-west-2\",\n  \"cloud\": \"amazon\",\n  \"instanceType\": \"m4.xlarge\",\n  \"properties\": {\n    \"eks\": {\n      \"node\": {\n        \"spotPrice\": \"0.2\",\n        \"minCount\": 2,\n        \"maxCount\": 4,\n        \"image\": \"ami-4d485ca7\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Update an existing Amazon Web Services profile"
					},
					"response": []
				},
				{
					"_postman_id": "4a424f65-939d-445c-aa2b-1e134804a034",
					"name": "Update Profile AKS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{profile_name}}\",\n\t\"location\": \"westeurope\",\n\t\"cloud\": \"azure\",\n\t\"properties\": {\n\t\t\"aks\": {\n\t\t\t\"kubernetesVersion\": \"1.9.2\",\n\t\t\t\"nodePools\": {\n\t\t\t\t\"pool1\": {\n\t\t\t\t\t\"count\": 2,\n\t\t\t\t\t\"instanceType\": \"Standard_D2_v2\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Update an existing Azure Container Service profile"
					},
					"response": []
				},
				{
					"_postman_id": "4cf9e947-b0f0-4e27-a170-8c6ac132f0f5",
					"name": "Update Profile GKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{profile_name}}\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"properties\": {\n        \"gke\": {\n            \"master\":{\n                \"version\":\"1.9.4-gke.1\"\n            },\n            \"nodeVersion\":\"1.9.4-gke.1\",\n            \"nodePools\": {\n                \"pool2\": {\n                    \"count\": 2,\n                    \"instanceType\": \"n1-standard-2\"\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "ed038462-38f1-4adb-bebc-25216f67a6c6",
					"name": "Update Profile OKE",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"basic-frankfurt-1\",\n    \"cloud\": \"oracle\",\n    \"location\": \"eu-frankfurt-1\",\n    \"properties\": {\n        \"oke\": {\n            \"version\":\"v1.9.7\",\n            \"nodePools\": {\n                \"pool1\": {\n                \t\"version\":\"v1.9.7\",\n                \t\"count\": 2,\n                \t\"image\": \"Oracle-Linux-7.4\",\n                \t\"shape\": \"VM.Standard1.1\",\n                \t\"labels\": {\n                \t\t\"type\": \"small-compute\"\n                \t}\n                }\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster"
							]
						},
						"description": "Update an existing Google Kubernetes Engine profile"
					},
					"response": []
				},
				{
					"_postman_id": "5d9b57fc-3602-4647-8e6a-88a2a5bdecb0",
					"name": "List profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{distribution_type}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster",
								"{{distribution_type}}"
							]
						},
						"description": "List the stored cluster profiles in pipeline"
					},
					"response": []
				},
				{
					"_postman_id": "1692d2cf-a2b3-4773-9a29-e2e2d003a295",
					"name": "Delete profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    postman.setNextRequest(\"List profiles\");",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/profiles/cluster/{{distribution_type}}/{{profile_name}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"profiles",
								"cluster",
								"{{distribution_type}}",
								"{{profile_name}}"
							]
						},
						"description": "Delete an existing cluster profile"
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "6f007518-b47e-4276-ab78-da1814845f15",
			"name": "Secrets",
			"item": [
				{
					"_postman_id": "864c07f6-a0c6-49b3-afb5-b9d632cee460",
					"name": "List secret",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "ef6a7ad0-1f6d-47d2-887f-83a76d470f53",
					"name": "Get secret",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets",
								"{{secret_id}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "e43a45e3-8a3e-4d7b-bda3-383d1769a241",
					"name": "List secret with filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets?type={{secret_type}}&tag={{tag}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							],
							"query": [
								{
									"key": "type",
									"value": "{{secret_type}}"
								},
								{
									"key": "tag",
									"value": "{{tag}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2a8b0110-5628-44c7-a002-80c1e2655e69",
					"name": "List allowed secret types and required keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/allowed/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"allowed",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "3f9661d2-4246-4355-be45-a5ae76f3c3aa",
					"name": "Add secret Amazon",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret-{{$randomInt}}\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "703ac688-0a8e-4b83-9941-bfeacdde8ee6",
					"name": "Add secret TLS",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-tls-secret-{{$randomInt}}\",\n\t\"type\": \"tls\",\n\t\"values\": {\n\t\t\"hosts\": \"localhost\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "37a8231c-1731-41ed-9a96-06537af11c4d",
					"name": "Add secret TLS Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-password-secret-{{$randomInt}}\",\n\t\"type\": \"password\",\n\t\"values\": {\n\t\t\"username\": \"root\",\n\t\t\"password\": \"randAlpha,16\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "75b39b2a-43ef-4cfc-a2c3-55ea3b835cd7",
					"name": "Add secret Azure",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-azure-secret-{{$randomInt}}\",\n\t\"type\": \"azure\",\n\t\"values\": {\n\t\t\"AZURE_CLIENT_ID\": \"{{AZURE_CLIENT_ID}}\",\n\t\t\"AZURE_CLIENT_SECRET\": \"{{AZURE_CLIENT_SECRET}}\",\n\t\t\"AZURE_TENANT_ID\": \"{{AZURE_TENANT_ID}}\",\n\t\t\"AZURE_SUBSCRIPTION_ID\": \"{{AZURE_SUBSCRIPTION_ID}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7327b9e1-ac37-42b8-8384-0920540c0f86",
					"name": "Add secret Google",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-google-secret-{{$randomInt}}\",\n\t\"type\": \"google\",\n\t\"values\": {\n\t\t\"type\": \"{{gke_type}}\",\n\t\t\"project_id\": \"{{gke-projectId}}\",\n\t\t\"private_key_id\": \"{{private_key_id}}\",\n\t\t\"private_key\": \"{{private_key}}\",\n\t\t\"client_email\": \"{{client_email}}\",\n\t\t\"client_id\": \"{{client_id}}\",\n\t\t\"auth_uri\": \"{{auth_uri}}\",\n\t\t\"token_uri\": \"{{token_uri}}\",\n\t\t\"auth_provider_x509_cert_url\": \"{{auth_provider_x509_cert_url}}\",\n\t\t\"client_x509_cert_url\": \"{{client_x509_cert_url}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "64479e8c-9f17-4be7-bffa-30134a247c25",
					"name": "Add secret Oracle",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-oci-secret-{{$randomInt}}\",\n\t\"type\": \"oracle\",\n\t\"version\": 1,\n\t\"values\": {\n\t\t\"user_ocid\": \"{{user_ocid}}\",\n\t\t\"api_key_fingerprint\": \"{{api_key_fingerprint}}\",\n\t\t\"api_key\": \"{{api_key}}\",\n\t\t\"region\": \"{{region}}\",\n\t\t\"compartment_ocid\": \"{{compartment_ocid}}\",\n\t\t\"tenancy_ocid\": \"{{tenancy_ocid}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "2ba4c8fa-745e-45cd-8154-b2fa890a027c",
					"name": "Add secret SSH",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-ssh-secret-{{$randomInt}}\",\n\t\"type\": \"ssh\",\n\t\"values\": {\n\t\t\"identifier\": \"\",\n\t\t\"private_key_data\": \"\",\n\t\t\"public_key_data\": \"\",\n\t\t\"public_key_fingerprint\": \"\",\n\t\t\"user\": \"\"\n\t}\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c84d47d9-b0db-4279-ab5c-9d47a82d6e60",
					"name": "Add secret KUBERNETES",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-kubernetes-secret-{{$randomInt}}\",\n\t\"type\": \"kubernetes\",\n\t\"values\": {\n\t\t\"K8Sconfig\": \"{{K8Sconfig}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "1a44b6f4-2804-42dc-be54-fefe2103c9f1",
					"name": "Add secret Generic",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.id);",
									"    tests[\"Secret ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-generic-secret-which-is-Docker-in-this-example-{{$randomInt}}\",\n\t\"type\": \"generic\",\n\t\"values\": {\n\t\t\"DOCKER_USERNAME\": \"{{DockerUsername}}\",\n\t\t\"DOCKER_PASSWORD\": \"{{DockerPassword}}\"\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a2658860-11cd-42fd-b539-b2a16ed262b5",
					"name": "Delete secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets",
								"{{secret_id}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "5b00c7cd-1762-4c50-b71f-3b7cbb1f3456",
					"name": "Update secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"secret_id\", dataJSON.secret_id);",
									"    tests[\"Secret ID: \" + dataJSON.secret_id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"my-amazon-secret\",\n\t\"type\": \"amazon\",\n\t\"values\": {\n\t\t\"AWS_ACCESS_KEY_ID\": \"{{AWS_ACCESS_KEY_ID}}\",\n\t\t\"AWS_SECRET_ACCESS_KEY\": \"{{AWS_SECRET_ACCESS_KEY}}\"\n\t},\n\t\"version\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets",
								"{{secret_id}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "6765d688-6f75-4bfd-88ef-79534d87d48b",
					"name": "Validate secret",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/secrets/{{secret_id}}/validate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"secrets",
								"{{secret_id}}",
								"validate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "0bb6948e-0635-4d48-a0a5-198f335d1adf",
			"name": "Organization",
			"item": [
				{
					"_postman_id": "3af9a8ea-5fad-4ef1-9f56-5d8b1ce25535",
					"name": "List organizations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "71af06eb-e175-48c8-8a6a-5fb6f6821b33",
					"name": "Get organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c4d9fda8-28bd-4f8a-b441-daf85cc5d8cb",
					"name": "Create organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"orgId\", dataJSON.id);",
									"    tests[\"Org ID: \" + dataJSON.id] = true;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{organization_name}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "20c5aee9-88bd-4eec-833f-940451d236a0",
					"name": "Delete organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 204) {",
									"    tests[\"Response Code 204\"] = responseCode.code == 204;",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "65ed3d71-910c-41fa-bc73-a30f54bf3d9b",
			"name": "Auth",
			"item": [
				{
					"_postman_id": "8c7a96a8-971c-4c2e-ab33-9ea806d5834c",
					"name": "Generate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Response Code 200\"] = responseCode.code == 200;",
									"    var dataJSON = JSON.parse(responseBody);",
									"    ",
									"    pm.environment.set(\"token\", dataJSON.token);",
									"",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    postman.setNextRequest(null);",
									"",
									"}",
									" ",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/tokens",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "2e5bbcf0-782b-4bd4-9709-7d9d11f50d81",
			"name": "User",
			"item": [
				{
					"_postman_id": "8830a03e-44d5-4d43-ae74-87797564a95b",
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "7bf0f944-ba9f-4693-ad5e-e506d1f91b16",
					"name": "Add users to organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/users/{{user_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"users",
								"{{user_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "e969f998-47e3-4501-a3f4-a42b6fc26fd4",
			"name": "ObjectStore",
			"item": [
				{
					"_postman_id": "02d38f16-0929-437a-9ed6-8a851bca5a65",
					"name": "CheckBucket",
					"request": {
						"method": "HEAD",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets/{{bucketName}}/?cloudType={{cloudType}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets",
								"{{bucketName}}",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "{{cloudType}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b3a2aaf7-445b-4d12-921e-0054a68b6158",
					"name": "CreateBuckets Amazon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"amazon\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "c75a2e68-6721-4b40-8669-b79fd354d7bf",
					"name": "CreateBuckets Azure",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"azure\": {\n\t\t\t\"location\": \"\",\n\t\t\t\"storageAccount\": \"\",\n\t\t\t\"resourceGroup\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "00258f3d-ee31-4d53-becb-a5f0cbd336d1",
					"name": "CreateBuckets Google",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"name\": \"\",\n\t\"properties\": {\n\t\t\"google\": {\n\t\t\t\"location\": \"\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "8122a864-ad72-4e04-807c-9a9876c49da0",
					"name": "CreateBuckets Oracle",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"name\": \"bbb\",\n\t\"properties\": {\n\t\t\"oracle\": {\n\t\t\t\"location\": \"eu-frankfurt-1\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "92c0f7bb-3a63-45e6-9769-55372c3ae99f",
					"name": "ListBuckets Amazon",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets?cloudType=amazon&location={{am-location}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon"
								},
								{
									"key": "location",
									"value": "{{am-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "210530cf-3ffd-4c05-b906-2ed6622a7342",
					"name": "ListBuckets Azure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets?cloudType=azure",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f90cd186-51d7-47dc-87e4-49cb5412d207",
					"name": "ListBuckets Google",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "dae23517-2dda-4eca-bbb2-d1301f916776",
					"name": "ListBuckets Oracle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets?cloudType=oracle",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "0ce316fd-c1b2-478e-9c14-72d3f33a0f7f",
					"name": "DeleteBucket Google",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets/{{bucketName}}/?cloudType=google",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets",
								"{{bucketName}}",
								""
							],
							"query": [
								{
									"key": "cloudType",
									"value": "google"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f0b0fd7e-df96-4704-9848-04cd7b72a748",
					"name": "DeleteBucket Amazon",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets/{{bucketName}}?cloudType=amazon",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets",
								"{{bucketName}}"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "amazon"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "54bc0d99-1267-45fe-abdb-b55407bdf1a0",
					"name": "DeleteBucket Oracle",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets/{{bucketName}}?cloudType=oracle&location=eu-frankfurt-1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets",
								"{{bucketName}}"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "oracle"
								},
								{
									"key": "location",
									"value": "eu-frankfurt-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "10c63940-b83a-4431-9f25-b3d793e19843",
					"name": "DeleteContainer Azure",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "secretId",
								"value": "{{secret_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/buckets/{{bucketName}}?cloudType=azure&storageAccount={{az-storageAccount}}&resourceGroup={{az-resource-group}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"buckets",
								"{{bucketName}}"
							],
							"query": [
								{
									"key": "cloudType",
									"value": "azure"
								},
								{
									"key": "storageAccount",
									"value": "{{az-storageAccount}}"
								},
								{
									"key": "resourceGroup",
									"value": "{{az-resource-group}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "63cc8673-3fd2-4af6-9292-4d8427a7bc58",
			"name": "Helm",
			"item": [
				{
					"_postman_id": "c972df7f-c39f-4e04-b2e1-cac76bfa2b97",
					"name": "Chart List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/charts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"charts"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "660510c8-bcd4-4a80-9d25-15f5b56f96d0",
					"name": "Chart Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/chart/{{repoName}}/{{chartName}}?{{chartVersion}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"chart",
								"{{repoName}}",
								"{{chartName}}"
							],
							"query": [
								{
									"key": "{{chartVersion}}",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "eb9ee284-2754-433c-bb7a-31ddd580c516",
					"name": "Repository List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"repos",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "a1fd5ba6-3e1f-4210-a975-1d51b805cd98",
					"name": "Repository Add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"repos",
								""
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "faecdaed-632f-4eed-9817-2f095e5ff371",
					"name": "Repository Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"repos",
								"{{repoName}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "cd93d411-8327-43e8-ab60-28c79c7b55c9",
					"name": "Repository Modify",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"banzaicloud-stable\",\n\t\"cache\": \"statestore/colin014/helm/repository/cache/banzaicloud-stable-index.yaml\",\n\t\"url\": \"http://kubernetes-charts.banzaicloud.com\",\n\t\"username\": \"\",\n\t\"password\": \"\",\n\t\"certFile\": \"\",\n\t\"keyFile\": \"\",\n\t\"caFile\": \"\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"repos",
								"{{repoName}}"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f146641f-425c-452c-848e-67cf30e67248",
					"name": "Repository Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/helm/repos/{{repoName}}/update",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"helm",
								"repos",
								"{{repoName}}",
								"update"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "511b1319-416e-47da-829f-f2b971c7cf8e",
			"name": "Cloud info",
			"item": [
				{
					"_postman_id": "0f3aa9c3-21fd-4170-b6b3-3931764c5ad2",
					"name": "Amazon",
					"item": [
						{
							"_postman_id": "b21f7587-60f0-4b89-a3d1-48d6a0a9519a",
							"name": "Get Amazon cloud config",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"amazon"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "02367ed5-e078-4f1e-9b1c-ca21b2ee100c",
							"name": "Get Amazon cloud config Locations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon?fields=location",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "8cb09194-28f1-41ed-adc2-f959470e3e24",
							"name": "Get Amazon cloud config Images",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon?fields=image&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "image"
										},
										{
											"key": "tags",
											"value": "0.3.0"
										},
										{
											"key": "location",
											"value": "eu-west-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "e9c6a2aa-faec-4e9b-864f-19495242316d",
							"name": "Get Amazon cloud config NodeInstanceType",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon?fields=instanceType&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "location",
											"value": "eu-west-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "a9c022ae-ca1a-4038-961f-99370f744baf",
							"name": "Get Amazon cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/amazon?fields=location&fields=image&fields=instanceType&tags=0.3.0&location=eu-west-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"amazon"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "fields",
											"value": "image"
										},
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "tags",
											"value": "0.3.0"
										},
										{
											"key": "location",
											"value": "eu-west-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "a782df79-51a4-4bd2-9273-c2c5444f4b2e",
					"name": "Azure",
					"item": [
						{
							"_postman_id": "8f5a2a1a-d4a0-4dfe-889e-4a30ec9542f9",
							"name": "Get Azure cloud config",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"azure"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "51d49d22-3774-4ae8-80df-39974e4c0fc7",
							"name": "Get Azure cloud config Locations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"secret_id\": \"{{secret_id}}\",\n\t\"filter\": {\n\t\t\"fields\": [\"location\"]\n\t}\n}"
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "3f515e21-6434-4b65-8681-8d23a7d92a23",
							"name": "Get Azure cloud config NodeInsatnceTypes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure?fields=instanceType&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "location",
											"value": "eastus"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "4ce83c70-f76e-498e-9b1b-2d0a98ae6f62",
							"name": "Get Azure cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure?fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "location",
											"value": "eastus"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "6fa73214-df38-4c66-b128-7183f4e25f3d",
							"name": "Get Azure cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/azure?fields=location&fields=instanceType&fields=k8sVersion&location=eastus&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"azure"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "location",
											"value": "eastus"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "8228451d-b691-44e0-862e-e5eeddca8720",
					"name": "Google",
					"item": [
						{
							"_postman_id": "94464613-4d04-4956-b16e-e769f16be086",
							"name": "Get Google cloud config",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"google"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "fedbed8d-a3fb-4475-b7ce-ea03e2f30a92",
							"name": "Get Google cloud config Locations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google?fields=location&=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "",
											"value": "location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "f790baae-851a-45b6-a793-8c6ee9ac1e28",
							"name": "Get Google cloud config NodeInsatnceTypes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google?fields=instanceType&location=asia-east1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "location",
											"value": "asia-east1-a"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "879fe4f7-2db2-43b7-9ab8-b4efbb44b279",
							"name": "Get Google cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google?fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "location",
											"value": "us-central1-a"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "62a283bb-c718-495c-be93-74269a3ad89a",
							"name": "Get Google cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/google?fields=location&fields=instanceType&fields=k8sVersion&location=us-central1-a&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"google"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "location",
											"value": "us-central1-a"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "2f00849f-5e3d-4c7e-a38d-78cff4964122",
					"name": "Oracle",
					"item": [
						{
							"_postman_id": "34be7851-1806-4d98-8faf-9fb7ce1add8d",
							"name": "Get Oracle cloud config",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "26719998-df24-41e3-b106-485cb695c074",
							"name": "Get Oracle cloud config Locations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle?fields=location&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "338a9f13-fd28-4fed-b9d3-8d7187882079",
							"name": "Get Oracle cloud config Images",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle?fields=image&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "image"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "6091e359-28a8-4a73-a9b8-cbad022968ef",
							"name": "Get Oracle cloud config NodeInstanceType",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle?fields=instanceType&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "9dd16832-0824-4cf8-af20-1fd5bbbbbd27",
							"name": "Get Oracle cloud config Kubernetes version",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle?fields=k8sVersion&location=eu-frankfurt-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "location",
											"value": "eu-frankfurt-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"_postman_id": "ddd66d7d-da04-47ef-9008-7ace965dca22",
							"name": "Get Oracle cloud config ALL field",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo/oracle?fields=location&fields=instanceType&fields=k8sVersion&fields=image&location=us-ashburn-1&secret_id={{secret_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"v1",
										"orgs",
										"{{orgId}}",
										"cloudinfo",
										"oracle"
									],
									"query": [
										{
											"key": "fields",
											"value": "location"
										},
										{
											"key": "fields",
											"value": "instanceType"
										},
										{
											"key": "fields",
											"value": "k8sVersion"
										},
										{
											"key": "fields",
											"value": "image"
										},
										{
											"key": "location",
											"value": "us-ashburn-1"
										},
										{
											"key": "secret_id",
											"value": "{{secret_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"_postman_id": "59655754-b571-47a9-8aa1-e72f21733096",
					"name": "Get supported clusters types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"project_id\": \"colin-pipeline\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/cloudinfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"cloudinfo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "cb95c3a0-9dce-451e-bf5c-fbdc3caf3fec",
			"name": "Applications",
			"item": [
				{
					"_postman_id": "9de73030-a0e4-406d-a2e7-a3e9324dd55a",
					"name": "Application List",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "bc8a05d8-b38b-44e0-b8c7-8b193856b22e",
					"name": "Application Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"MyApplication\",\n  \"catalogName\": \"mysql-simple\",\n  \"clusterId\": 0,\n  \"cluster\": {\n    \"name\": \"gkecluster-pipelineuser-1\",\n    \"location\": \"us-central1-a\",\n    \"cloud\": \"google\",\n    \"secretId\": \"{{secret_id}}\",\n    \"profileName\": \"default\",\n    \"properties\": {\n      \"gke\": {\n        \"master\": {\n          \"version\": \"1.9.7-gke.3\"\n        },\n        \"nodePools\": {\n          \"pool1\": {\n            \"count\": 1,\n            \"instanceType\": \"n1-standard-2\"\n          }\n        },\n        \"nodeVersion\": \"1.9.7-gke.3\"\n      }\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/applications",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "beb9dd74-0243-40bf-9d53-6be049c7d1b0",
					"name": "Application Details",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/applications/{{appId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"applications",
								"{{appId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "c2c9f9c2-774d-4d95-a1c6-a3cabd9a3d01",
			"name": "Resource groups",
			"item": [
				{
					"_postman_id": "b52bd621-b33a-4a4e-bd0c-f7b53752ddce",
					"name": "List resource group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/azure/resourcegroups?secretId={{secret_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"azure",
								"resourcegroup"
							],
							"query": [
								{
									"key": "secretId",
									"value": "{{secret_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "b52bdba0-28bb-4751-afcd-e71a3e899159",
					"name": "Create resource group",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee8f4c9a-6dca-4238-8fbe-e7903649ba03",
								"type": "text/javascript",
								"exec": [
									"if (responseCode.code === 201) {",
									"    tests[\"Response Code 201\"] = responseCode.code == 201;",
									"",
									"    pm.environment.set(\"timestampHeader\", new Date());",
									"    var dataJSON = JSON.parse(responseBody);",
									"    pm.environment.set(\"newResourceGroupName\", dataJSON.name);",
									"    tests[\"Resource group name: \" + dataJSON.name] = true;",
									"",
									"    tests[\"Response Time\"] = pm.expect(pm.response.responseTime).to.be.below(80500)",
									"} else {",
									"    console.warn(\"Unknown  statusCode! -> \"+ responseCode.code );",
									"    tests[\"Unknown statusCode! -> \" + responseCode.code ] = false",
									"    console.warn(responseBody);",
									"    postman.setNextRequest(null);",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/azure/resourcegroups",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"azure",
								"resourcegroup"
							]
						}
					},
					"response": []
				},
				{
					"_postman_id": "f8e19f4b-a6cb-4c37-87d4-6133a2b3f97b",
					"name": "Delete resource group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"newResourceGroupName\",\n\t\"location\": \"westeurope\",\n\t\"secretId\": \"{{secret_id}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/orgs/{{orgId}}/azure/resourcegroups/{{newResourceGroupName}}?secretId={{secret_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"orgs",
								"{{orgId}}",
								"azure",
								"resourcegroup",
								"{{newResourceGroupName}}"
							],
							"query": [
								{
									"key": "secretId",
									"value": "{{secret_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"_postman_id": "9e27823b-ab3d-40fb-9db3-389a2b6e4055",
			"name": "Get API Endpoints",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/api",
					"host": [
						"{{url}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		}
	]
}
