version: "3.1"

services:
    db:
        image: mysql:5.7
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        environment:
            MYSQL_ROOT_PASSWORD: example
            MYSQL_DATABASE: pipeline
            MYSQL_USER: sparky
            MYSQL_PASSWORD: sparky123
        volumes:
            - ${PWD}/database/docker-init.sql:/docker-entrypoint-initdb.d/docker-init.sql

    adminer:
        image: adminer

    vault:
        image: vault:0.11.5
        command: server
        cap_add:
            - IPC_LOCK
        volumes:
            - $HOME:/home/vault
            - ./scripts/vault.hcl:/vault/config/vault.hcl

    vault-unsealer:
        image: banzaicloud/bank-vaults:0.3.16
        depends_on:
            - vault
        restart: "always"
        command: unseal --init --mode file --file-path /vault/keys
        environment:
            VAULT_ADDR: http://vault:8200
        volumes:
            - ./scripts/vault-config.yml:/vault-config.yml
            - ./scripts/wait-for-it.sh:/wait-for-it.sh

    vault-configurer:
        image: banzaicloud/bank-vaults:0.3.16
        depends_on:
            - db
            - vault
            - vault-unsealer
        restart: "always"
        entrypoint: "./wait-for-it.sh"
        command: db:3306 -- bank-vaults configure --mode file --file-path /vault/keys
        environment:
            VAULT_ADDR: http://vault:8200
        volumes:
            - ./scripts/vault-config.yml:/vault-config.yml
            - ./scripts/wait-for-it.sh:/wait-for-it.sh

    vault-token-helper:
        image: alpine
        depends_on:
            - vault-configurer
        restart: on-failure
        command: cp /vault/keys/vault-root /root/.vault-token
        volumes:
            - $HOME:/root

    cicd-server:
        image: banzaicloud/cicd:master
        depends_on:
            - db
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        entrypoint:
            - /bin/cicd-server
        environment:
            CICD_HOST:                 http://localhost:8000
            CICD_DEBUG:                "true"
            CICD_GITHUB:               "true"
            CICD_GITHUB_CLIENT:
            CICD_GITHUB_SECRET:
            CICD_OPEN:                 "true"
            CICD_ORGS:
            CICD_PROVIDER:             github
            CICD_DATABASE_DRIVER:      mysql
            CICD_DATABASE_DATASOURCE:  root:example@tcp(db:3306)/drone?parseTime=true
            CICD_SECRET: "s3cr3t"
            CICD_REPO_CONFIG: ".banzaicloud/pipeline.yaml"

    cicd-agent:
        image: banzaicloud/cicd:master
        depends_on:
            - cicd-server
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        entrypoint:
            - /bin/cicd-agent
        environment:
            CICD_SERVER: cicd-server:9000
            CICD_SECRET: "s3cr3t"

    ui:
        image: banzaicloud/pipeline-web:latest
        environment:
            TAG: local

    uiproxy:
        build: etc/docker/uiproxy
        depends_on:
            - ui
        environment:
            CLOUDINFO_URL: https://beta.banzaicloud.io/cloudinfo
            RECOMMENDER_URL: https://beta.banzaicloud.io/recommender

    dex:
        command: serve /dex-config.yml
        image: quay.io/dexidp/dex:v2.13.0
        volumes:
            - ./scripts/dex-config.yml:/dex-config.yml
