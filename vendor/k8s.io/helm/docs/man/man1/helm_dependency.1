.TH "HELM" "1" "May 2017" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
helm\-dependency \- manage a chart's dependencies


.SH SYNOPSIS
.PP
\fBhelm dependency update|build|list\fP


.SH DESCRIPTION
.PP
Manage the dependencies of a chart.

.PP
Helm charts store their dependencies in 'charts/'. For chart developers, it is
often easier to manage a single dependency file ('requirements.yaml')
which declares all dependencies.

.PP
The dependency commands operate on that file, making it easy to synchronize
between the desired dependencies and the actual dependencies stored in the
'charts/' directory.

.PP
A 'requirements.yaml' file is a YAML file in which developers can declare chart
dependencies, along with the location of the chart and the desired version.
For example, this requirements file declares two dependencies:

.PP
.RS

.nf
# requirements.yaml
dependencies:
\- name: nginx
  version: "1.2.3"
  repository: "https://example.com/charts"
\- name: memcached
  version: "3.2.1"
  repository: "https://another.example.com/charts"

.fi
.RE

.PP
The 'name' should be the name of a chart, where that name must match the name
in that chart's 'Chart.yaml' file.

.PP
The 'version' field should contain a semantic version or version range.

.PP
The 'repository' URL should point to a Chart Repository. Helm expects that by
appending '/index.yaml' to the URL, it should be able to retrieve the chart
repository's index. Note: 'repository' cannot be a repository alias. It must be
a URL.

.PP
Starting from 2.2.0, repository can be defined as the path to the directory of
the dependency charts stored locally. The path should start with a prefix of
"file://". For example,

.PP
.RS

.nf
# requirements.yaml
dependencies:
\- name: nginx
  version: "1.2.3"
  repository: "file://../dependency\_chart/nginx"

.fi
.RE

.PP
If the dependency chart is retrieved locally, it is not required to have the
repository added to helm by "helm add repo". Version matching is also supported
for this case.


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-debug\fP[=false]
    enable verbose output

.PP
\fB\-\-home\fP="~/.helm"
    location of your Helm config. Overrides $HELM\_HOME

.PP
\fB\-\-host\fP="localhost:44134"
    address of tiller. Overrides $HELM\_HOST

.PP
\fB\-\-kube\-context\fP=""
    name of the kubeconfig context to use

.PP
\fB\-\-tiller\-namespace\fP="kube\-system"
    namespace of tiller


.SH SEE ALSO
.PP
\fBhelm(1)\fP, \fBhelm\-dependency\-build(1)\fP, \fBhelm\-dependency\-list(1)\fP, \fBhelm\-dependency\-update(1)\fP


.SH HISTORY
.PP
19\-May\-2017 Auto generated by spf13/cobra
