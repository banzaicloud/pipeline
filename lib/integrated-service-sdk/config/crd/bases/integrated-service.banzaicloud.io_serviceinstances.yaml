
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: serviceinstances.integrated-service.banzaicloud.io
spec:
  group: integrated-service.banzaicloud.io
  names:
    kind: ServiceInstance
    listKind: ServiceInstanceList
    plural: serviceinstances
    singular: serviceinstance
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ServiceInstance is the Schema for the serviceinstances API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceInstanceSpec defines the desired state of ServiceInstance.
          properties:
            config:
              type: string
            enabled:
              type: boolean
            service:
              type: string
            version:
              type: string
          type: object
        status:
          description: ServiceInstanceStatus defines the observed state of ServiceInstance.
          properties:
            availableVersions:
              additionalProperties:
                items:
                  type: string
                type: array
              description: AvailableVersions defines the upgrade steps that need to
                be taken to reach a certain version
              type: object
            nextVersion:
              description: NextVersion represents the next version that the resource
                is converging to
              type: string
            phase:
              description: Phase represents the internal state of the resource
              type: string
            status:
              description: Status represents the management state of the service -
                Unmanaged if the service is not configured actively - Managed if the
                service is actively configured and there are no problems found - Invalid
                if reconciliation is blocked due to misconfiguration
              type: string
            version:
              description: Version is the last version that has successfully been
                installed
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
