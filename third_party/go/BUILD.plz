config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

go_module(
    name = "cloud.google.com__go",
    install = [
        "compute/metadata",
        "iam",
        "iam/credentials/apiv1",
        "internal",
        "internal/optional",
        "internal/trace",
        "internal/version",
    ],
    module = "cloud.google.com/go",
    version = "v0.54.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":go.opencensus.io",
        ":google.golang.org__api",
        ":google.golang.org__genproto",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "cloud.google.com__go__storage",
    install = ["."],
    module = "cloud.google.com/go/storage",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
    deps = [
        ":cloud.google.com__go",
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__api",
        ":google.golang.org__genproto",
    ],
)

go_module(
    name = "emperror.dev__emperror",
    install = ["."],
    module = "emperror.dev/emperror",
    version = "v0.32.0",
    visibility = ["PUBLIC"],
    deps = [":emperror.dev__errors"],
)

go_module(
    name = "emperror.dev__errors",
    install = [
        ".",
        "match",
        "utils/keyval",
    ],
    module = "emperror.dev/errors",
    version = "v0.8.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":go.uber.org__multierr",
    ],
)

go_module(
    name = "emperror.dev__handler__logur",
    install = ["."],
    module = "emperror.dev/handler/logur",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "github.com__Azure__azure-pipeline-go",
    install = ["pipeline"],
    module = "github.com/Azure/azure-pipeline-go",
    version = "v0.2.3",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-ieproxy"],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go",
    install = [
        "profiles/latest/authorization/mgmt/authorization",
        "services/authorization/mgmt/2015-07-01/authorization",
        "services/compute/mgmt/2018-10-01/compute",
        "services/containerservice/mgmt/2020-02-01/containerservice",
        "services/network/mgmt/2018-10-01/network",
        "services/preview/monitor/mgmt/2018-09-01/insights",
        "services/resources/mgmt/2016-06-01/subscriptions",
        "services/resources/mgmt/2018-02-01/resources",
        "services/storage/mgmt/2017-10-01/storage",
        "services/storage/mgmt/2019-06-01/storage",
        "version",
    ],
    module = "github.com/Azure/azure-sdk-for-go",
    version = "v44.2.0+incompatible",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-storage-blob-go",
    install = ["azblob"],
    module = "github.com/Azure/azure-storage-blob-go",
    version = "v0.10.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-pipeline-go",
        ":github.com__google__uuid",
        ":golang.org__x__sys",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest",
    install = [
        ".",
        "azure",
    ],
    module = "github.com/Azure/go-autorest/autorest",
    version = "v0.11.2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__logger",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__adal",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/adal",
    version = "v0.9.5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__tracing",
        ":github.com__form3tech-oss__jwt-go",
        ":golang.org__x__crypto",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__azure__auth",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/azure/auth",
    version = "v0.5.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__autorest__azure__cli",
        ":github.com__dimchansky__utfbom",
        ":golang.org__x__crypto",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__azure__cli",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/azure/cli",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__dimchansky__utfbom",
        ":github.com__mitchellh__go-homedir",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__date",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/date",
    version = "v0.3.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__to",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/to",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__validation",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/validation",
    version = "v0.3.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Azure__go-autorest__logger",
    install = ["."],
    module = "github.com/Azure/go-autorest/logger",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Azure__go-autorest__tracing",
    install = ["."],
    module = "github.com/Azure/go-autorest/tracing",
    version = "v0.6.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__BurntSushi__toml",
    install = ["."],
    module = "github.com/BurntSushi/toml",
    version = "v0.3.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__MakeNowJust__heredoc",
    install = ["."],
    module = "github.com/MakeNowJust/heredoc",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Masterminds__goutils",
    install = ["."],
    module = "github.com/Masterminds/goutils",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Masterminds__semver__v3",
    install = ["."],
    module = "github.com/Masterminds/semver/v3",
    version = "v3.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__Masterminds__sprig__v3",
    install = ["."],
    module = "github.com/Masterminds/sprig/v3",
    version = "v3.2.2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__goutils",
        ":github.com__Masterminds__semver__v3",
        ":github.com__google__uuid",
        ":github.com__huandu__xstrings",
        ":github.com__imdario__mergo",
        ":github.com__mitchellh__copystructure",
        ":github.com__shopspring__decimal",
        ":github.com__spf13__cast",
        ":golang.org__x__crypto",
    ],
)

go_module(
    name = "github.com__Masterminds__squirrel",
    install = ["."],
    module = "github.com/Masterminds/squirrel",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__lann__builder"],
)

go_module(
    name = "github.com__PuerkitoBio__purell",
    install = ["."],
    module = "github.com/PuerkitoBio/purell",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__PuerkitoBio__urlesc",
        ":golang.org__x__net",
        ":golang.org__x__text",
    ],
)

go_module(
    name = "github.com__PuerkitoBio__urlesc",
    install = ["."],
    module = "github.com/PuerkitoBio/urlesc",
    version = "v0.0.0-20170810143723-de5bf2ad4578",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill",
    install = [
        ".",
        "components/cqrs",
        "internal",
        "message",
        "message/router/middleware",
        "message/subscriber",
        "pubsub/gochannel",
        "pubsub/sync",
    ],
    module = "github.com/ThreeDotsLabs/watermill",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__cenkalti__backoff__v3",
        ":github.com__gogo__protobuf",
        ":github.com__google__uuid",
        ":github.com__hashicorp__go-multierror",
        ":github.com__lithammer__shortuuid__v3",
        ":github.com__oklog__ulid",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__antihax__optional",
    install = ["."],
    module = "github.com/antihax/optional",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aokoli__goutils",
    install = ["."],
    module = "github.com/aokoli/goutils",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__apache__thrift",
    _tag = "download",
    module = "github.com/apache/thrift",
    version = "v0.0.0-20151001171628-53dd39833a08",
)

go_module(
    name = "github.com__apache__thrift",
    download = ":_github.com__apache__thrift#download",
    install = ["lib/go/thrift"],
    module = "github.com/apache/thrift",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__asaskevich__EventBus",
    install = ["."],
    module = "github.com/asaskevich/EventBus",
    version = "v0.0.0-20180315140547-d46933a94f05",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__asaskevich__govalidator",
    install = ["."],
    module = "github.com/asaskevich/govalidator",
    version = "v0.0.0-20200428143746-21a406dcc535",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go",
    install = [
        "aws",
        "aws/arn",
        "aws/awserr",
        "aws/awsutil",
        "aws/client",
        "aws/client/metadata",
        "aws/corehandlers",
        "aws/credentials",
        "aws/credentials/ec2rolecreds",
        "aws/credentials/endpointcreds",
        "aws/credentials/processcreds",
        "aws/credentials/ssocreds",
        "aws/credentials/stscreds",
        "aws/csm",
        "aws/defaults",
        "aws/ec2metadata",
        "aws/endpoints",
        "aws/request",
        "aws/session",
        "aws/signer/v4",
        "internal/ini",
        "internal/s3shared",
        "internal/s3shared/arn",
        "internal/s3shared/s3err",
        "internal/sdkio",
        "internal/sdkmath",
        "internal/sdkrand",
        "internal/sdkuri",
        "internal/shareddefaults",
        "internal/strings",
        "internal/sync/singleflight",
        "private/checksum",
        "private/protocol",
        "private/protocol/ec2query",
        "private/protocol/eventstream",
        "private/protocol/eventstream/eventstreamapi",
        "private/protocol/json/jsonutil",
        "private/protocol/jsonrpc",
        "private/protocol/query",
        "private/protocol/query/queryutil",
        "private/protocol/rest",
        "private/protocol/restjson",
        "private/protocol/restxml",
        "private/protocol/xml/xmlutil",
        "service/autoscaling",
        "service/cloudformation",
        "service/cloudformation/cloudformationiface",
        "service/ec2",
        "service/ec2/ec2iface",
        "service/eks",
        "service/eks/eksiface",
        "service/elb",
        "service/elbv2",
        "service/elbv2/elbv2iface",
        "service/iam",
        "service/iam/iamiface",
        "service/route53",
        "service/route53/route53iface",
        "service/s3",
        "service/s3/s3iface",
        "service/s3/s3manager",
        "service/sso",
        "service/sso/ssoiface",
        "service/sts",
        "service/sts/stsiface",
    ],
    module = "github.com/aws/aws-sdk-go",
    version = "v1.37.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__jmespath__go-jmespath"],
)

go_module(
    name = "github.com__aymerick__douceur",
    install = ["css"],
    module = "github.com/aymerick/douceur",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__banzaicloud__anchore-image-validator",
    install = ["pkg/apis/security/v1alpha1"],
    module = "github.com/banzaicloud/anchore-image-validator",
    version = "v0.0.0-20190823121528-918b9fa6af62",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery"],
)

go_module(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk",
    install = [
        "auth",
        "db",
        "tls",
        "vault",
    ],
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    version = "v0.6.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__fsnotify__fsnotify",
        ":github.com__hashicorp__vault__api",
        ":github.com__spf13__cast",
        ":k8s.io__client-go",
    ],
)

go_module(
    name = "github.com__banzaicloud__cadence-aws-sdk",
    install = [
        "activities/ec2",
        "clients",
        "clients/ec2stub",
        "internal",
    ],
    module = "github.com/banzaicloud/cadence-aws-sdk",
    version = "v0.3.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go",
        ":go.uber.org__cadence",
    ],
)

go_module(
    name = "github.com__banzaicloud__gin-utilz",
    install = ["auth"],
    module = "github.com/banzaicloud/gin-utilz",
    version = "v0.3.1",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__gin-gonic__gin",
        ":gopkg.in__square__go-jose.v2",
    ],
)

go_module(
    name = "github.com__banzaicloud__go-gin-prometheus",
    install = ["."],
    module = "github.com/banzaicloud/go-gin-prometheus",
    version = "v0.1.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-gonic__gin",
        ":github.com__prometheus__client_golang",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__banzaicloud__integrated-service-sdk",
    install = [
        "api/v1alpha1",
        "api/v1alpha1/backup",
        "api/v1alpha1/dns",
    ],
    module = "github.com/banzaicloud/integrated-service-sdk",
    version = "v0.6.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__mitchellh__mapstructure",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":sigs.k8s.io__controller-runtime",
    ],
)

go_module(
    name = "github.com__banzaicloud__k8s-objectmatcher",
    install = ["patch"],
    module = "github.com/banzaicloud/k8s-objectmatcher",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__json-iterator__go",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk",
    install = [
        "api/v1beta1",
        "model/common",
        "model/filter",
        "model/output",
        "model/types",
    ],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    version = "v0.5.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__operator-tools",
        ":github.com__spf13__cast",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":sigs.k8s.io__controller-runtime",
    ],
)

go_module(
    name = "github.com__banzaicloud__logrus-runtime-formatter",
    install = ["."],
    module = "github.com/banzaicloud/logrus-runtime-formatter",
    version = "v0.0.0-20180617171254-12df4a18567f",
    visibility = ["PUBLIC"],
    deps = [":github.com__sirupsen__logrus"],
)

go_module(
    name = "github.com__banzaicloud__operator-tools",
    install = [
        "pkg/logger",
        "pkg/reconciler",
        "pkg/resources",
        "pkg/secret",
        "pkg/types",
        "pkg/utils",
        "pkg/volume",
        "pkg/wait",
    ],
    module = "github.com/banzaicloud/operator-tools",
    version = "v0.15.0",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__k8s-objectmatcher",
        ":github.com__briandowns__spinner",
        ":github.com__cppforlife__go-patch",
        ":github.com__fatih__color",
        ":github.com__go-logr__logr",
        ":github.com__iancoleman__orderedmap",
        ":github.com__spf13__cast",
        ":github.com__wayneashleyberry__terminal-dimensions",
        ":gopkg.in__yaml.v2",
        ":k8s.io__api",
        ":k8s.io__apiextensions-apiserver",
        ":k8s.io__apimachinery",
        ":k8s.io__client-go",
        ":sigs.k8s.io__controller-runtime",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "github.com__beorn7__perks",
    install = ["quantile"],
    module = "github.com/beorn7/perks",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__briandowns__spinner",
    install = ["."],
    module = "github.com/briandowns/spinner",
    version = "v1.11.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__fatih__color"],
)

go_module(
    name = "github.com__cenkalti__backoff__v3",
    install = ["."],
    module = "github.com/cenkalti/backoff/v3",
    version = "v3.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__cespare__xxhash__v2",
    install = ["."],
    module = "github.com/cespare/xxhash/v2",
    version = "v2.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__chris-ramon__douceur",
    install = ["parser"],
    module = "github.com/chris-ramon/douceur",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aymerick__douceur",
        ":github.com__gorilla__css",
    ],
)

go_module(
    name = "github.com__containerd__containerd",
    install = [
        "archive/compression",
        "content",
        "content/local",
        "errdefs",
        "filters",
        "images",
        "labels",
        "log",
        "platforms",
        "reference",
        "remotes",
        "remotes/docker",
        "remotes/docker/schema1",
        "sys",
        "version",
    ],
    module = "github.com/containerd/containerd",
    version = "v1.4.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":golang.org__x__net",
        ":golang.org__x__sync",
        ":golang.org__x__sys",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__coreos__go-oidc",
    install = ["."],
    module = "github.com/coreos/go-oidc",
    version = "v2.1.0+incompatible",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pquerna__cachecontrol",
        ":golang.org__x__oauth2",
        ":gopkg.in__square__go-jose.v2",
    ],
)

go_module(
    name = "github.com__cppforlife__go-patch",
    install = ["patch"],
    module = "github.com/cppforlife/go-patch",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)

go_module(
    name = "github.com__cyphar__filepath-securejoin",
    install = ["."],
    module = "github.com/cyphar/filepath-securejoin",
    version = "v0.2.2",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "github.com__davecgh__go-spew",
    install = ["spew"],
    module = "github.com/davecgh/go-spew",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__deislabs__oras",
    install = [
        "pkg/artifact",
        "pkg/auth",
        "pkg/auth/docker",
        "pkg/content",
        "pkg/context",
        "pkg/oras",
    ],
    module = "github.com/deislabs/oras",
    version = "v0.10.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd",
        ":github.com__docker__cli",
        ":github.com__docker__docker",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":golang.org__x__sync",
    ],
)

go_module(
    name = "github.com__dexidp__dex__api__v2",
    install = ["."],
    module = "github.com/dexidp/dex/api/v2",
    version = "v2.0.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__dimchansky__utfbom",
    install = ["."],
    module = "github.com/dimchansky/utfbom",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__cli",
    install = [
        "cli/config",
        "cli/config/configfile",
        "cli/config/credentials",
        "cli/config/types",
    ],
    module = "github.com/docker/cli",
    version = "v20.10.3+incompatible",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker",
        ":github.com__docker__docker-credential-helpers",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":golang.org__x__sys",
    ],
)

go_mod_download(
    name = "github.com__docker__distribution",
    _tag = "download",
    module = "github.com/docker/distribution",
    version = "v0.0.0-20191216044856-a8371794149d",
)

go_module(
    name = "github.com__docker__distribution",
    download = ":_github.com__docker__distribution#download",
    install = [
        ".",
        "digestset",
        "metrics",
        "reference",
        "registry/api/errcode",
        "registry/api/v2",
        "registry/client",
        "registry/client/auth",
        "registry/client/auth/challenge",
        "registry/client/transport",
        "registry/storage/cache",
        "registry/storage/cache/memory",
    ],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__go-metrics",
        ":github.com__gorilla__mux",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec",
    ],
)

go_mod_download(
    name = "github.com__docker__docker",
    _tag = "download",
    module = "github.com/moby/moby",
    version = "v1.4.2-0.20200203170920-46ec8731fbce",
)

go_module(
    name = "github.com__docker__docker",
    download = ":_github.com__docker__docker#download",
    install = [
        "api/types",
        "api/types/blkiodev",
        "api/types/container",
        "api/types/filters",
        "api/types/mount",
        "api/types/network",
        "api/types/registry",
        "api/types/strslice",
        "api/types/swarm",
        "api/types/swarm/runtime",
        "api/types/versions",
        "errdefs",
        "pkg/homedir",
        "pkg/ioutils",
        "pkg/jsonmessage",
        "pkg/stringid",
        "pkg/tarsum",
        "pkg/term",
        "registry",
        "registry/resumable",
        "rootless",
    ],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd",
        ":github.com__docker__distribution",
        ":github.com__docker__go-connections",
        ":github.com__docker__go-units",
        ":github.com__gogo__protobuf",
        ":github.com__morikuni__aec",
        ":github.com__opencontainers__image-spec",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":golang.org__x__sys",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__docker__docker-credential-helpers",
    install = [
        "client",
        "credentials",
    ],
    module = "github.com/docker/docker-credential-helpers",
    version = "v0.6.3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__go-connections",
    install = [
        "nat",
        "tlsconfig",
    ],
    module = "github.com/docker/go-connections",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "github.com__docker__go-metrics",
    install = ["."],
    module = "github.com/docker/go-metrics",
    version = "v0.0.0-20180209012529-399ea8c73916",
    visibility = ["PUBLIC"],
    deps = [":github.com__prometheus__client_golang"],
)

go_module(
    name = "github.com__docker__go-units",
    install = ["."],
    module = "github.com/docker/go-units",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__spdystream",
    install = [
        ".",
        "spdy",
    ],
    module = "github.com/docker/spdystream",
    version = "v0.0.0-20170912183627-bc6354cbbc29",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__emicklei__go-restful",
    install = [
        ".",
        "log",
    ],
    module = "github.com/emicklei/go-restful",
    version = "v2.9.5+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__evanphx__json-patch",
    install = ["."],
    module = "github.com/evanphx/json-patch",
    version = "v4.9.0+incompatible",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "github.com__exponent-io__jsonpath",
    install = ["."],
    module = "github.com/exponent-io/jsonpath",
    version = "v0.0.0-20151013193312-d6023ce2651d",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__facebookgo__clock",
    install = ["."],
    module = "github.com/facebookgo/clock",
    version = "v0.0.0-20150410010913-600d898af40a",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__fatih__color",
    install = ["."],
    module = "github.com/fatih/color",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mattn__go-colorable",
        ":github.com__mattn__go-isatty",
    ],
)

go_module(
    name = "github.com__form3tech-oss__jwt-go",
    install = ["."],
    module = "github.com/form3tech-oss/jwt-go",
    version = "v3.2.2+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__fsnotify__fsnotify",
    install = ["."],
    module = "github.com/fsnotify/fsnotify",
    version = "v1.4.9",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "github.com__ghodss__yaml",
    install = ["."],
    module = "github.com/ghodss/yaml",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)

go_module(
    name = "github.com__gin-contrib__cors",
    install = ["."],
    module = "github.com/gin-contrib/cors",
    version = "v1.3.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__gin-gonic__gin"],
)

go_module(
    name = "github.com__gin-contrib__sse",
    install = ["."],
    module = "github.com/gin-contrib/sse",
    version = "v0.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gin-gonic__gin",
    install = [
        ".",
        "binding",
        "internal/json",
        "render",
    ],
    module = "github.com/gin-gonic/gin",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-contrib__sse",
        ":github.com__golang__protobuf",
        ":github.com__mattn__go-isatty",
        ":github.com__ugorji__go__codec",
        ":gopkg.in__go-playground__validator.v9",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__go-kit__kit",
    install = [
        "endpoint",
        "log",
        "sd",
        "sd/lb",
        "tracing/opencensus",
        "transport",
        "transport/grpc",
        "transport/http",
    ],
    module = "github.com/go-kit/kit",
    version = "v0.10.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logfmt__logfmt",
        ":go.opencensus.io",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__go-logfmt__logfmt",
    install = ["."],
    module = "github.com/go-logfmt/logfmt",
    version = "v0.5.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-logr__logr",
    install = ["."],
    module = "github.com/go-logr/logr",
    version = "v0.2.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-openapi__jsonpointer",
    install = ["."],
    module = "github.com/go-openapi/jsonpointer",
    version = "v0.19.3",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-openapi__swag"],
)

go_module(
    name = "github.com__go-openapi__jsonreference",
    install = ["."],
    module = "github.com/go-openapi/jsonreference",
    version = "v0.19.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__PuerkitoBio__purell",
        ":github.com__go-openapi__jsonpointer",
    ],
)

go_module(
    name = "github.com__go-openapi__spec",
    install = ["."],
    module = "github.com/go-openapi/spec",
    version = "v0.19.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__jsonpointer",
        ":github.com__go-openapi__jsonreference",
        ":github.com__go-openapi__swag",
    ],
)

go_module(
    name = "github.com__go-openapi__swag",
    install = ["."],
    module = "github.com/go-openapi/swag",
    version = "v0.19.5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mailru__easyjson",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__go-playground__locales",
    install = [
        ".",
        "currency",
    ],
    module = "github.com/go-playground/locales",
    version = "v0.12.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-playground__universal-translator",
    install = ["."],
    module = "github.com/go-playground/universal-translator",
    version = "v0.16.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-playground__locales"],
)

go_module(
    name = "github.com__go-sql-driver__mysql",
    install = ["."],
    module = "github.com/go-sql-driver/mysql",
    version = "v1.5.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gobwas__glob",
    install = [
        ".",
        "compiler",
        "match",
        "syntax",
        "syntax/ast",
        "syntax/lexer",
        "util/runes",
        "util/strings",
    ],
    module = "github.com/gobwas/glob",
    version = "v0.2.3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gofrs__flock",
    install = ["."],
    module = "github.com/gofrs/flock",
    version = "v0.8.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gofrs__uuid",
    install = ["."],
    module = "github.com/gofrs/uuid",
    version = "v3.2.0+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gogo__protobuf",
    install = [
        "proto",
        "sortkeys",
    ],
    module = "github.com/gogo/protobuf",
    version = "v1.3.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__golang__groupcache",
    install = ["lru"],
    module = "github.com/golang/groupcache",
    version = "v0.0.0-20200121045136-8c9f03a8e57e",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__golang__mock",
    install = ["gomock"],
    module = "github.com/golang/mock",
    version = "v1.4.4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__golang__protobuf",
    install = [
        "proto",
        "ptypes",
        "ptypes/any",
        "ptypes/duration",
        "ptypes/timestamp",
    ],
    module = "github.com/golang/protobuf",
    version = "v1.4.3",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf"],
)

go_module(
    name = "github.com__golang__snappy",
    install = ["."],
    module = "github.com/golang/snappy",
    version = "v0.0.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__btree",
    install = ["."],
    module = "github.com/google/btree",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-cmp",
    install = [
        "cmp",
        "cmp/internal/diff",
        "cmp/internal/flags",
        "cmp/internal/function",
        "cmp/internal/value",
    ],
    module = "github.com/google/go-cmp",
    version = "v0.5.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__gofuzz",
    install = ["."],
    module = "github.com/google/gofuzz",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__uuid",
    install = ["."],
    module = "github.com/google/uuid",
    version = "v1.1.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__googleapis__gax-go__v2",
    install = ["."],
    module = "github.com/googleapis/gax-go/v2",
    version = "v2.0.5",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc"],
)

go_module(
    name = "github.com__googleapis__gnostic",
    install = [
        "compiler",
        "extensions",
        "openapiv2",
    ],
    module = "github.com/googleapis/gnostic",
    version = "v0.4.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__gorilla__css",
    install = ["scanner"],
    module = "github.com/gorilla/css",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gorilla__mux",
    install = ["."],
    module = "github.com/gorilla/mux",
    version = "v1.8.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gorilla__securecookie",
    install = ["."],
    module = "github.com/gorilla/securecookie",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gorilla__sessions",
    install = ["."],
    module = "github.com/gorilla/sessions",
    version = "v1.2.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__gorilla__securecookie"],
)

go_module(
    name = "github.com__gosuri__uitable",
    install = [
        ".",
        "util/strutil",
        "util/wordwrap",
    ],
    module = "github.com/gosuri/uitable",
    version = "v0.0.4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fatih__color",
        ":github.com__mattn__go-runewidth",
    ],
)

go_module(
    name = "github.com__gregjones__httpcache",
    install = [
        ".",
        "diskcache",
    ],
    module = "github.com/gregjones/httpcache",
    version = "v0.0.0-20180305231024-9cad4c3443a7",
    visibility = ["PUBLIC"],
    deps = [":github.com__peterbourgon__diskv"],
)

go_module(
    name = "github.com__hashicorp__errwrap",
    install = ["."],
    module = "github.com/hashicorp/errwrap",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__go-cleanhttp",
    install = ["."],
    module = "github.com/hashicorp/go-cleanhttp",
    version = "v0.5.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__go-hclog",
    install = ["."],
    module = "github.com/hashicorp/go-hclog",
    version = "v0.8.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__go-multierror",
    install = ["."],
    module = "github.com/hashicorp/go-multierror",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__errwrap"],
)

go_module(
    name = "github.com__hashicorp__go-plugin",
    install = [
        ".",
        "internal/plugin",
    ],
    module = "github.com/hashicorp/go-plugin",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":github.com__hashicorp__go-hclog",
        ":github.com__hashicorp__yamux",
        ":github.com__mitchellh__go-testing-interface",
        ":github.com__oklog__run",
        ":golang.org__x__net",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__hashicorp__go-retryablehttp",
    install = ["."],
    module = "github.com/hashicorp/go-retryablehttp",
    version = "v0.5.4",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__go-cleanhttp"],
)

go_module(
    name = "github.com__hashicorp__go-rootcerts",
    install = ["."],
    module = "github.com/hashicorp/go-rootcerts",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
    deps = select({
        ":__config_darwin_amd64": [":github.com__mitchellh__go-homedir"],
        ":__config_linux_amd64": [],
        "default": [],
    }),
)

go_module(
    name = "github.com__hashicorp__go-sockaddr",
    install = ["."],
    module = "github.com/hashicorp/go-sockaddr",
    version = "v1.0.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__golang-lru",
    install = [
        ".",
        "simplelru",
    ],
    module = "github.com/hashicorp/golang-lru",
    version = "v0.5.4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__hcl",
    install = [
        ".",
        "hcl/ast",
        "hcl/parser",
        "hcl/printer",
        "hcl/scanner",
        "hcl/strconv",
        "hcl/token",
        "json/parser",
        "json/scanner",
        "json/token",
    ],
    module = "github.com/hashicorp/hcl",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__vault__api",
    install = ["."],
    module = "github.com/hashicorp/vault/api",
    version = "v1.0.4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__errwrap",
        ":github.com__hashicorp__go-cleanhttp",
        ":github.com__hashicorp__go-multierror",
        ":github.com__hashicorp__go-retryablehttp",
        ":github.com__hashicorp__go-rootcerts",
        ":github.com__hashicorp__hcl",
        ":github.com__hashicorp__vault__sdk",
        ":github.com__mitchellh__mapstructure",
        ":golang.org__x__net",
        ":golang.org__x__time",
        ":gopkg.in__square__go-jose.v2",
    ],
)

go_module(
    name = "github.com__hashicorp__vault__sdk",
    install = [
        "helper/compressutil",
        "helper/consts",
        "helper/hclutil",
        "helper/jsonutil",
        "helper/parseutil",
        "helper/strutil",
    ],
    module = "github.com/hashicorp/vault/sdk",
    version = "v0.1.13",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__snappy",
        ":github.com__hashicorp__errwrap",
        ":github.com__hashicorp__go-multierror",
        ":github.com__hashicorp__go-sockaddr",
        ":github.com__hashicorp__hcl",
        ":github.com__mitchellh__mapstructure",
        ":github.com__pierrec__lz4",
        ":github.com__ryanuber__go-glob",
    ],
)

go_module(
    name = "github.com__hashicorp__yamux",
    install = ["."],
    module = "github.com/hashicorp/yamux",
    version = "v0.0.0-20181012175058-2f1d1f20f75d",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__huandu__xstrings",
    install = ["."],
    module = "github.com/huandu/xstrings",
    version = "v1.3.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__iancoleman__orderedmap",
    install = ["."],
    module = "github.com/iancoleman/orderedmap",
    version = "v0.0.0-20190318233801-ac98e3ecb4b0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__imdario__mergo",
    install = ["."],
    module = "github.com/imdario/mergo",
    version = "v0.3.11",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jinzhu__copier",
    install = ["."],
    module = "github.com/jinzhu/copier",
    version = "v0.0.0-20201025035756-632e723a6687",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jinzhu__gorm",
    _tag = "download",
    module = "github.com/jinzhu/gorm",
    version = "v1.9.1",
)

go_module(
    name = "github.com__jinzhu__gorm",
    download = ":_github.com__jinzhu__gorm#download",
    install = [
        ".",
        "dialects/mysql",
        "dialects/postgres",
        "dialects/sqlite",
    ],
    module = "github.com/jinzhu/gorm",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-sql-driver__mysql",
        ":github.com__jinzhu__inflection",
        ":github.com__lib__pq",
        ":github.com__mattn__go-sqlite3",
    ],
)

go_module(
    name = "github.com__jinzhu__inflection",
    install = ["."],
    module = "github.com/jinzhu/inflection",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jinzhu__now",
    install = ["."],
    module = "github.com/jinzhu/now",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jmespath__go-jmespath",
    install = ["."],
    module = "github.com/jmespath/go-jmespath",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jmoiron__sqlx",
    install = [
        ".",
        "reflectx",
    ],
    module = "github.com/jmoiron/sqlx",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__joho__godotenv",
    install = ["."],
    module = "github.com/joho/godotenv",
    version = "v1.3.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__jonboulle__clockwork",
    install = ["."],
    module = "github.com/jonboulle/clockwork",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__json-iterator__go",
    install = ["."],
    module = "github.com/json-iterator/go",
    version = "v1.1.10",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__modern-go__concurrent",
        ":github.com__modern-go__reflect2",
    ],
)

go_module(
    name = "github.com__kubernetes-csi__external-snapshotter__v2",
    install = ["pkg/apis/volumesnapshot/v1beta1"],
    module = "github.com/kubernetes-csi/external-snapshotter/v2",
    version = "v2.2.0-rc1",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api",
        ":k8s.io__apimachinery",
    ],
)

go_module(
    name = "github.com__lann__builder",
    install = ["."],
    module = "github.com/lann/builder",
    version = "v0.0.0-20180802200727-47ae307949d0",
    visibility = ["PUBLIC"],
    deps = [":github.com__lann__ps"],
)

go_module(
    name = "github.com__lann__ps",
    install = ["."],
    module = "github.com/lann/ps",
    version = "v0.0.0-20150810152359-62de8c46ede0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__leodido__go-urn",
    install = ["."],
    module = "github.com/leodido/go-urn",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__lestrrat-go__backoff",
    install = ["."],
    module = "github.com/lestrrat-go/backoff",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "github.com__lib__pq",
    install = [
        ".",
        "hstore",
        "oid",
        "scram",
    ],
    module = "github.com/lib/pq",
    version = "v1.9.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__liggitt__tabwriter",
    install = ["."],
    module = "github.com/liggitt/tabwriter",
    version = "v0.0.0-20181228230101-89fcab3d43de",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__lithammer__shortuuid__v3",
    install = ["."],
    module = "github.com/lithammer/shortuuid/v3",
    version = "v3.0.4",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__uuid"],
)

go_module(
    name = "github.com__magiconair__properties",
    install = ["."],
    module = "github.com/magiconair/properties",
    version = "v1.8.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mailru__easyjson",
    install = [
        "buffer",
        "jlexer",
        "jwriter",
    ],
    module = "github.com/mailru/easyjson",
    version = "v0.7.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mattn__go-colorable",
    install = ["."],
    module = "github.com/mattn/go-colorable",
    version = "v0.1.2",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-isatty"],
)

go_module(
    name = "github.com__mattn__go-ieproxy",
    install = ["."],
    module = "github.com/mattn/go-ieproxy",
    version = "v0.0.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mattn__go-isatty",
    install = ["."],
    module = "github.com/mattn/go-isatty",
    version = "v0.0.12",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "github.com__mattn__go-runewidth",
    install = ["."],
    module = "github.com/mattn/go-runewidth",
    version = "v0.0.4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mattn__go-sqlite3",
    install = ["."],
    module = "github.com/mattn/go-sqlite3",
    version = "v2.0.3+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__matttproud__golang_protobuf_extensions",
    install = ["pbutil"],
    module = "github.com/matttproud/golang_protobuf_extensions",
    version = "v1.0.2-0.20181231171920-c182affec369",
    visibility = ["PUBLIC"],
    deps = [":github.com__golang__protobuf"],
)

go_module(
    name = "github.com__microcosm-cc__bluemonday",
    install = ["."],
    module = "github.com/microcosm-cc/bluemonday",
    version = "v1.0.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__chris-ramon__douceur",
        ":golang.org__x__net",
    ],
)

go_module(
    name = "github.com__mitchellh__copystructure",
    install = ["."],
    module = "github.com/mitchellh/copystructure",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__mitchellh__reflectwalk"],
)

go_module(
    name = "github.com__mitchellh__go-homedir",
    install = ["."],
    module = "github.com/mitchellh/go-homedir",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mitchellh__go-testing-interface",
    install = ["."],
    module = "github.com/mitchellh/go-testing-interface",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mitchellh__go-wordwrap",
    install = ["."],
    module = "github.com/mitchellh/go-wordwrap",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mitchellh__mapstructure",
    install = ["."],
    module = "github.com/mitchellh/mapstructure",
    version = "v1.4.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mitchellh__reflectwalk",
    install = ["."],
    module = "github.com/mitchellh/reflectwalk",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__moby__term",
    install = ["."],
    module = "github.com/moby/term",
    version = "v0.0.0-20200312100748-672ec06f55cd",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "github.com__modern-go__concurrent",
    install = ["."],
    module = "github.com/modern-go/concurrent",
    version = "v0.0.0-20180306012644-bacd9c7ef1dd",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__modern-go__reflect2",
    install = ["."],
    module = "github.com/modern-go/reflect2",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__modern-go__concurrent"],
)

go_module(
    name = "github.com__moogar0880__problems",
    install = ["."],
    module = "github.com/moogar0880/problems",
    version = "v0.1.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__morikuni__aec",
    install = ["."],
    module = "github.com/morikuni/aec",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mxk__go-flowrate",
    install = ["flowrate"],
    module = "github.com/mxk/go-flowrate",
    version = "v0.0.0-20140419014527-cca7078d478f",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__oklog__run",
    install = ["."],
    module = "github.com/oklog/run",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__oklog__ulid",
    install = ["."],
    module = "github.com/oklog/ulid",
    version = "v1.3.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__onsi__gomega",
    install = [
        ".",
        "format",
        "gbytes",
        "gexec",
        "internal/assertion",
        "internal/asyncassertion",
        "internal/oraclematcher",
        "internal/testingtsupport",
        "matchers",
        "matchers/support/goraph/bipartitegraph",
        "matchers/support/goraph/edge",
        "matchers/support/goraph/node",
        "matchers/support/goraph/util",
        "types",
    ],
    module = "github.com/onsi/gomega",
    version = "v1.10.1",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net",
        ":golang.org__x__xerrors",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__opencontainers__go-digest",
    install = ["."],
    module = "github.com/opencontainers/go-digest",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__opencontainers__image-spec",
    install = [
        "specs-go",
        "specs-go/v1",
    ],
    module = "github.com/opencontainers/image-spec",
    version = "v1.0.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__opencontainers__go-digest"],
)

go_module(
    name = "github.com__opentracing__opentracing-go",
    install = [
        ".",
        "ext",
        "log",
    ],
    module = "github.com/opentracing/opentracing-go",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__patrickmn__go-cache",
    install = ["."],
    module = "github.com/patrickmn/go-cache",
    version = "v2.1.0+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__pborman__uuid",
    install = ["."],
    module = "github.com/pborman/uuid",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__uuid"],
)

go_module(
    name = "github.com__pelletier__go-toml",
    install = ["."],
    module = "github.com/pelletier/go-toml",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__peterbourgon__diskv",
    install = ["."],
    module = "github.com/peterbourgon/diskv",
    version = "v2.0.1+incompatible",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__btree"],
)

go_module(
    name = "github.com__pierrec__lz4",
    install = [
        ".",
        "internal/xxh32",
    ],
    module = "github.com/pierrec/lz4",
    version = "v2.0.5+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__pkg__errors",
    install = ["."],
    module = "github.com/pkg/errors",
    version = "v0.9.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__pmezard__go-difflib",
    install = ["difflib"],
    module = "github.com/pmezard/go-difflib",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__pquerna__cachecontrol",
    install = [
        ".",
        "cacheobject",
    ],
    module = "github.com/pquerna/cachecontrol",
    version = "v0.0.0-20171018203845-0dec1b30a021",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__prometheus__client_golang",
    install = [
        "prometheus",
        "prometheus/internal",
        "prometheus/promhttp",
    ],
    module = "github.com/prometheus/client_golang",
    version = "v1.7.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__beorn7__perks",
        ":github.com__cespare__xxhash__v2",
        ":github.com__golang__protobuf",
        ":github.com__prometheus__client_model",
        ":github.com__prometheus__common",
        ":github.com__prometheus__procfs",
    ],
)

go_module(
    name = "github.com__prometheus__client_model",
    install = ["go"],
    module = "github.com/prometheus/client_model",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__golang__protobuf"],
)

go_module(
    name = "github.com__prometheus__common",
    install = [
        "expfmt",
        "internal/bitbucket.org/ww/goautoneg",
        "model",
    ],
    module = "github.com/prometheus/common",
    version = "v0.10.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":github.com__matttproud__golang_protobuf_extensions",
        ":github.com__prometheus__client_model",
    ],
)

go_module(
    name = "github.com__prometheus__procfs",
    install = [
        ".",
        "internal/fs",
        "internal/util",
    ],
    module = "github.com/prometheus/procfs",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "github.com__prometheus__prom2json",
    install = ["."],
    module = "github.com/prometheus/prom2json",
    version = "v1.3.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__matttproud__golang_protobuf_extensions",
        ":github.com__prometheus__client_model",
        ":github.com__prometheus__common",
    ],
)

go_module(
    name = "github.com__robfig__cron",
    install = ["."],
    module = "github.com/robfig/cron",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__rubenv__sql-migrate",
    install = [
        ".",
        "sqlparse",
    ],
    module = "github.com/rubenv/sql-migrate",
    version = "v0.0.0-20200616145509-8d140a17f351",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__gorp.v1"],
)

go_module(
    name = "github.com__russross__blackfriday",
    install = ["."],
    module = "github.com/russross/blackfriday",
    version = "v1.5.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__ryanuber__go-glob",
    install = ["."],
    module = "github.com/ryanuber/go-glob",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__sagikazarmark__appkit",
    install = [
        "endpoint",
        "errors",
        "run",
        "transport/http",
    ],
    module = "github.com/sagikazarmark/appkit",
    version = "v0.8.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit",
        ":github.com__moogar0880__problems",
    ],
)

go_module(
    name = "github.com__sagikazarmark__kitx",
    install = [
        "correlation",
        "endpoint",
        "transport",
        "transport/http",
    ],
    module = "github.com/sagikazarmark/kitx",
    version = "v0.12.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit",
        ":github.com__moogar0880__problems",
        ":github.com__pkg__errors",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__sagikazarmark__ocmux",
    install = ["."],
    module = "github.com/sagikazarmark/ocmux",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gorilla__mux",
        ":go.opencensus.io",
    ],
)

go_module(
    name = "github.com__shopspring__decimal",
    install = ["."],
    module = "github.com/shopspring/decimal",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__sirupsen__logrus",
    install = ["."],
    module = "github.com/sirupsen/logrus",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "github.com__spf13__afero",
    install = [
        ".",
        "mem",
    ],
    module = "github.com/spf13/afero",
    version = "v1.2.2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text"],
)

go_module(
    name = "github.com__spf13__cast",
    install = ["."],
    module = "github.com/spf13/cast",
    version = "v1.3.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spf13__cobra",
    install = ["."],
    module = "github.com/spf13/cobra",
    version = "v1.1.1",
    visibility = ["PUBLIC"],
    deps = [":github.com__spf13__pflag"],
)

go_module(
    name = "github.com__spf13__jwalterweatherman",
    install = ["."],
    module = "github.com/spf13/jwalterweatherman",
    version = "v1.1.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spf13__pflag",
    install = ["."],
    module = "github.com/spf13/pflag",
    version = "v1.0.5",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__spf13__viper",
    install = ["."],
    module = "github.com/spf13/viper",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fsnotify__fsnotify",
        ":github.com__hashicorp__hcl",
        ":github.com__magiconair__properties",
        ":github.com__mitchellh__mapstructure",
        ":github.com__pelletier__go-toml",
        ":github.com__spf13__afero",
        ":github.com__spf13__cast",
        ":github.com__spf13__jwalterweatherman",
        ":github.com__spf13__pflag",
        ":github.com__subosito__gotenv",
        ":gopkg.in__ini.v1",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__stretchr__objx",
    install = ["."],
    module = "github.com/stretchr/objx",
    version = "v0.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__stretchr__testify",
    install = [
        "assert",
        "mock",
        "require",
        "suite",
    ],
    module = "github.com/stretchr/testify",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew",
        ":github.com__pmezard__go-difflib",
        ":github.com__stretchr__objx",
        ":gopkg.in__yaml.v3",
    ],
)

go_module(
    name = "github.com__subosito__gotenv",
    install = ["."],
    module = "github.com/subosito/gotenv",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__technosophos__moniker",
    install = ["."],
    module = "github.com/technosophos/moniker",
    version = "v0.0.0-20180509230615-a5dbd03a2245",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber-go__mapdecode",
    install = [
        ".",
        "internal/mapstructure",
    ],
    module = "github.com/uber-go/mapdecode",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__multierr"],
)

go_module(
    name = "github.com__uber-go__tally",
    install = ["."],
    module = "github.com/uber-go/tally",
    version = "v3.3.15+incompatible",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go",
    install = [
        ".",
        "internal/argreader",
        "relay",
        "thrift/arg2",
        "tnet",
        "tos",
        "trand",
        "typed",
    ],
    module = "github.com/uber/tchannel-go",
    version = "v1.18.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":golang.org__x__net",
        ":golang.org__x__sys",
    ],
)

go_module(
    name = "github.com__ugorji__go__codec",
    install = ["."],
    module = "github.com/ugorji/go/codec",
    version = "v1.1.7",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware-tanzu__velero",
    install = [
        "internal/hook",
        "pkg/apis/velero/v1",
        "pkg/archive",
        "pkg/builder",
        "pkg/buildinfo",
        "pkg/client",
        "pkg/cmd/util/flag",
        "pkg/discovery",
        "pkg/features",
        "pkg/generated/clientset/versioned",
        "pkg/generated/clientset/versioned/scheme",
        "pkg/generated/clientset/versioned/typed/velero/v1",
        "pkg/generated/informers/externalversions/internalinterfaces",
        "pkg/generated/informers/externalversions/velero/v1",
        "pkg/generated/listers/velero/v1",
        "pkg/kuberesource",
        "pkg/label",
        "pkg/persistence",
        "pkg/plugin/framework",
        "pkg/plugin/generated",
        "pkg/plugin/velero",
        "pkg/podexec",
        "pkg/restic",
        "pkg/restore",
        "pkg/util/boolptr",
        "pkg/util/collections",
        "pkg/util/exec",
        "pkg/util/filesystem",
        "pkg/util/kube",
        "pkg/util/logging",
        "pkg/volume",
        "third_party/kubernetes/pkg/kubectl/cmd/util",
    ],
    module = "github.com/vmware-tanzu/velero",
    version = "v1.5.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure__auth",
        ":github.com__aws__aws-sdk-go",
        ":github.com__evanphx__json-patch",
        ":github.com__gobwas__glob",
        ":github.com__gofrs__uuid",
        ":github.com__golang__protobuf",
        ":github.com__hashicorp__go-plugin",
        ":github.com__joho__godotenv",
        ":github.com__kubernetes-csi__external-snapshotter__v2",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":golang.org__x__net",
        ":google.golang.org__grpc",
        ":k8s.io__api",
        ":k8s.io__apiextensions-apiserver",
        ":k8s.io__apimachinery",
        ":k8s.io__client-go",
        ":sigs.k8s.io__controller-runtime",
    ],
)

go_module(
    name = "github.com__vmware__govmomi",
    install = [
        ".",
        "find",
        "list",
        "nfc",
        "object",
        "property",
        "session",
        "task",
        "vim25",
        "vim25/debug",
        "vim25/methods",
        "vim25/mo",
        "vim25/progress",
        "vim25/soap",
        "vim25/types",
        "vim25/xml",
    ],
    module = "github.com/vmware/govmomi",
    version = "v0.22.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__wayneashleyberry__terminal-dimensions",
    install = ["."],
    module = "github.com/wayneashleyberry/terminal-dimensions",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__xeipuuv__gojsonpointer",
    install = ["."],
    module = "github.com/xeipuuv/gojsonpointer",
    version = "v0.0.0-20180127040702-4e3ac2762d5f",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__xeipuuv__gojsonreference",
    install = ["."],
    module = "github.com/xeipuuv/gojsonreference",
    version = "v0.0.0-20180127040603-bd5ef7bd5415",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonpointer"],
)

go_module(
    name = "github.com__xeipuuv__gojsonschema",
    install = ["."],
    module = "github.com/xeipuuv/gojsonschema",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonreference"],
)

go_module(
    name = "go.opencensus.io",
    install = [
        ".",
        "internal",
        "internal/tagencoding",
        "metric/metricdata",
        "metric/metricproducer",
        "plugin/ocgrpc",
        "plugin/ochttp",
        "plugin/ochttp/propagation/b3",
        "resource",
        "stats",
        "stats/internal",
        "stats/view",
        "tag",
        "trace",
        "trace/internal",
        "trace/propagation",
        "trace/tracestate",
    ],
    module = "go.opencensus.io",
    version = "v0.22.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__groupcache",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "go.uber.org__atomic",
    install = ["."],
    module = "go.uber.org/atomic",
    version = "v1.7.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__cadence",
    install = [
        ".",
        ".gen/go/cadence",
        ".gen/go/cadence/workflowserviceclient",
        ".gen/go/cadence/workflowservicetest",
        ".gen/go/shared",
        "activity",
        "client",
        "encoded",
        "internal",
        "internal/common",
        "internal/common/backoff",
        "internal/common/cache",
        "internal/common/metrics",
        "internal/common/serializer",
        "internal/common/util",
        "mocks",
        "testsuite",
        "worker",
        "workflow",
    ],
    module = "go.uber.org/cadence",
    version = "v0.16.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__apache__thrift",
        ":github.com__facebookgo__clock",
        ":github.com__golang__mock",
        ":github.com__opentracing__opentracing-go",
        ":github.com__pborman__uuid",
        ":github.com__robfig__cron",
        ":github.com__stretchr__testify",
        ":github.com__uber-go__tally",
        ":go.uber.org__atomic",
        ":go.uber.org__thriftrw",
        ":go.uber.org__yarpc",
        ":go.uber.org__zap",
        ":golang.org__x__time",
    ],
)

go_module(
    name = "go.uber.org__multierr",
    install = ["."],
    module = "go.uber.org/multierr",
    version = "v1.6.0",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__atomic"],
)

go_module(
    name = "go.uber.org__net__metrics",
    install = [
        ".",
        "bucket",
        "push",
        "tallypush",
    ],
    module = "go.uber.org/net/metrics",
    version = "v1.3.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang",
        ":github.com__prometheus__client_model",
        ":github.com__uber-go__tally",
        ":go.uber.org__atomic",
    ],
)

go_module(
    name = "go.uber.org__thriftrw",
    install = [
        "envelope",
        "internal/envelope/exception",
        "protocol",
        "protocol/binary",
        "ptr",
        "thriftreflect",
        "version",
        "wire",
    ],
    module = "go.uber.org/thriftrw",
    version = "v1.23.0",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__zap",
    ],
)

go_module(
    name = "go.uber.org__yarpc",
    install = [
        ".",
        "api/backoff",
        "api/encoding",
        "api/middleware",
        "api/peer",
        "api/transport",
        "encoding/thrift",
        "encoding/thrift/internal",
        "internal",
        "internal/backoff",
        "internal/bufferpool",
        "internal/config",
        "internal/digester",
        "internal/errorsync",
        "internal/firstoutboundmiddleware",
        "internal/humanize",
        "internal/inboundcall",
        "internal/inboundmiddleware",
        "internal/interpolate",
        "internal/introspection",
        "internal/iopool",
        "internal/observability",
        "internal/outboundmiddleware",
        "internal/request",
        "internal/yarpcerrors",
        "peer",
        "peer/abstractpeer",
        "peer/hostport",
        "pkg/encoding",
        "pkg/errors",
        "pkg/lifecycle",
        "pkg/procedure",
        "transport/tchannel",
        "transport/tchannel/internal",
        "yarpcconfig",
        "yarpcerrors",
    ],
    module = "go.uber.org/yarpc",
    version = "v1.45.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":github.com__uber-go__mapdecode",
        ":github.com__uber-go__tally",
        ":github.com__uber__tchannel-go",
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":go.uber.org__net__metrics",
        ":go.uber.org__thriftrw",
        ":go.uber.org__zap",
        ":golang.org__x__net",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "go.uber.org__zap",
    install = [
        ".",
        "buffer",
        "internal/bufferpool",
        "internal/color",
        "internal/exit",
        "zapcore",
    ],
    module = "go.uber.org/zap",
    version = "v1.14.1",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
    ],
)

go_module(
    name = "golang.org__x__crypto",
    install = [
        "bcrypt",
        "blowfish",
        "cast5",
        "chacha20",
        "curve25519",
        "ed25519",
        "internal/subtle",
        "openpgp",
        "openpgp/armor",
        "openpgp/clearsign",
        "openpgp/elgamal",
        "openpgp/errors",
        "openpgp/packet",
        "openpgp/s2k",
        "pbkdf2",
        "pkcs12",
        "pkcs12/internal/rc2",
        "poly1305",
        "scrypt",
        "ssh",
        "ssh/internal/bcrypt_pbkdf",
        "ssh/terminal",
    ],
    module = "golang.org/x/crypto",
    version = "v0.0.0-20201221181555-eec23a3978ad",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__term"],
)

go_module(
    name = "golang.org__x__net",
    install = [
        "bpf",
        "context",
        "context/ctxhttp",
        "html",
        "html/atom",
        "html/charset",
        "http/httpguts",
        "http2",
        "http2/hpack",
        "idna",
        "internal/iana",
        "internal/socket",
        "internal/timeseries",
        "ipv4",
        "ipv6",
        "publicsuffix",
        "trace",
    ],
    module = "golang.org/x/net",
    version = "v0.0.0-20201110031124-69a78807bb2b",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__sys",
        ":golang.org__x__text",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys"],
        "default": [],
    }),
)

go_module(
    name = "golang.org__x__oauth2",
    install = [
        ".",
        "google",
        "internal",
        "jws",
        "jwt",
    ],
    module = "golang.org/x/oauth2",
    version = "v0.0.0-20200107190931-bf48bf16ab8d",
    visibility = ["PUBLIC"],
    deps = [
        ":cloud.google.com__go",
        ":golang.org__x__net",
    ],
)

go_module(
    name = "golang.org__x__sync",
    install = [
        "errgroup",
        "semaphore",
    ],
    module = "golang.org/x/sync",
    version = "v0.0.0-20201207232520-09787c993a3a",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.0.0-20210124154548-22da62e12c0c",
)

go_module(
    name = "golang.org__x__sys",
    download = ":_golang.org__x__sys#download",
    install = [
        "execabs",
        "internal/unsafeheader",
        "unix",
    ],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__term",
    install = ["."],
    module = "golang.org/x/term",
    version = "v0.0.0-20201117132131-f5c789dd3221",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys"],
)

go_module(
    name = "golang.org__x__text",
    install = [
        "encoding",
        "encoding/charmap",
        "encoding/htmlindex",
        "encoding/internal",
        "encoding/internal/identifier",
        "encoding/japanese",
        "encoding/korean",
        "encoding/simplifiedchinese",
        "encoding/traditionalchinese",
        "encoding/unicode",
        "internal/language",
        "internal/language/compact",
        "internal/tag",
        "internal/utf8internal",
        "language",
        "runes",
        "secure/bidirule",
        "transform",
        "unicode/bidi",
        "unicode/norm",
        "width",
    ],
    module = "golang.org/x/text",
    version = "v0.3.4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__time",
    install = ["rate"],
    module = "golang.org/x/time",
    version = "v0.0.0-20200630173020-3af7569d3a1e",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__xerrors",
    install = [
        ".",
        "internal",
    ],
    module = "golang.org/x/xerrors",
    version = "v0.0.0-20200804184101-5ec99f83aff1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gomodules.xyz__jsonpatch__v2",
    install = ["."],
    module = "gomodules.xyz/jsonpatch/v2",
    version = "v2.0.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__api",
    install = [
        "cloudresourcemanager/v1",
        "compute/v1",
        "container/v1",
        "googleapi",
        "googleapi/transport",
        "internal",
        "internal/gensupport",
        "internal/third_party/uritemplates",
        "iterator",
        "option",
        "option/internaloption",
        "serviceusage/v1",
        "storage/v1",
        "transport/cert",
        "transport/grpc",
        "transport/http",
        "transport/http/internal/propagation",
    ],
    module = "google.golang.org/api",
    version = "v0.20.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":go.opencensus.io",
        ":golang.org__x__oauth2",
        ":google.golang.org__grpc",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__genproto",
    install = [
        "googleapis/api/annotations",
        "googleapis/iam/credentials/v1",
        "googleapis/iam/v1",
        "googleapis/rpc/code",
        "googleapis/rpc/status",
        "googleapis/type/expr",
    ],
    module = "google.golang.org/genproto",
    version = "v0.0.0-20201110150050-8816d57aaa9a",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":google.golang.org__grpc",
        ":google.golang.org__protobuf",
    ],
)

go_mod_download(
    name = "google.golang.org__grpc",
    _tag = "download",
    module = "google.golang.org/grpc",
    version = "v1.27.1",
)

go_module(
    name = "google.golang.org__grpc",
    download = ":_google.golang.org__grpc#download",
    install = [
        ".",
        "attributes",
        "backoff",
        "balancer",
        "balancer/base",
        "balancer/grpclb",
        "balancer/grpclb/grpc_lb_v1",
        "balancer/roundrobin",
        "binarylog/grpc_binarylog_v1",
        "codes",
        "connectivity",
        "credentials",
        "credentials/alts",
        "credentials/alts/internal",
        "credentials/alts/internal/authinfo",
        "credentials/alts/internal/conn",
        "credentials/alts/internal/handshaker",
        "credentials/alts/internal/handshaker/service",
        "credentials/alts/internal/proto/grpc_gcp",
        "credentials/google",
        "credentials/internal",
        "credentials/oauth",
        "encoding",
        "encoding/proto",
        "grpclog",
        "health",
        "health/grpc_health_v1",
        "internal",
        "internal/backoff",
        "internal/balancerload",
        "internal/binarylog",
        "internal/buffer",
        "internal/channelz",
        "internal/envconfig",
        "internal/grpcrand",
        "internal/grpcsync",
        "internal/resolver/dns",
        "internal/resolver/passthrough",
        "internal/syscall",
        "internal/transport",
        "keepalive",
        "metadata",
        "naming",
        "peer",
        "resolver",
        "serviceconfig",
        "stats",
        "status",
        "tap",
    ],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf",
        ":github.com__google__go-cmp",
        ":golang.org__x__net",
        ":golang.org__x__oauth2",
        ":google.golang.org__genproto",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_linux_amd64": [":golang.org__x__sys"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__protobuf",
    install = [
        "encoding/prototext",
        "encoding/protowire",
        "internal/descfmt",
        "internal/descopts",
        "internal/detrand",
        "internal/encoding/defval",
        "internal/encoding/messageset",
        "internal/encoding/tag",
        "internal/encoding/text",
        "internal/errors",
        "internal/fieldsort",
        "internal/filedesc",
        "internal/filetype",
        "internal/flags",
        "internal/genid",
        "internal/impl",
        "internal/mapsort",
        "internal/pragma",
        "internal/set",
        "internal/strs",
        "internal/version",
        "proto",
        "reflect/protoreflect",
        "reflect/protoregistry",
        "runtime/protoiface",
        "runtime/protoimpl",
        "types/descriptorpb",
        "types/known/anypb",
        "types/known/durationpb",
        "types/known/timestamppb",
    ],
    module = "google.golang.org/protobuf",
    version = "v1.25.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__go-playground__validator.v9",
    install = ["."],
    module = "gopkg.in/go-playground/validator.v9",
    version = "v9.29.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-playground__universal-translator",
        ":github.com__leodido__go-urn",
    ],
)

go_module(
    name = "gopkg.in__gorp.v1",
    install = ["."],
    module = "gopkg.in/gorp.v1",
    version = "v1.7.2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__inf.v0",
    install = ["."],
    module = "gopkg.in/inf.v0",
    version = "v0.9.1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__ini.v1",
    install = ["."],
    module = "gopkg.in/ini.v1",
    version = "v1.51.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__resty.v1",
    install = ["."],
    module = "gopkg.in/resty.v1",
    version = "v1.12.0",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net"],
)

go_module(
    name = "gopkg.in__square__go-jose.v2",
    install = [
        ".",
        "cipher",
        "json",
        "jwt",
    ],
    module = "gopkg.in/square/go-jose.v2",
    version = "v2.5.1",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto"],
)

go_module(
    name = "gopkg.in__yaml.v2",
    install = ["."],
    module = "gopkg.in/yaml.v2",
    version = "v2.3.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__yaml.v3",
    install = ["."],
    module = "gopkg.in/yaml.v3",
    version = "v3.0.0-20200313102051-9f266ea9e77c",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3",
    install = [
        "internal/experimental/registry",
        "internal/fileutil",
        "internal/ignore",
        "internal/resolver",
        "internal/sympath",
        "internal/third_party/dep/fs",
        "internal/third_party/k8s.io/kubernetes/deployment/util",
        "internal/tlsutil",
        "internal/urlutil",
        "internal/version",
        "pkg/action",
        "pkg/chart",
        "pkg/chart/loader",
        "pkg/chartutil",
        "pkg/cli",
        "pkg/cli/values",
        "pkg/downloader",
        "pkg/engine",
        "pkg/gates",
        "pkg/getter",
        "pkg/helmpath",
        "pkg/helmpath/xdg",
        "pkg/kube",
        "pkg/kube/fake",
        "pkg/lint",
        "pkg/lint/rules",
        "pkg/lint/support",
        "pkg/plugin",
        "pkg/postrender",
        "pkg/provenance",
        "pkg/release",
        "pkg/releaseutil",
        "pkg/repo",
        "pkg/storage",
        "pkg/storage/driver",
        "pkg/strvals",
        "pkg/time",
    ],
    module = "helm.sh/helm/v3",
    version = "v3.5.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__BurntSushi__toml",
        ":github.com__Masterminds__semver__v3",
        ":github.com__Masterminds__sprig__v3",
        ":github.com__Masterminds__squirrel",
        ":github.com__asaskevich__govalidator",
        ":github.com__containerd__containerd",
        ":github.com__cyphar__filepath-securejoin",
        ":github.com__deislabs__oras",
        ":github.com__docker__go-units",
        ":github.com__evanphx__json-patch",
        ":github.com__gobwas__glob",
        ":github.com__gosuri__uitable",
        ":github.com__jmoiron__sqlx",
        ":github.com__lib__pq",
        ":github.com__mitchellh__copystructure",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec",
        ":github.com__pkg__errors",
        ":github.com__rubenv__sql-migrate",
        ":github.com__sirupsen__logrus",
        ":github.com__spf13__pflag",
        ":github.com__xeipuuv__gojsonschema",
        ":golang.org__x__crypto",
        ":golang.org__x__term",
        ":k8s.io__api",
        ":k8s.io__apiextensions-apiserver",
        ":k8s.io__apimachinery",
        ":k8s.io__apiserver",
        ":k8s.io__cli-runtime",
        ":k8s.io__client-go",
        ":k8s.io__kubectl",
        ":sigs.k8s.io__yaml",
    ],
)

go_mod_download(
    name = "k8s.io__api",
    _tag = "download",
    module = "k8s.io/api",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__api",
    download = ":_k8s.io__api#download",
    install = [
        "admission/v1",
        "admission/v1beta1",
        "admissionregistration/v1",
        "admissionregistration/v1beta1",
        "apiserverinternal/v1alpha1",
        "apps/v1",
        "apps/v1beta1",
        "apps/v1beta2",
        "authentication/v1",
        "authentication/v1beta1",
        "authorization/v1",
        "authorization/v1beta1",
        "autoscaling/v1",
        "autoscaling/v2beta1",
        "autoscaling/v2beta2",
        "batch/v1",
        "batch/v1beta1",
        "batch/v2alpha1",
        "certificates/v1",
        "certificates/v1beta1",
        "coordination/v1",
        "coordination/v1beta1",
        "core/v1",
        "discovery/v1alpha1",
        "discovery/v1beta1",
        "events/v1",
        "events/v1beta1",
        "extensions/v1beta1",
        "flowcontrol/v1alpha1",
        "flowcontrol/v1beta1",
        "imagepolicy/v1alpha1",
        "networking/v1",
        "networking/v1beta1",
        "node/v1",
        "node/v1alpha1",
        "node/v1beta1",
        "policy/v1beta1",
        "rbac/v1",
        "rbac/v1alpha1",
        "rbac/v1beta1",
        "scheduling/v1",
        "scheduling/v1alpha1",
        "scheduling/v1beta1",
        "storage/v1",
        "storage/v1alpha1",
        "storage/v1beta1",
    ],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf",
        ":k8s.io__apimachinery",
    ],
)

go_mod_download(
    name = "k8s.io__apiextensions-apiserver",
    _tag = "download",
    module = "k8s.io/apiextensions-apiserver",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__apiextensions-apiserver",
    download = ":_k8s.io__apiextensions-apiserver#download",
    install = [
        "pkg/apis/apiextensions",
        "pkg/apis/apiextensions/v1",
        "pkg/apis/apiextensions/v1beta1",
    ],
    module = "k8s.io/apiextensions-apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf",
        ":k8s.io__apimachinery",
        ":k8s.io__utils",
    ],
)

go_mod_download(
    name = "k8s.io__apimachinery",
    _tag = "download",
    module = "k8s.io/apimachinery",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__apimachinery",
    download = ":_k8s.io__apimachinery#download",
    install = [
        "pkg/api/equality",
        "pkg/api/errors",
        "pkg/api/meta",
        "pkg/api/resource",
        "pkg/api/validation",
        "pkg/apis/meta/internalversion",
        "pkg/apis/meta/v1",
        "pkg/apis/meta/v1/unstructured",
        "pkg/apis/meta/v1/unstructured/unstructuredscheme",
        "pkg/apis/meta/v1/validation",
        "pkg/apis/meta/v1beta1",
        "pkg/conversion",
        "pkg/conversion/queryparams",
        "pkg/fields",
        "pkg/labels",
        "pkg/runtime",
        "pkg/runtime/schema",
        "pkg/runtime/serializer",
        "pkg/runtime/serializer/json",
        "pkg/runtime/serializer/protobuf",
        "pkg/runtime/serializer/recognizer",
        "pkg/runtime/serializer/streaming",
        "pkg/runtime/serializer/versioning",
        "pkg/selection",
        "pkg/types",
        "pkg/util/cache",
        "pkg/util/clock",
        "pkg/util/diff",
        "pkg/util/duration",
        "pkg/util/errors",
        "pkg/util/framer",
        "pkg/util/httpstream",
        "pkg/util/httpstream/spdy",
        "pkg/util/intstr",
        "pkg/util/json",
        "pkg/util/jsonmergepatch",
        "pkg/util/mergepatch",
        "pkg/util/naming",
        "pkg/util/net",
        "pkg/util/proxy",
        "pkg/util/remotecommand",
        "pkg/util/runtime",
        "pkg/util/sets",
        "pkg/util/strategicpatch",
        "pkg/util/uuid",
        "pkg/util/validation",
        "pkg/util/validation/field",
        "pkg/util/version",
        "pkg/util/wait",
        "pkg/util/yaml",
        "pkg/version",
        "pkg/watch",
        "third_party/forked/golang/json",
        "third_party/forked/golang/netutil",
        "third_party/forked/golang/reflect",
    ],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew",
        ":github.com__docker__spdystream",
        ":github.com__evanphx__json-patch",
        ":github.com__gogo__protobuf",
        ":github.com__google__go-cmp",
        ":github.com__google__gofuzz",
        ":github.com__google__uuid",
        ":github.com__hashicorp__golang-lru",
        ":github.com__json-iterator__go",
        ":github.com__modern-go__reflect2",
        ":github.com__mxk__go-flowrate",
        ":golang.org__x__net",
        ":gopkg.in__inf.v0",
        ":k8s.io__klog__v2",
        ":k8s.io__kube-openapi",
        ":sigs.k8s.io__structured-merge-diff__v4",
        ":sigs.k8s.io__yaml",
    ],
)

go_mod_download(
    name = "k8s.io__apiserver",
    _tag = "download",
    module = "k8s.io/apiserver",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__apiserver",
    download = ":_k8s.io__apiserver#download",
    install = [
        "pkg/endpoints/deprecation",
        "pkg/features",
        "pkg/util/feature",
    ],
    module = "k8s.io/apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery",
        ":k8s.io__component-base",
    ],
)

go_mod_download(
    name = "k8s.io__cli-runtime",
    _tag = "download",
    module = "k8s.io/cli-runtime",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__cli-runtime",
    download = ":_k8s.io__cli-runtime#download",
    install = [
        "pkg/genericclioptions",
        "pkg/kustomize",
        "pkg/kustomize/k8sdeps",
        "pkg/kustomize/k8sdeps/configmapandsecret",
        "pkg/kustomize/k8sdeps/kunstruct",
        "pkg/kustomize/k8sdeps/kv",
        "pkg/kustomize/k8sdeps/transformer",
        "pkg/kustomize/k8sdeps/transformer/hash",
        "pkg/kustomize/k8sdeps/transformer/patch",
        "pkg/kustomize/k8sdeps/validator",
        "pkg/printers",
        "pkg/resource",
    ],
    module = "k8s.io/cli-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__googleapis__gnostic",
        ":github.com__liggitt__tabwriter",
        ":github.com__pkg__errors",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":golang.org__x__text",
        ":gopkg.in__yaml.v2",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":k8s.io__client-go",
        ":sigs.k8s.io__kustomize",
        ":sigs.k8s.io__yaml",
    ],
)

go_mod_download(
    name = "k8s.io__client-go",
    _tag = "download",
    module = "k8s.io/client-go",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__client-go",
    download = ":_k8s.io__client-go#download",
    install = [
        "discovery",
        "discovery/cached/disk",
        "discovery/fake",
        "dynamic",
        "informers",
        "informers/admissionregistration",
        "informers/admissionregistration/v1",
        "informers/admissionregistration/v1beta1",
        "informers/apiserverinternal",
        "informers/apiserverinternal/v1alpha1",
        "informers/apps",
        "informers/apps/v1",
        "informers/apps/v1beta1",
        "informers/apps/v1beta2",
        "informers/autoscaling",
        "informers/autoscaling/v1",
        "informers/autoscaling/v2beta1",
        "informers/autoscaling/v2beta2",
        "informers/batch",
        "informers/batch/v1",
        "informers/batch/v1beta1",
        "informers/batch/v2alpha1",
        "informers/certificates",
        "informers/certificates/v1",
        "informers/certificates/v1beta1",
        "informers/coordination",
        "informers/coordination/v1",
        "informers/coordination/v1beta1",
        "informers/core",
        "informers/core/v1",
        "informers/discovery",
        "informers/discovery/v1alpha1",
        "informers/discovery/v1beta1",
        "informers/events",
        "informers/events/v1",
        "informers/events/v1beta1",
        "informers/extensions",
        "informers/extensions/v1beta1",
        "informers/flowcontrol",
        "informers/flowcontrol/v1alpha1",
        "informers/flowcontrol/v1beta1",
        "informers/internalinterfaces",
        "informers/networking",
        "informers/networking/v1",
        "informers/networking/v1beta1",
        "informers/node",
        "informers/node/v1",
        "informers/node/v1alpha1",
        "informers/node/v1beta1",
        "informers/policy",
        "informers/policy/v1beta1",
        "informers/rbac",
        "informers/rbac/v1",
        "informers/rbac/v1alpha1",
        "informers/rbac/v1beta1",
        "informers/scheduling",
        "informers/scheduling/v1",
        "informers/scheduling/v1alpha1",
        "informers/scheduling/v1beta1",
        "informers/storage",
        "informers/storage/v1",
        "informers/storage/v1alpha1",
        "informers/storage/v1beta1",
        "kubernetes",
        "kubernetes/fake",
        "kubernetes/scheme",
        "kubernetes/typed/admissionregistration/v1",
        "kubernetes/typed/admissionregistration/v1/fake",
        "kubernetes/typed/admissionregistration/v1beta1",
        "kubernetes/typed/admissionregistration/v1beta1/fake",
        "kubernetes/typed/apiserverinternal/v1alpha1",
        "kubernetes/typed/apiserverinternal/v1alpha1/fake",
        "kubernetes/typed/apps/v1",
        "kubernetes/typed/apps/v1/fake",
        "kubernetes/typed/apps/v1beta1",
        "kubernetes/typed/apps/v1beta1/fake",
        "kubernetes/typed/apps/v1beta2",
        "kubernetes/typed/apps/v1beta2/fake",
        "kubernetes/typed/authentication/v1",
        "kubernetes/typed/authentication/v1/fake",
        "kubernetes/typed/authentication/v1beta1",
        "kubernetes/typed/authentication/v1beta1/fake",
        "kubernetes/typed/authorization/v1",
        "kubernetes/typed/authorization/v1/fake",
        "kubernetes/typed/authorization/v1beta1",
        "kubernetes/typed/authorization/v1beta1/fake",
        "kubernetes/typed/autoscaling/v1",
        "kubernetes/typed/autoscaling/v1/fake",
        "kubernetes/typed/autoscaling/v2beta1",
        "kubernetes/typed/autoscaling/v2beta1/fake",
        "kubernetes/typed/autoscaling/v2beta2",
        "kubernetes/typed/autoscaling/v2beta2/fake",
        "kubernetes/typed/batch/v1",
        "kubernetes/typed/batch/v1/fake",
        "kubernetes/typed/batch/v1beta1",
        "kubernetes/typed/batch/v1beta1/fake",
        "kubernetes/typed/batch/v2alpha1",
        "kubernetes/typed/batch/v2alpha1/fake",
        "kubernetes/typed/certificates/v1",
        "kubernetes/typed/certificates/v1/fake",
        "kubernetes/typed/certificates/v1beta1",
        "kubernetes/typed/certificates/v1beta1/fake",
        "kubernetes/typed/coordination/v1",
        "kubernetes/typed/coordination/v1/fake",
        "kubernetes/typed/coordination/v1beta1",
        "kubernetes/typed/coordination/v1beta1/fake",
        "kubernetes/typed/core/v1",
        "kubernetes/typed/core/v1/fake",
        "kubernetes/typed/discovery/v1alpha1",
        "kubernetes/typed/discovery/v1alpha1/fake",
        "kubernetes/typed/discovery/v1beta1",
        "kubernetes/typed/discovery/v1beta1/fake",
        "kubernetes/typed/events/v1",
        "kubernetes/typed/events/v1/fake",
        "kubernetes/typed/events/v1beta1",
        "kubernetes/typed/events/v1beta1/fake",
        "kubernetes/typed/extensions/v1beta1",
        "kubernetes/typed/extensions/v1beta1/fake",
        "kubernetes/typed/flowcontrol/v1alpha1",
        "kubernetes/typed/flowcontrol/v1alpha1/fake",
        "kubernetes/typed/flowcontrol/v1beta1",
        "kubernetes/typed/flowcontrol/v1beta1/fake",
        "kubernetes/typed/networking/v1",
        "kubernetes/typed/networking/v1/fake",
        "kubernetes/typed/networking/v1beta1",
        "kubernetes/typed/networking/v1beta1/fake",
        "kubernetes/typed/node/v1",
        "kubernetes/typed/node/v1/fake",
        "kubernetes/typed/node/v1alpha1",
        "kubernetes/typed/node/v1alpha1/fake",
        "kubernetes/typed/node/v1beta1",
        "kubernetes/typed/node/v1beta1/fake",
        "kubernetes/typed/policy/v1beta1",
        "kubernetes/typed/policy/v1beta1/fake",
        "kubernetes/typed/rbac/v1",
        "kubernetes/typed/rbac/v1/fake",
        "kubernetes/typed/rbac/v1alpha1",
        "kubernetes/typed/rbac/v1alpha1/fake",
        "kubernetes/typed/rbac/v1beta1",
        "kubernetes/typed/rbac/v1beta1/fake",
        "kubernetes/typed/scheduling/v1",
        "kubernetes/typed/scheduling/v1/fake",
        "kubernetes/typed/scheduling/v1alpha1",
        "kubernetes/typed/scheduling/v1alpha1/fake",
        "kubernetes/typed/scheduling/v1beta1",
        "kubernetes/typed/scheduling/v1beta1/fake",
        "kubernetes/typed/storage/v1",
        "kubernetes/typed/storage/v1/fake",
        "kubernetes/typed/storage/v1alpha1",
        "kubernetes/typed/storage/v1alpha1/fake",
        "kubernetes/typed/storage/v1beta1",
        "kubernetes/typed/storage/v1beta1/fake",
        "listers/admissionregistration/v1",
        "listers/admissionregistration/v1beta1",
        "listers/apiserverinternal/v1alpha1",
        "listers/apps/v1",
        "listers/apps/v1beta1",
        "listers/apps/v1beta2",
        "listers/autoscaling/v1",
        "listers/autoscaling/v2beta1",
        "listers/autoscaling/v2beta2",
        "listers/batch/v1",
        "listers/batch/v1beta1",
        "listers/batch/v2alpha1",
        "listers/certificates/v1",
        "listers/certificates/v1beta1",
        "listers/coordination/v1",
        "listers/coordination/v1beta1",
        "listers/core/v1",
        "listers/discovery/v1alpha1",
        "listers/discovery/v1beta1",
        "listers/events/v1",
        "listers/events/v1beta1",
        "listers/extensions/v1beta1",
        "listers/flowcontrol/v1alpha1",
        "listers/flowcontrol/v1beta1",
        "listers/networking/v1",
        "listers/networking/v1beta1",
        "listers/node/v1",
        "listers/node/v1alpha1",
        "listers/node/v1beta1",
        "listers/policy/v1beta1",
        "listers/rbac/v1",
        "listers/rbac/v1alpha1",
        "listers/rbac/v1beta1",
        "listers/scheduling/v1",
        "listers/scheduling/v1alpha1",
        "listers/scheduling/v1beta1",
        "listers/storage/v1",
        "listers/storage/v1alpha1",
        "listers/storage/v1beta1",
        "pkg/apis/clientauthentication",
        "pkg/apis/clientauthentication/v1alpha1",
        "pkg/apis/clientauthentication/v1beta1",
        "pkg/version",
        "plugin/pkg/client/auth/azure",
        "plugin/pkg/client/auth/exec",
        "plugin/pkg/client/auth/gcp",
        "plugin/pkg/client/auth/oidc",
        "rest",
        "rest/fake",
        "rest/watch",
        "restmapper",
        "scale",
        "scale/scheme",
        "scale/scheme/appsint",
        "scale/scheme/appsv1beta1",
        "scale/scheme/appsv1beta2",
        "scale/scheme/autoscalingv1",
        "scale/scheme/extensionsint",
        "scale/scheme/extensionsv1beta1",
        "testing",
        "third_party/forked/golang/template",
        "tools/auth",
        "tools/cache",
        "tools/clientcmd",
        "tools/clientcmd/api",
        "tools/clientcmd/api/latest",
        "tools/clientcmd/api/v1",
        "tools/events",
        "tools/leaderelection",
        "tools/leaderelection/resourcelock",
        "tools/metrics",
        "tools/pager",
        "tools/portforward",
        "tools/record",
        "tools/record/util",
        "tools/reference",
        "tools/remotecommand",
        "tools/watch",
        "transport",
        "transport/spdy",
        "util/cert",
        "util/connrotation",
        "util/exec",
        "util/flowcontrol",
        "util/homedir",
        "util/jsonpath",
        "util/keyutil",
        "util/workqueue",
    ],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__davecgh__go-spew",
        ":github.com__evanphx__json-patch",
        ":github.com__golang__groupcache",
        ":github.com__golang__protobuf",
        ":github.com__googleapis__gnostic",
        ":github.com__gregjones__httpcache",
        ":github.com__imdario__mergo",
        ":github.com__peterbourgon__diskv",
        ":github.com__spf13__pflag",
        ":golang.org__x__crypto",
        ":golang.org__x__net",
        ":golang.org__x__oauth2",
        ":golang.org__x__time",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":k8s.io__klog__v2",
        ":k8s.io__utils",
    ],
)

go_mod_download(
    name = "k8s.io__cluster-bootstrap",
    _tag = "download",
    module = "k8s.io/cluster-bootstrap",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__cluster-bootstrap",
    download = ":_k8s.io__cluster-bootstrap#download",
    install = [
        "token/api",
        "token/util",
        "util/secrets",
    ],
    module = "k8s.io/cluster-bootstrap",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":k8s.io__klog__v2",
    ],
)

go_mod_download(
    name = "k8s.io__component-base",
    _tag = "download",
    module = "k8s.io/component-base",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__component-base",
    download = ":_k8s.io__component-base#download",
    install = [
        "config",
        "featuregate",
        "version",
    ],
    module = "k8s.io/component-base",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spf13__pflag",
        ":k8s.io__apimachinery",
        ":k8s.io__klog__v2",
    ],
)

go_mod_download(
    name = "k8s.io__component-helpers",
    _tag = "download",
    module = "k8s.io/component-helpers",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__component-helpers",
    download = ":_k8s.io__component-helpers#download",
    install = [
        "scheduling/corev1",
        "scheduling/corev1/nodeaffinity",
    ],
    module = "k8s.io/component-helpers",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api",
        ":k8s.io__apimachinery",
    ],
)

go_module(
    name = "k8s.io__klog",
    install = ["."],
    module = "k8s.io/klog",
    version = "v1.0.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__klog__v2",
    install = ["."],
    module = "k8s.io/klog/v2",
    version = "v2.4.0",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-logr__logr"],
)

go_module(
    name = "k8s.io__kube-openapi",
    install = [
        "pkg/common",
        "pkg/util/proto",
        "pkg/util/proto/validation",
    ],
    module = "k8s.io/kube-openapi",
    version = "v0.0.0-20201113171705-d219536bb9fd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__emicklei__go-restful",
        ":github.com__go-openapi__spec",
        ":github.com__googleapis__gnostic",
        ":gopkg.in__yaml.v2",
    ],
)

go_mod_download(
    name = "k8s.io__kube-scheduler",
    _tag = "download",
    module = "k8s.io/kube-scheduler",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__kube-scheduler",
    download = ":_k8s.io__kube-scheduler#download",
    install = ["extender/v1"],
    module = "k8s.io/kube-scheduler",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api",
        ":k8s.io__apimachinery",
    ],
)

go_mod_download(
    name = "k8s.io__kubectl",
    _tag = "download",
    module = "k8s.io/kubectl",
    version = "v0.20.5",
)

go_module(
    name = "k8s.io__kubectl",
    download = ":_k8s.io__kubectl#download",
    install = [
        "pkg/cmd/util",
        "pkg/scheme",
        "pkg/util/interrupt",
        "pkg/util/openapi",
        "pkg/util/openapi/validation",
        "pkg/util/templates",
        "pkg/util/term",
        "pkg/validation",
    ],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__MakeNowJust__heredoc",
        ":github.com__evanphx__json-patch",
        ":github.com__exponent-io__jsonpath",
        ":github.com__go-openapi__spec",
        ":github.com__googleapis__gnostic",
        ":github.com__mitchellh__go-wordwrap",
        ":github.com__moby__term",
        ":github.com__russross__blackfriday",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":golang.org__x__sys",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":k8s.io__cli-runtime",
        ":k8s.io__client-go",
        ":k8s.io__component-base",
        ":k8s.io__klog__v2",
        ":k8s.io__kube-openapi",
        ":k8s.io__utils",
    ],
)

go_module(
    name = "k8s.io__kubernetes",
    install = [
        "cmd/kubeadm/app/apis/kubeadm",
        "cmd/kubeadm/app/features",
        "pkg/api/v1/resource",
        "pkg/apis/core",
        "pkg/apis/core/helper",
        "pkg/apis/core/v1/helper",
        "pkg/apis/storage",
        "pkg/apis/storage/util",
        "pkg/features",
        "pkg/scheduler/apis/config",
        "pkg/scheduler/framework",
        "pkg/scheduler/util",
    ],
    module = "k8s.io/kubernetes",
    version = "v1.20.5",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":k8s.io__api",
        ":k8s.io__apimachinery",
        ":k8s.io__apiserver",
        ":k8s.io__client-go",
        ":k8s.io__cluster-bootstrap",
        ":k8s.io__component-base",
        ":k8s.io__component-helpers",
        ":k8s.io__klog__v2",
        ":k8s.io__kube-scheduler",
    ],
)

go_module(
    name = "k8s.io__utils",
    install = [
        "buffer",
        "exec",
        "integer",
        "pointer",
        "trace",
    ],
    module = "k8s.io/utils",
    version = "v0.0.0-20201110183641-67b214c5f920",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__klog__v2"],
)

go_module(
    name = "logur.dev__adapter__logrus",
    install = ["."],
    module = "logur.dev/adapter/logrus",
    version = "v0.4.1",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__sirupsen__logrus",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__adapter__zap",
    install = [
        ".",
        "internal/keyvals",
    ],
    module = "logur.dev/adapter/zap",
    version = "v0.4.1",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__zap",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__integration__logr",
    install = [
        ".",
        "internal/keyvals",
    ],
    module = "logur.dev/integration/logr",
    version = "v0.4.0",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__integration__watermill",
    install = ["."],
    module = "logur.dev/integration/watermill",
    version = "v0.4.2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__integration__zap",
    install = ["."],
    module = "logur.dev/integration/zap",
    version = "v0.3.2",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__zap",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__logur",
    install = [
        ".",
        "conformance",
        "internal/keyvals",
        "logtesting",
    ],
    module = "logur.dev/logur",
    version = "v0.17.0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__controller-runtime",
    install = [
        ".",
        "pkg/builder",
        "pkg/cache",
        "pkg/cache/internal",
        "pkg/client",
        "pkg/client/apiutil",
        "pkg/client/config",
        "pkg/controller",
        "pkg/controller/controllerutil",
        "pkg/conversion",
        "pkg/event",
        "pkg/handler",
        "pkg/healthz",
        "pkg/internal/controller",
        "pkg/internal/controller/metrics",
        "pkg/internal/log",
        "pkg/internal/recorder",
        "pkg/leaderelection",
        "pkg/log",
        "pkg/manager",
        "pkg/manager/signals",
        "pkg/metrics",
        "pkg/predicate",
        "pkg/ratelimiter",
        "pkg/reconcile",
        "pkg/recorder",
        "pkg/runtime/inject",
        "pkg/runtime/scheme",
        "pkg/scheme",
        "pkg/source",
        "pkg/source/internal",
        "pkg/webhook",
        "pkg/webhook/admission",
        "pkg/webhook/conversion",
        "pkg/webhook/internal/certwatcher",
        "pkg/webhook/internal/metrics",
    ],
    module = "sigs.k8s.io/controller-runtime",
    version = "v0.6.3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__fsnotify__fsnotify",
        ":github.com__go-logr__logr",
        ":github.com__prometheus__client_golang",
        ":golang.org__x__time",
        ":gomodules.xyz__jsonpatch__v2",
        ":k8s.io__api",
        ":k8s.io__apiextensions-apiserver",
        ":k8s.io__apimachinery",
        ":k8s.io__client-go",
        ":k8s.io__utils",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize",
    install = [
        "pkg/commands/build",
        "pkg/constants",
        "pkg/expansion",
        "pkg/factory",
        "pkg/fs",
        "pkg/git",
        "pkg/gvk",
        "pkg/ifc",
        "pkg/ifc/transformer",
        "pkg/image",
        "pkg/internal/error",
        "pkg/loader",
        "pkg/patch",
        "pkg/patch/transformer",
        "pkg/resid",
        "pkg/resmap",
        "pkg/resource",
        "pkg/target",
        "pkg/transformers",
        "pkg/transformers/config",
        "pkg/transformers/config/defaultconfig",
        "pkg/types",
    ],
    module = "sigs.k8s.io/kustomize",
    version = "v2.0.3+incompatible",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__ghodss__yaml",
        ":github.com__go-openapi__spec",
        ":github.com__pkg__errors",
        ":github.com__spf13__cobra",
        ":k8s.io__kube-openapi",
    ],
)

go_module(
    name = "sigs.k8s.io__structured-merge-diff__v4",
    install = ["value"],
    module = "sigs.k8s.io/structured-merge-diff/v4",
    version = "v4.0.2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__json-iterator__go",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "sigs.k8s.io__testing_frameworks",
    install = [
        "integration",
        "integration/addr",
        "integration/internal",
    ],
    module = "sigs.k8s.io/testing_frameworks",
    version = "v0.1.2",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega"],
)

go_module(
    name = "sigs.k8s.io__yaml",
    install = ["."],
    module = "sigs.k8s.io/yaml",
    version = "v1.2.0",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)
