config_setting(
    name = "__config_linux_amd64",
    values = {
        "os": "linux",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_amd64",
    values = {
        "os": "darwin",
        "cpu": "amd64",
    },
)

config_setting(
    name = "__config_darwin_arm64",
    values = {
        "os": "darwin",
        "cpu": "arm64",
    },
)

go_mod_download(
    name = "cloud.google.com__go",
    _tag = "download",
    module = "cloud.google.com/go",
    version = "v0.81.0",
)

go_module(
    name = "cloud.google.com__go__compute__metadata",
    download = ":_cloud.google.com__go#download",
    install = ["compute/metadata"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "cloud.google.com__go__iam",
    download = ":_cloud.google.com__go#download",
    install = ["iam"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__genproto__googleapis__iam__v1",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__metadata",
    ],
)

go_module(
    name = "cloud.google.com__go__iam__credentials__apiv1",
    download = ":_cloud.google.com__go#download",
    install = ["iam/credentials/apiv1"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__grpc",
        ":google.golang.org__genproto__googleapis__iam__credentials__v1",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__metadata",
    ],
)

go_module(
    name = "cloud.google.com__go__internal",
    download = ":_cloud.google.com__go#download",
    install = ["internal"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__api__googleapi",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "cloud.google.com__go__internal__optional",
    download = ":_cloud.google.com__go#download",
    install = ["internal/optional"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "cloud.google.com__go__internal__trace",
    download = ":_cloud.google.com__go#download",
    install = ["internal/trace"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__trace",
        ":google.golang.org__api__googleapi",
        ":google.golang.org__genproto__googleapis__rpc__code",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "cloud.google.com__go__internal__version",
    download = ":_cloud.google.com__go#download",
    install = ["internal/version"],
    module = "cloud.google.com/go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "cloud.google.com__go__storage",
    _tag = "download",
    module = "cloud.google.com/go/storage",
    version = "v1.10.0",
)

go_module(
    name = "cloud.google.com__go__storage",
    download = ":_cloud.google.com__go__storage#download",
    install = ["."],
    module = "cloud.google.com/go/storage",
    visibility = ["PUBLIC"],
    deps = [
        ":cloud.google.com__go__iam",
        ":cloud.google.com__go__internal",
        ":cloud.google.com__go__internal__optional",
        ":cloud.google.com__go__internal__trace",
        ":cloud.google.com__go__internal__version",
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__iterator",
        ":google.golang.org__api__option",
        ":google.golang.org__api__storage__v1",
        ":google.golang.org__api__transport__http",
        ":google.golang.org__genproto__googleapis__iam__v1",
        ":google.golang.org__genproto__googleapis__type__expr",
    ],
)

go_mod_download(
    name = "emperror.dev__emperror",
    _tag = "download",
    module = "emperror.dev/emperror",
    version = "v0.32.0",
)

go_module(
    name = "emperror.dev__emperror",
    download = ":_emperror.dev__emperror#download",
    install = ["."],
    module = "emperror.dev/emperror",
    visibility = ["PUBLIC"],
    deps = [":emperror.dev__errors"],
)

go_mod_download(
    name = "emperror.dev__errors",
    _tag = "download",
    module = "emperror.dev/errors",
    version = "v0.8.0",
)

go_module(
    name = "emperror.dev__errors",
    download = ":_emperror.dev__errors#download",
    install = ["."],
    module = "emperror.dev/errors",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":go.uber.org__multierr",
    ],
)

go_module(
    name = "emperror.dev__errors__match",
    download = ":_emperror.dev__errors#download",
    install = ["match"],
    module = "emperror.dev/errors",
    visibility = ["PUBLIC"],
    deps = [":emperror.dev__errors"],
)

go_module(
    name = "emperror.dev__errors__utils__keyval",
    download = ":_emperror.dev__errors#download",
    install = ["utils/keyval"],
    module = "emperror.dev/errors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "emperror.dev__handler__logur",
    _tag = "download",
    module = "emperror.dev/handler/logur",
    version = "v0.4.0",
)

go_module(
    name = "emperror.dev__handler__logur",
    download = ":_emperror.dev__handler__logur#download",
    install = ["."],
    module = "emperror.dev/handler/logur",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":emperror.dev__errors__utils__keyval",
        ":logur.dev__logur",
    ],
)

go_mod_download(
    name = "github.com__Azure__azure-pipeline-go",
    _tag = "download",
    module = "github.com/Azure/azure-pipeline-go",
    version = "v0.2.3",
)

go_module(
    name = "github.com__Azure__azure-pipeline-go__pipeline",
    download = ":_github.com__Azure__azure-pipeline-go#download",
    install = ["pipeline"],
    module = "github.com/Azure/azure-pipeline-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-ieproxy"],
)

go_mod_download(
    name = "github.com__Azure__azure-sdk-for-go",
    _tag = "download",
    module = "github.com/Azure/azure-sdk-for-go",
    version = "v44.2.0+incompatible",
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__profiles__latest__authorization__mgmt__authorization",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["profiles/latest/authorization/mgmt/authorization"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__Azure__azure-sdk-for-go__services__authorization__mgmt__2015-07-01__authorization"],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__authorization__mgmt__2015-07-01__authorization",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/authorization/mgmt/2015-07-01/authorization"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__compute__mgmt__2018-10-01__compute",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/compute/mgmt/2018-10-01/compute"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__containerservice__mgmt__2020-02-01__containerservice",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/containerservice/mgmt/2020-02-01/containerservice"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__network__mgmt__2018-10-01__network",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/network/mgmt/2018-10-01/network"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__preview__monitor__mgmt__2018-09-01__insights",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/preview/monitor/mgmt/2018-09-01/insights"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__resources__mgmt__2016-06-01__subscriptions",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/resources/mgmt/2016-06-01/subscriptions"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__resources__mgmt__2018-02-01__resources",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/resources/mgmt/2018-02-01/resources"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__storage__mgmt__2017-10-01__storage",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/storage/mgmt/2017-10-01/storage"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__services__storage__mgmt__2019-06-01__storage",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["services/storage/mgmt/2019-06-01/storage"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__version",
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__autorest__to",
        ":github.com__Azure__go-autorest__autorest__validation",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__azure-sdk-for-go__version",
    download = ":_github.com__Azure__azure-sdk-for-go#download",
    install = ["version"],
    module = "github.com/Azure/azure-sdk-for-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Azure__azure-storage-blob-go",
    _tag = "download",
    module = "github.com/Azure/azure-storage-blob-go",
    version = "v0.10.0",
)

go_module(
    name = "github.com__Azure__azure-storage-blob-go__azblob",
    download = ":_github.com__Azure__azure-storage-blob-go#download",
    install = ["azblob"],
    module = "github.com/Azure/azure-storage-blob-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-pipeline-go__pipeline",
        ":github.com__google__uuid",
        ":golang.org__x__sys__unix",
    ],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest",
    version = "v0.11.12",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest",
    download = ":_github.com__Azure__go-autorest__autorest#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__logger",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__azure",
    download = ":_github.com__Azure__go-autorest__autorest#download",
    install = ["azure"],
    module = "github.com/Azure/go-autorest/autorest",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__tracing",
    ],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__adal",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/adal",
    version = "v0.9.5",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__adal",
    download = ":_github.com__Azure__go-autorest__autorest__adal#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/adal",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__Azure__go-autorest__tracing",
        ":github.com__form3tech-oss__jwt-go",
        ":golang.org__x__crypto__pkcs12",
    ],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__azure__auth",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/azure/auth",
    version = "v0.5.0",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__azure__auth",
    download = ":_github.com__Azure__go-autorest__autorest__azure__auth#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/azure/auth",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__azure__cli",
        ":github.com__dimchansky__utfbom",
        ":golang.org__x__crypto__pkcs12",
    ],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__azure__cli",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/azure/cli",
    version = "v0.4.0",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__azure__cli",
    download = ":_github.com__Azure__go-autorest__autorest__azure__cli#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/azure/cli",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__autorest__date",
        ":github.com__dimchansky__utfbom",
        ":github.com__mitchellh__go-homedir",
    ],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__date",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/date",
    version = "v0.3.0",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__date",
    download = ":_github.com__Azure__go-autorest__autorest__date#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/date",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__to",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/to",
    version = "v0.4.0",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__to",
    download = ":_github.com__Azure__go-autorest__autorest__to#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/to",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__autorest__validation",
    _tag = "download",
    module = "github.com/Azure/go-autorest/autorest/validation",
    version = "v0.3.0",
)

go_module(
    name = "github.com__Azure__go-autorest__autorest__validation",
    download = ":_github.com__Azure__go-autorest__autorest__validation#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/autorest/validation",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__logger",
    _tag = "download",
    module = "github.com/Azure/go-autorest/logger",
    version = "v0.2.0",
)

go_module(
    name = "github.com__Azure__go-autorest__logger",
    download = ":_github.com__Azure__go-autorest__logger#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/logger",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Azure__go-autorest__tracing",
    _tag = "download",
    module = "github.com/Azure/go-autorest/tracing",
    version = "v0.6.0",
)

go_module(
    name = "github.com__Azure__go-autorest__tracing",
    download = ":_github.com__Azure__go-autorest__tracing#download",
    install = ["."],
    module = "github.com/Azure/go-autorest/tracing",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__BurntSushi__toml",
    _tag = "download",
    module = "github.com/BurntSushi/toml",
    version = "v0.3.1",
)

go_module(
    name = "github.com__BurntSushi__toml",
    download = ":_github.com__BurntSushi__toml#download",
    install = ["."],
    module = "github.com/BurntSushi/toml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__MakeNowJust__heredoc",
    _tag = "download",
    module = "github.com/MakeNowJust/heredoc",
    version = "v1.0.0",
)

go_module(
    name = "github.com__MakeNowJust__heredoc",
    download = ":_github.com__MakeNowJust__heredoc#download",
    install = ["."],
    module = "github.com/MakeNowJust/heredoc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__goutils",
    _tag = "download",
    module = "github.com/Masterminds/goutils",
    version = "v1.1.1",
)

go_module(
    name = "github.com__Masterminds__goutils",
    download = ":_github.com__Masterminds__goutils#download",
    install = ["."],
    module = "github.com/Masterminds/goutils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__semver__v3",
    _tag = "download",
    module = "github.com/Masterminds/semver/v3",
    version = "v3.1.1",
)

go_module(
    name = "github.com__Masterminds__semver__v3",
    download = ":_github.com__Masterminds__semver__v3#download",
    install = ["."],
    module = "github.com/Masterminds/semver/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__Masterminds__sprig__v3",
    _tag = "download",
    module = "github.com/Masterminds/sprig/v3",
    version = "v3.2.2",
)

go_module(
    name = "github.com__Masterminds__sprig__v3",
    download = ":_github.com__Masterminds__sprig__v3#download",
    install = ["."],
    module = "github.com/Masterminds/sprig/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__goutils",
        ":github.com__Masterminds__semver__v3",
        ":github.com__google__uuid",
        ":github.com__huandu__xstrings",
        ":github.com__imdario__mergo",
        ":github.com__mitchellh__copystructure",
        ":github.com__shopspring__decimal",
        ":github.com__spf13__cast",
        ":golang.org__x__crypto__bcrypt",
        ":golang.org__x__crypto__scrypt",
    ],
)

go_mod_download(
    name = "github.com__Masterminds__squirrel",
    _tag = "download",
    module = "github.com/Masterminds/squirrel",
    version = "v1.5.0",
)

go_module(
    name = "github.com__Masterminds__squirrel",
    download = ":_github.com__Masterminds__squirrel#download",
    install = ["."],
    module = "github.com/Masterminds/squirrel",
    visibility = ["PUBLIC"],
    deps = [":github.com__lann__builder"],
)

go_mod_download(
    name = "github.com__PuerkitoBio__purell",
    _tag = "download",
    module = "github.com/PuerkitoBio/purell",
    version = "v1.1.1",
)

go_module(
    name = "github.com__PuerkitoBio__purell",
    download = ":_github.com__PuerkitoBio__purell#download",
    install = ["."],
    module = "github.com/PuerkitoBio/purell",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__PuerkitoBio__urlesc",
        ":golang.org__x__net__idna",
        ":golang.org__x__text__unicode__norm",
        ":golang.org__x__text__width",
    ],
)

go_mod_download(
    name = "github.com__PuerkitoBio__urlesc",
    _tag = "download",
    module = "github.com/PuerkitoBio/urlesc",
    version = "v0.0.0-20170810143723-de5bf2ad4578",
)

go_module(
    name = "github.com__PuerkitoBio__urlesc",
    download = ":_github.com__PuerkitoBio__urlesc#download",
    install = ["."],
    module = "github.com/PuerkitoBio/urlesc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__ThreeDotsLabs__watermill",
    _tag = "download",
    module = "github.com/ThreeDotsLabs/watermill",
    version = "v1.1.0",
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["."],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__uuid",
        ":github.com__lithammer__shortuuid__v3",
        ":github.com__oklog__ulid",
    ],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__components__cqrs",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["components/cqrs"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":github.com__ThreeDotsLabs__watermill__message",
        ":github.com__gogo__protobuf__proto",
        ":github.com__hashicorp__go-multierror",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__internal",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["internal"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__message",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["message"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":github.com__ThreeDotsLabs__watermill__internal",
        ":github.com__ThreeDotsLabs__watermill__pubsub__sync",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__message__router__middleware",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["message/router/middleware"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":github.com__ThreeDotsLabs__watermill__message",
        ":github.com__cenkalti__backoff__v3",
        ":github.com__hashicorp__go-multierror",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__message__subscriber",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["message/subscriber"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [":github.com__ThreeDotsLabs__watermill__message"],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__pubsub__gochannel",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["pubsub/gochannel"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":github.com__ThreeDotsLabs__watermill__message",
        ":github.com__lithammer__shortuuid__v3",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__ThreeDotsLabs__watermill__pubsub__sync",
    download = ":_github.com__ThreeDotsLabs__watermill#download",
    install = ["pubsub/sync"],
    module = "github.com/ThreeDotsLabs/watermill",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__antihax__optional",
    _tag = "download",
    module = "github.com/antihax/optional",
    version = "v1.0.0",
)

go_module(
    name = "github.com__antihax__optional",
    download = ":_github.com__antihax__optional#download",
    install = ["."],
    module = "github.com/antihax/optional",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__aokoli__goutils",
    _tag = "download",
    module = "github.com/aokoli/goutils",
    version = "v1.1.0",
)

go_module(
    name = "github.com__aokoli__goutils",
    download = ":_github.com__aokoli__goutils#download",
    install = ["."],
    module = "github.com/aokoli/goutils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__apache__thrift",
    _tag = "download",
    module = "github.com/apache/thrift",
    version = "v0.0.0-20151001171628-53dd39833a08",
)

go_module(
    name = "github.com__apache__thrift__lib__go__thrift",
    download = ":_github.com__apache__thrift#download",
    install = ["lib/go/thrift"],
    module = "github.com/apache/thrift",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__asaskevich__EventBus",
    _tag = "download",
    module = "github.com/asaskevich/EventBus",
    version = "v0.0.0-20180315140547-d46933a94f05",
)

go_module(
    name = "github.com__asaskevich__EventBus",
    download = ":_github.com__asaskevich__EventBus#download",
    install = ["."],
    module = "github.com/asaskevich/EventBus",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__asaskevich__govalidator",
    _tag = "download",
    module = "github.com/asaskevich/govalidator",
    version = "v0.0.0-20200428143746-21a406dcc535",
)

go_module(
    name = "github.com__asaskevich__govalidator",
    download = ":_github.com__asaskevich__govalidator#download",
    install = ["."],
    module = "github.com/asaskevich/govalidator",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__aws__aws-sdk-go",
    _tag = "download",
    module = "github.com/aws/aws-sdk-go",
    version = "v1.37.1",
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__arn",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/arn"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__awserr",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/awserr"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__awsutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/awsutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__jmespath__go-jmespath"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__client",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/client"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkrand",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__client__metadata",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/client/metadata"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__corehandlers",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/corehandlers"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__internal__ini",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
        ":github.com__aws__aws-sdk-go__internal__sync__singleflight",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__ec2rolecreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/ec2rolecreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__ec2metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkuri",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__endpointcreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/endpointcreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__processcreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/processcreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__ssocreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/ssocreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__service__sso",
        ":github.com__aws__aws-sdk-go__service__sso__ssoiface",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__credentials__stscreds",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/credentials/stscreds"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkrand",
        ":github.com__aws__aws-sdk-go__service__sts",
        ":github.com__aws__aws-sdk-go__service__sts__stsiface",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__csm",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/csm"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__defaults",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/defaults"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__credentials__ec2rolecreds",
        ":github.com__aws__aws-sdk-go__aws__credentials__endpointcreds",
        ":github.com__aws__aws-sdk-go__aws__ec2metadata",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__ec2metadata",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/ec2metadata"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkuri",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__endpoints",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/endpoints"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__awserr"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__request",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/request"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__session",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/session"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__credentials__processcreds",
        ":github.com__aws__aws-sdk-go__aws__credentials__ssocreds",
        ":github.com__aws__aws-sdk-go__aws__credentials__stscreds",
        ":github.com__aws__aws-sdk-go__aws__csm",
        ":github.com__aws__aws-sdk-go__aws__defaults",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__ini",
        ":github.com__aws__aws-sdk-go__internal__shareddefaults",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__aws__signer__v4",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["aws/signer/v4"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__internal__strings",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__ini",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/ini"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__awserr"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__arn",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__s3shared__arn",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared__arn",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared/arn"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws__arn"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__s3shared__s3err",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/s3shared/s3err"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkio",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkio"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkmath",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkmath"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkrand",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkrand"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sdkuri",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sdkuri"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__shareddefaults",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/shareddefaults"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__strings",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/strings"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__internal__sync__singleflight",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["internal/sync/singleflight"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__checksum",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/checksum"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkmath",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__ec2query",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/ec2query"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__query__queryutil",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__eventstream",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/eventstream"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__aws"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__eventstream__eventstreamapi",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/eventstream/eventstreamapi"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/json/jsonutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__jsonrpc",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/jsonrpc"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__query",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/query"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__query__queryutil",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__query__queryutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/query/queryutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__aws__aws-sdk-go__private__protocol"],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__rest",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/rest"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__strings",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__restjson",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/restjson"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__json__jsonutil",
        ":github.com__aws__aws-sdk-go__private__protocol__jsonrpc",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__restxml",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/restxml"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["private/protocol/xml/xmlutil"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__private__protocol",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__autoscaling",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/autoscaling"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__cloudformation",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/cloudformation"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__cloudformation__cloudformationiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/cloudformation/cloudformationiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__cloudformation",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__ec2",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/ec2"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__ec2query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__ec2__ec2iface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/ec2/ec2iface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__ec2",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__eks",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/eks"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__restjson",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__eks__eksiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/eks/eksiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__eks",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__elb",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/elb"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__elbv2",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/elbv2"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__elbv2__elbv2iface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/elbv2/elbv2iface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__elbv2",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__iam",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/iam"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__iam__iamiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/iam/iamiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__iam",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__route53",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/route53"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__restxml",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__route53__route53iface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/route53/route53iface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__route53",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__arn",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__internal__s3shared",
        ":github.com__aws__aws-sdk-go__internal__s3shared__arn",
        ":github.com__aws__aws-sdk-go__internal__s3shared__s3err",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__private__checksum",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream",
        ":github.com__aws__aws-sdk-go__private__protocol__eventstream__eventstreamapi",
        ":github.com__aws__aws-sdk-go__private__protocol__rest",
        ":github.com__aws__aws-sdk-go__private__protocol__restxml",
        ":github.com__aws__aws-sdk-go__private__protocol__xml__xmlutil",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3__s3iface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3/s3iface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__s3",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__s3__s3manager",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/s3/s3manager"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__corehandlers",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__internal__sdkio",
        ":github.com__aws__aws-sdk-go__service__s3",
        ":github.com__aws__aws-sdk-go__service__s3__s3iface",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sso",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sso"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol",
        ":github.com__aws__aws-sdk-go__private__protocol__restjson",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sso__ssoiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sso/ssoiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__sso",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sts",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sts"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__awsutil",
        ":github.com__aws__aws-sdk-go__aws__client",
        ":github.com__aws__aws-sdk-go__aws__client__metadata",
        ":github.com__aws__aws-sdk-go__aws__credentials",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__signer__v4",
        ":github.com__aws__aws-sdk-go__private__protocol__query",
    ],
)

go_module(
    name = "github.com__aws__aws-sdk-go__service__sts__stsiface",
    download = ":_github.com__aws__aws-sdk-go#download",
    install = ["service/sts/stsiface"],
    module = "github.com/aws/aws-sdk-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__service__sts",
    ],
)

go_mod_download(
    name = "github.com__aymerick__douceur",
    _tag = "download",
    module = "github.com/aymerick/douceur",
    version = "v0.2.0",
)

go_module(
    name = "github.com__aymerick__douceur__css",
    download = ":_github.com__aymerick__douceur#download",
    install = ["css"],
    module = "github.com/aymerick/douceur",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__aymerick__douceur__parser",
    download = ":_github.com__aymerick__douceur#download",
    install = ["parser"],
    module = "github.com/aymerick/douceur",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aymerick__douceur__css",
        ":github.com__gorilla__css__scanner",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__anchore-image-validator",
    _tag = "download",
    module = "github.com/banzaicloud/anchore-image-validator",
    version = "v0.0.0-20190823121528-918b9fa6af62",
)

go_module(
    name = "github.com__banzaicloud__anchore-image-validator__pkg__apis__security__v1alpha1",
    download = ":_github.com__banzaicloud__anchore-image-validator#download",
    install = ["pkg/apis/security/v1alpha1"],
    module = "github.com/banzaicloud/anchore-image-validator",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk",
    _tag = "download",
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    version = "v0.6.0",
)

go_module(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk__auth",
    download = ":_github.com__banzaicloud__bank-vaults__pkg__sdk#download",
    install = ["auth"],
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__bank-vaults__pkg__sdk__vault",
        ":github.com__hashicorp__vault__api",
        ":github.com__spf13__cast",
    ],
)

go_module(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk__db",
    download = ":_github.com__banzaicloud__bank-vaults__pkg__sdk#download",
    install = ["db"],
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__bank-vaults__pkg__sdk__vault",
        ":github.com__hashicorp__vault__api",
    ],
)

go_module(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk__tls",
    download = ":_github.com__banzaicloud__bank-vaults__pkg__sdk#download",
    install = ["tls"],
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [":emperror.dev__errors"],
)

go_module(
    name = "github.com__banzaicloud__bank-vaults__pkg__sdk__vault",
    download = ":_github.com__banzaicloud__bank-vaults__pkg__sdk#download",
    install = ["vault"],
    module = "github.com/banzaicloud/bank-vaults/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__fsnotify__fsnotify",
        ":github.com__hashicorp__vault__api",
        ":k8s.io__client-go__rest",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__cadence-aws-sdk",
    _tag = "download",
    module = "github.com/banzaicloud/cadence-aws-sdk",
    version = "v0.6.0",
)

go_module(
    name = "github.com__banzaicloud__cadence-aws-sdk__activities__ec2",
    download = ":_github.com__banzaicloud__cadence-aws-sdk#download",
    install = ["activities/ec2"],
    module = "github.com/banzaicloud/cadence-aws-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":github.com__aws__aws-sdk-go__aws__session",
        ":github.com__aws__aws-sdk-go__service__ec2",
        ":github.com__aws__aws-sdk-go__service__ec2__ec2iface",
        ":github.com__banzaicloud__cadence-aws-sdk__internal",
    ],
)

go_module(
    name = "github.com__banzaicloud__cadence-aws-sdk__clients",
    download = ":_github.com__banzaicloud__cadence-aws-sdk#download",
    install = ["clients"],
    module = "github.com/banzaicloud/cadence-aws-sdk",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__cadence__workflow"],
)

go_module(
    name = "github.com__banzaicloud__cadence-aws-sdk__clients__ec2stub",
    download = ":_github.com__banzaicloud__cadence-aws-sdk#download",
    install = ["clients/ec2stub"],
    module = "github.com/banzaicloud/cadence-aws-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__service__ec2",
        ":github.com__banzaicloud__cadence-aws-sdk__clients",
        ":go.uber.org__cadence__workflow",
    ],
)

go_module(
    name = "github.com__banzaicloud__cadence-aws-sdk__internal",
    download = ":_github.com__banzaicloud__cadence-aws-sdk#download",
    install = ["internal"],
    module = "github.com/banzaicloud/cadence-aws-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aws__aws-sdk-go__aws__awserr",
        ":github.com__aws__aws-sdk-go__aws__request",
        ":go.uber.org__cadence",
        ":go.uber.org__cadence__activity",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__gin-utilz",
    _tag = "download",
    module = "github.com/banzaicloud/gin-utilz",
    version = "v0.3.1",
)

go_module(
    name = "github.com__banzaicloud__gin-utilz__auth",
    download = ":_github.com__banzaicloud__gin-utilz#download",
    install = ["auth"],
    module = "github.com/banzaicloud/gin-utilz",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__gin-gonic__gin",
        ":gopkg.in__square__go-jose.v2__jwt",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__go-gin-prometheus",
    _tag = "download",
    module = "github.com/banzaicloud/go-gin-prometheus",
    version = "v0.1.0",
)

go_module(
    name = "github.com__banzaicloud__go-gin-prometheus",
    download = ":_github.com__banzaicloud__go-gin-prometheus#download",
    install = ["."],
    module = "github.com/banzaicloud/go-gin-prometheus",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-gonic__gin",
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promhttp",
        ":github.com__sirupsen__logrus",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__integrated-service-sdk",
    _tag = "download",
    module = "github.com/banzaicloud/integrated-service-sdk",
    version = "v0.6.0",
)

go_module(
    name = "github.com__banzaicloud__integrated-service-sdk__api__v1alpha1",
    download = ":_github.com__banzaicloud__integrated-service-sdk#download",
    install = ["api/v1alpha1"],
    module = "github.com/banzaicloud/integrated-service-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__integrated-service-sdk__api__v1alpha1__backup",
        ":github.com__banzaicloud__integrated-service-sdk__api__v1alpha1__dns",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":sigs.k8s.io__controller-runtime__pkg__scheme",
    ],
)

go_module(
    name = "github.com__banzaicloud__integrated-service-sdk__api__v1alpha1__backup",
    download = ":_github.com__banzaicloud__integrated-service-sdk#download",
    install = ["api/v1alpha1/backup"],
    module = "github.com/banzaicloud/integrated-service-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__mitchellh__mapstructure",
        ":k8s.io__api__core__v1",
    ],
)

go_module(
    name = "github.com__banzaicloud__integrated-service-sdk__api__v1alpha1__dns",
    download = ":_github.com__banzaicloud__integrated-service-sdk#download",
    install = ["api/v1alpha1/dns"],
    module = "github.com/banzaicloud/integrated-service-sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__mitchellh__mapstructure",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__k8s-objectmatcher",
    _tag = "download",
    module = "github.com/banzaicloud/k8s-objectmatcher",
    version = "v1.5.1",
)

go_module(
    name = "github.com__banzaicloud__k8s-objectmatcher__patch",
    download = ":_github.com__banzaicloud__k8s-objectmatcher#download",
    install = ["patch"],
    module = "github.com/banzaicloud/k8s-objectmatcher",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__json-iterator__go",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__jsonmergepatch",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk",
    _tag = "download",
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    version = "v0.7.18",
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__api__v1beta1",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/api/v1beta1"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__filter",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__input",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__output",
        ":github.com__banzaicloud__operator-tools__pkg__typeoverride",
        ":github.com__banzaicloud__operator-tools__pkg__types",
        ":github.com__banzaicloud__operator-tools__pkg__utils",
        ":github.com__banzaicloud__operator-tools__pkg__volume",
        ":github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring__v1",
        ":github.com__spf13__cast",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":sigs.k8s.io__controller-runtime",
        ":sigs.k8s.io__controller-runtime__pkg__scheme",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__maps__mapstrstr",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/maps/mapstrstr"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__common",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/model/common"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__types",
        ":github.com__banzaicloud__operator-tools__pkg__secret",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__filter",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/model/filter"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__types",
        ":github.com__banzaicloud__operator-tools__pkg__secret",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__input",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/model/input"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__common",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__types",
        ":github.com__banzaicloud__operator-tools__pkg__secret",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__output",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/model/output"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__maps__mapstrstr",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__common",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__types",
        ":github.com__banzaicloud__operator-tools__pkg__secret",
        ":github.com__banzaicloud__operator-tools__pkg__utils",
    ],
)

go_module(
    name = "github.com__banzaicloud__logging-operator__pkg__sdk__logging__model__types",
    download = ":_github.com__banzaicloud__logging-operator__pkg__sdk#download",
    install = ["logging/model/types"],
    module = "github.com/banzaicloud/logging-operator/pkg/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__logging-operator__pkg__sdk__logging__maps__mapstrstr",
        ":github.com__banzaicloud__operator-tools__pkg__secret",
    ],
)

go_mod_download(
    name = "github.com__banzaicloud__logrus-runtime-formatter",
    _tag = "download",
    module = "github.com/banzaicloud/logrus-runtime-formatter",
    version = "v0.0.0-20180617171254-12df4a18567f",
)

go_module(
    name = "github.com__banzaicloud__logrus-runtime-formatter",
    download = ":_github.com__banzaicloud__logrus-runtime-formatter#download",
    install = ["."],
    module = "github.com/banzaicloud/logrus-runtime-formatter",
    visibility = ["PUBLIC"],
    deps = [":github.com__sirupsen__logrus"],
)

go_mod_download(
    name = "github.com__banzaicloud__operator-tools",
    _tag = "download",
    module = "github.com/banzaicloud/operator-tools",
    version = "v0.25.4",
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__logger",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/logger"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__briandowns__spinner",
        ":github.com__fatih__color",
        ":github.com__go-logr__logr",
        ":github.com__spf13__cast",
        ":github.com__wayneashleyberry__terminal-dimensions",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__reconciler",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/reconciler"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__k8s-objectmatcher__patch",
        ":github.com__banzaicloud__operator-tools__pkg__resources",
        ":github.com__banzaicloud__operator-tools__pkg__types",
        ":github.com__banzaicloud__operator-tools__pkg__utils",
        ":github.com__banzaicloud__operator-tools__pkg__wait",
        ":github.com__go-logr__logr",
        ":k8s.io__api__core__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__client-go__kubernetes__scheme",
        ":sigs.k8s.io__controller-runtime",
        ":sigs.k8s.io__controller-runtime__pkg__builder",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
        ":sigs.k8s.io__controller-runtime__pkg__controller",
        ":sigs.k8s.io__controller-runtime__pkg__controller__controllerutil",
        ":sigs.k8s.io__controller-runtime__pkg__event",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__log",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__resources",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/resources"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__banzaicloud__operator-tools__pkg__logger",
        ":github.com__banzaicloud__operator-tools__pkg__types",
        ":github.com__banzaicloud__operator-tools__pkg__utils",
        ":github.com__cppforlife__go-patch__patch",
        ":gopkg.in__yaml.v2",
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__secret",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/secret"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":sigs.k8s.io__controller-runtime__pkg__client",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__typeoverride",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/typeoverride"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__types",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/types"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__banzaicloud__operator-tools__pkg__utils",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__utils",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/utils"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__go-logr__logr",
        ":github.com__iancoleman__orderedmap",
        ":github.com__spf13__cast",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__volume",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/volume"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
    ],
)

go_module(
    name = "github.com__banzaicloud__operator-tools__pkg__wait",
    download = ":_github.com__banzaicloud__operator-tools#download",
    install = ["pkg/wait"],
    module = "github.com/banzaicloud/operator-tools",
    visibility = ["PUBLIC"],
    deps = [
        ":emperror.dev__errors",
        ":github.com__go-logr__logr",
        ":k8s.io__api__apps__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
    ],
)

go_mod_download(
    name = "github.com__beorn7__perks",
    _tag = "download",
    module = "github.com/beorn7/perks",
    version = "v1.0.1",
)

go_module(
    name = "github.com__beorn7__perks__quantile",
    download = ":_github.com__beorn7__perks#download",
    install = ["quantile"],
    module = "github.com/beorn7/perks",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__briandowns__spinner",
    _tag = "download",
    module = "github.com/briandowns/spinner",
    version = "v1.12.0",
)

go_module(
    name = "github.com__briandowns__spinner",
    download = ":_github.com__briandowns__spinner#download",
    install = ["."],
    module = "github.com/briandowns/spinner",
    visibility = ["PUBLIC"],
    deps = [":github.com__fatih__color"],
)

go_mod_download(
    name = "github.com__cenkalti__backoff__v3",
    _tag = "download",
    module = "github.com/cenkalti/backoff/v3",
    version = "v3.0.0",
)

go_module(
    name = "github.com__cenkalti__backoff__v3",
    download = ":_github.com__cenkalti__backoff__v3#download",
    install = ["."],
    module = "github.com/cenkalti/backoff/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__cespare__xxhash__v2",
    _tag = "download",
    module = "github.com/cespare/xxhash/v2",
    version = "v2.1.1",
)

go_module(
    name = "github.com__cespare__xxhash__v2",
    download = ":_github.com__cespare__xxhash__v2#download",
    install = ["."],
    module = "github.com/cespare/xxhash/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__containerd__containerd",
    _tag = "download",
    module = "github.com/containerd/containerd",
    version = "v1.4.4",
)

go_module(
    name = "github.com__containerd__containerd__archive__compression",
    download = ":_github.com__containerd__containerd#download",
    install = ["archive/compression"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [":github.com__containerd__containerd__log"],
)

go_module(
    name = "github.com__containerd__containerd__content",
    download = ":_github.com__containerd__containerd#download",
    install = ["content"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__errdefs",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__containerd__containerd__content__local",
    download = ":_github.com__containerd__containerd#download",
    install = ["content/local"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__filters",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__sys",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__containerd__containerd__errdefs",
    download = ":_github.com__containerd__containerd#download",
    install = ["errdefs"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__containerd__containerd__filters",
    download = ":_github.com__containerd__containerd#download",
    install = ["filters"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__log",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__containerd__containerd__images",
    download = ":_github.com__containerd__containerd#download",
    install = ["images"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__platforms",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":golang.org__x__sync__errgroup",
        ":golang.org__x__sync__semaphore",
    ],
)

go_module(
    name = "github.com__containerd__containerd__labels",
    download = ":_github.com__containerd__containerd#download",
    install = ["labels"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__errdefs",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__containerd__containerd__log",
    download = ":_github.com__containerd__containerd#download",
    install = ["log"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [":github.com__sirupsen__logrus"],
)

go_module(
    name = "github.com__containerd__containerd__platforms",
    download = ":_github.com__containerd__containerd#download",
    install = ["platforms"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__log",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__containerd__containerd__reference",
    download = ":_github.com__containerd__containerd#download",
    install = ["reference"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [":github.com__opencontainers__go-digest"],
)

go_module(
    name = "github.com__containerd__containerd__remotes",
    download = ":_github.com__containerd__containerd#download",
    install = ["remotes"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__images",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__platforms",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__containerd__containerd__remotes__docker",
    download = ":_github.com__containerd__containerd#download",
    install = ["remotes/docker"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__images",
        ":github.com__containerd__containerd__labels",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__reference",
        ":github.com__containerd__containerd__remotes",
        ":github.com__containerd__containerd__remotes__docker__schema1",
        ":github.com__containerd__containerd__version",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":golang.org__x__net__context__ctxhttp",
    ],
)

go_module(
    name = "github.com__containerd__containerd__remotes__docker__schema1",
    download = ":_github.com__containerd__containerd#download",
    install = ["remotes/docker/schema1"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__archive__compression",
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__images",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__remotes",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":golang.org__x__sync__errgroup",
    ],
)

go_module(
    name = "github.com__containerd__containerd__sys",
    download = ":_github.com__containerd__containerd#download",
    install = ["sys"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":golang.org__x__sys__unix",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":github.com__containerd__containerd__log"],
        "default": [],
    }),
)

go_module(
    name = "github.com__containerd__containerd__version",
    download = ":_github.com__containerd__containerd#download",
    install = ["version"],
    module = "github.com/containerd/containerd",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__coreos__go-oidc",
    _tag = "download",
    module = "github.com/coreos/go-oidc",
    version = "v2.1.0+incompatible",
)

go_module(
    name = "github.com__coreos__go-oidc",
    download = ":_github.com__coreos__go-oidc#download",
    install = ["."],
    module = "github.com/coreos/go-oidc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pquerna__cachecontrol",
        ":golang.org__x__oauth2",
        ":gopkg.in__square__go-jose.v2",
    ],
)

go_mod_download(
    name = "github.com__cppforlife__go-patch",
    _tag = "download",
    module = "github.com/cppforlife/go-patch",
    version = "v0.2.0",
)

go_module(
    name = "github.com__cppforlife__go-patch__patch",
    download = ":_github.com__cppforlife__go-patch#download",
    install = ["patch"],
    module = "github.com/cppforlife/go-patch",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)

go_mod_download(
    name = "github.com__cristalhq__jwt__v3",
    _tag = "download",
    module = "github.com/cristalhq/jwt/v3",
    version = "v3.1.0",
)

go_module(
    name = "github.com__cristalhq__jwt__v3",
    download = ":_github.com__cristalhq__jwt__v3#download",
    install = ["."],
    module = "github.com/cristalhq/jwt/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__cyphar__filepath-securejoin",
    _tag = "download",
    module = "github.com/cyphar/filepath-securejoin",
    version = "v0.2.2",
)

go_module(
    name = "github.com__cyphar__filepath-securejoin",
    download = ":_github.com__cyphar__filepath-securejoin#download",
    install = ["."],
    module = "github.com/cyphar/filepath-securejoin",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_mod_download(
    name = "github.com__davecgh__go-spew",
    _tag = "download",
    module = "github.com/davecgh/go-spew",
    version = "v1.1.1",
)

go_module(
    name = "github.com__davecgh__go-spew__spew",
    download = ":_github.com__davecgh__go-spew#download",
    install = ["spew"],
    module = "github.com/davecgh/go-spew",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__deislabs__oras",
    _tag = "download",
    module = "github.com/deislabs/oras",
    version = "v0.11.1",
)

go_module(
    name = "github.com__deislabs__oras__pkg__artifact",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/artifact"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__deislabs__oras__pkg__auth",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/auth"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [":github.com__containerd__containerd__remotes"],
)

go_module(
    name = "github.com__deislabs__oras__pkg__auth__docker",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/auth/docker"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__remotes",
        ":github.com__containerd__containerd__remotes__docker",
        ":github.com__deislabs__oras__pkg__auth",
        ":github.com__docker__cli__cli__config",
        ":github.com__docker__cli__cli__config__configfile",
        ":github.com__docker__cli__cli__config__credentials",
        ":github.com__docker__cli__cli__config__types",
        ":github.com__docker__docker__api__types",
        ":github.com__docker__docker__registry",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__deislabs__oras__pkg__content",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/content"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__content__local",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__deislabs__oras__pkg__context",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/context"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__log",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__deislabs__oras__pkg__oras",
    download = ":_github.com__deislabs__oras#download",
    install = ["pkg/oras"],
    module = "github.com/deislabs/oras",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__images",
        ":github.com__containerd__containerd__log",
        ":github.com__containerd__containerd__remotes",
        ":github.com__deislabs__oras__pkg__artifact",
        ":github.com__deislabs__oras__pkg__content",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":golang.org__x__sync__errgroup",
        ":golang.org__x__sync__semaphore",
    ],
)

go_mod_download(
    name = "github.com__dexidp__dex__api__v2",
    _tag = "download",
    module = "github.com/dexidp/dex/api/v2",
    version = "v2.0.0",
)

go_module(
    name = "github.com__dexidp__dex__api__v2",
    download = ":_github.com__dexidp__dex__api__v2#download",
    install = ["."],
    module = "github.com/dexidp/dex/api/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_mod_download(
    name = "github.com__dimchansky__utfbom",
    _tag = "download",
    module = "github.com/dimchansky/utfbom",
    version = "v1.1.0",
)

go_module(
    name = "github.com__dimchansky__utfbom",
    download = ":_github.com__dimchansky__utfbom#download",
    install = ["."],
    module = "github.com/dimchansky/utfbom",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__docker__cli",
    _tag = "download",
    module = "github.com/docker/cli",
    version = "v20.10.5+incompatible",
)

go_module(
    name = "github.com__docker__cli__cli__config",
    download = ":_github.com__docker__cli#download",
    install = ["cli/config"],
    module = "github.com/docker/cli",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__cli__cli__config__configfile",
        ":github.com__docker__cli__cli__config__credentials",
        ":github.com__docker__cli__cli__config__types",
        ":github.com__docker__docker__pkg__homedir",
        ":github.com__pkg__errors",
    ],
)

go_module(
    name = "github.com__docker__cli__cli__config__configfile",
    download = ":_github.com__docker__cli#download",
    install = ["cli/config/configfile"],
    module = "github.com/docker/cli",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__cli__cli__config__credentials",
        ":github.com__docker__cli__cli__config__types",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__docker__cli__cli__config__credentials",
    download = ":_github.com__docker__cli#download",
    install = ["cli/config/credentials"],
    module = "github.com/docker/cli",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__cli__cli__config__types",
        ":github.com__docker__docker-credential-helpers__client",
        ":github.com__docker__docker-credential-helpers__credentials",
        ":golang.org__x__sys__execabs",
    ],
)

go_module(
    name = "github.com__docker__cli__cli__config__types",
    download = ":_github.com__docker__cli#download",
    install = ["cli/config/types"],
    module = "github.com/docker/cli",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__docker__distribution",
    _tag = "download",
    module = "github.com/docker/distribution",
    version = "v0.0.0-20191216044856-a8371794149d",
)

go_module(
    name = "github.com__docker__distribution",
    download = ":_github.com__docker__distribution#download",
    install = ["."],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution__reference",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go__v1",
    ],
)

go_module(
    name = "github.com__docker__distribution__digestset",
    download = ":_github.com__docker__distribution#download",
    install = ["digestset"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [":github.com__opencontainers__go-digest"],
)

go_module(
    name = "github.com__docker__distribution__metrics",
    download = ":_github.com__docker__distribution#download",
    install = ["metrics"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [":github.com__docker__go-metrics"],
)

go_module(
    name = "github.com__docker__distribution__reference",
    download = ":_github.com__docker__distribution#download",
    install = ["reference"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution__digestset",
        ":github.com__opencontainers__go-digest",
    ],
)

go_module(
    name = "github.com__docker__distribution__registry__api__errcode",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/api/errcode"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__distribution__registry__api__v2",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/api/v2"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution__reference",
        ":github.com__docker__distribution__registry__api__errcode",
        ":github.com__gorilla__mux",
        ":github.com__opencontainers__go-digest",
    ],
)

go_module(
    name = "github.com__docker__distribution__registry__client",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/client"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution",
        ":github.com__docker__distribution__reference",
        ":github.com__docker__distribution__registry__api__errcode",
        ":github.com__docker__distribution__registry__api__v2",
        ":github.com__docker__distribution__registry__client__auth__challenge",
        ":github.com__docker__distribution__registry__client__transport",
        ":github.com__docker__distribution__registry__storage__cache",
        ":github.com__docker__distribution__registry__storage__cache__memory",
        ":github.com__opencontainers__go-digest",
    ],
)

go_module(
    name = "github.com__docker__distribution__registry__client__auth",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/client/auth"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution__registry__client",
        ":github.com__docker__distribution__registry__client__auth__challenge",
        ":github.com__docker__distribution__registry__client__transport",
    ],
)

go_module(
    name = "github.com__docker__distribution__registry__client__auth__challenge",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/client/auth/challenge"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__distribution__registry__client__transport",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/client/transport"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__distribution__registry__storage__cache",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/storage/cache"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution",
        ":github.com__docker__distribution__metrics",
        ":github.com__opencontainers__go-digest",
    ],
)

go_module(
    name = "github.com__docker__distribution__registry__storage__cache__memory",
    download = ":_github.com__docker__distribution#download",
    install = ["registry/storage/cache/memory"],
    module = "github.com/docker/distribution",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution",
        ":github.com__docker__distribution__reference",
        ":github.com__docker__distribution__registry__storage__cache",
        ":github.com__opencontainers__go-digest",
    ],
)

go_mod_download(
    name = "github.com__docker__docker",
    _tag = "download",
    module = "github.com/moby/moby",
    version = "v1.4.2-0.20200203170920-46ec8731fbce",
)

go_module(
    name = "github.com__docker__docker__api__types",
    download = ":_github.com__docker__docker#download",
    install = ["api/types"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker__api__types__container",
        ":github.com__docker__docker__api__types__filters",
        ":github.com__docker__docker__api__types__mount",
        ":github.com__docker__docker__api__types__network",
        ":github.com__docker__docker__api__types__registry",
        ":github.com__docker__docker__api__types__swarm",
        ":github.com__docker__go-connections__nat",
        ":github.com__docker__go-units",
    ],
)

go_module(
    name = "github.com__docker__docker__api__types__blkiodev",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/blkiodev"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__api__types__container",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/container"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker__api__types__blkiodev",
        ":github.com__docker__docker__api__types__mount",
        ":github.com__docker__docker__api__types__strslice",
        ":github.com__docker__go-connections__nat",
        ":github.com__docker__go-units",
    ],
)

go_module(
    name = "github.com__docker__docker__api__types__filters",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/filters"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [":github.com__docker__docker__api__types__versions"],
)

go_module(
    name = "github.com__docker__docker__api__types__mount",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/mount"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__api__types__network",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/network"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker__api__types__filters",
        ":github.com__docker__docker__errdefs",
    ],
)

go_module(
    name = "github.com__docker__docker__api__types__registry",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/registry"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [":github.com__opencontainers__image-spec__specs-go__v1"],
)

go_module(
    name = "github.com__docker__docker__api__types__strslice",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/strslice"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__api__types__swarm",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/swarm"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker__api__types__container",
        ":github.com__docker__docker__api__types__mount",
        ":github.com__docker__docker__api__types__network",
        ":github.com__docker__docker__api__types__swarm__runtime",
    ],
)

go_module(
    name = "github.com__docker__docker__api__types__swarm__runtime",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/swarm/runtime"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [":github.com__gogo__protobuf__proto"],
)

go_module(
    name = "github.com__docker__docker__api__types__versions",
    download = ":_github.com__docker__docker#download",
    install = ["api/types/versions"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__errdefs",
    download = ":_github.com__docker__docker#download",
    install = ["errdefs"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__errdefs",
        ":github.com__docker__distribution__registry__api__errcode",
        ":github.com__sirupsen__logrus",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__docker__docker__pkg__homedir",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/homedir"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__pkg__ioutils",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/ioutils"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__pkg__jsonmessage",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/jsonmessage"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__docker__pkg__term",
        ":github.com__docker__go-units",
        ":github.com__morikuni__aec",
    ],
)

go_module(
    name = "github.com__docker__docker__pkg__stringid",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/stringid"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__pkg__tarsum",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/tarsum"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__docker__pkg__term",
    download = ":_github.com__docker__docker#download",
    install = ["pkg/term"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_module(
    name = "github.com__docker__docker__registry",
    download = ":_github.com__docker__docker#download",
    install = ["registry"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__docker__distribution__reference",
        ":github.com__docker__distribution__registry__api__errcode",
        ":github.com__docker__distribution__registry__client__auth",
        ":github.com__docker__distribution__registry__client__auth__challenge",
        ":github.com__docker__distribution__registry__client__transport",
        ":github.com__docker__docker__api__types",
        ":github.com__docker__docker__api__types__registry",
        ":github.com__docker__docker__errdefs",
        ":github.com__docker__docker__pkg__homedir",
        ":github.com__docker__docker__pkg__ioutils",
        ":github.com__docker__docker__pkg__jsonmessage",
        ":github.com__docker__docker__pkg__stringid",
        ":github.com__docker__docker__pkg__tarsum",
        ":github.com__docker__docker__registry__resumable",
        ":github.com__docker__docker__rootless",
        ":github.com__docker__go-connections__tlsconfig",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
    ],
)

go_module(
    name = "github.com__docker__docker__registry__resumable",
    download = ":_github.com__docker__docker#download",
    install = ["registry/resumable"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [":github.com__sirupsen__logrus"],
)

go_module(
    name = "github.com__docker__docker__rootless",
    download = ":_github.com__docker__docker#download",
    install = ["rootless"],
    module = "github.com/docker/docker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__docker__docker-credential-helpers",
    _tag = "download",
    module = "github.com/docker/docker-credential-helpers",
    version = "v0.6.3",
)

go_module(
    name = "github.com__docker__docker-credential-helpers__client",
    download = ":_github.com__docker__docker-credential-helpers#download",
    install = ["client"],
    module = "github.com/docker/docker-credential-helpers",
    visibility = ["PUBLIC"],
    deps = [":github.com__docker__docker-credential-helpers__credentials"],
)

go_module(
    name = "github.com__docker__docker-credential-helpers__credentials",
    download = ":_github.com__docker__docker-credential-helpers#download",
    install = ["credentials"],
    module = "github.com/docker/docker-credential-helpers",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__docker__go-connections",
    _tag = "download",
    module = "github.com/docker/go-connections",
    version = "v0.4.0",
)

go_module(
    name = "github.com__docker__go-connections__nat",
    download = ":_github.com__docker__go-connections#download",
    install = ["nat"],
    module = "github.com/docker/go-connections",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__docker__go-connections__tlsconfig",
    download = ":_github.com__docker__go-connections#download",
    install = ["tlsconfig"],
    module = "github.com/docker/go-connections",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_mod_download(
    name = "github.com__docker__go-metrics",
    _tag = "download",
    module = "github.com/docker/go-metrics",
    version = "v0.0.0-20180209012529-399ea8c73916",
)

go_module(
    name = "github.com__docker__go-metrics",
    download = ":_github.com__docker__go-metrics#download",
    install = ["."],
    module = "github.com/docker/go-metrics",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promhttp",
    ],
)

go_mod_download(
    name = "github.com__docker__go-units",
    _tag = "download",
    module = "github.com/docker/go-units",
    version = "v0.4.0",
)

go_module(
    name = "github.com__docker__go-units",
    download = ":_github.com__docker__go-units#download",
    install = ["."],
    module = "github.com/docker/go-units",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__evanphx__json-patch",
    _tag = "download",
    module = "github.com/evanphx/json-patch",
    version = "v4.11.0+incompatible",
)

go_module(
    name = "github.com__evanphx__json-patch",
    download = ":_github.com__evanphx__json-patch#download",
    install = ["."],
    module = "github.com/evanphx/json-patch",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_mod_download(
    name = "github.com__exponent-io__jsonpath",
    _tag = "download",
    module = "github.com/exponent-io/jsonpath",
    version = "v0.0.0-20151013193312-d6023ce2651d",
)

go_module(
    name = "github.com__exponent-io__jsonpath",
    download = ":_github.com__exponent-io__jsonpath#download",
    install = ["."],
    module = "github.com/exponent-io/jsonpath",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__facebookgo__clock",
    _tag = "download",
    module = "github.com/facebookgo/clock",
    version = "v0.0.0-20150410010913-600d898af40a",
)

go_module(
    name = "github.com__facebookgo__clock",
    download = ":_github.com__facebookgo__clock#download",
    install = ["."],
    module = "github.com/facebookgo/clock",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__fatih__color",
    _tag = "download",
    module = "github.com/fatih/color",
    version = "v1.10.0",
)

go_module(
    name = "github.com__fatih__color",
    download = ":_github.com__fatih__color#download",
    install = ["."],
    module = "github.com/fatih/color",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mattn__go-colorable",
        ":github.com__mattn__go-isatty",
    ],
)

go_mod_download(
    name = "github.com__form3tech-oss__jwt-go",
    _tag = "download",
    module = "github.com/form3tech-oss/jwt-go",
    version = "v3.2.2+incompatible",
)

go_module(
    name = "github.com__form3tech-oss__jwt-go",
    download = ":_github.com__form3tech-oss__jwt-go#download",
    install = ["."],
    module = "github.com/form3tech-oss/jwt-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__fsnotify__fsnotify",
    _tag = "download",
    module = "github.com/fsnotify/fsnotify",
    version = "v1.4.9",
)

go_module(
    name = "github.com__fsnotify__fsnotify",
    download = ":_github.com__fsnotify__fsnotify#download",
    install = ["."],
    module = "github.com/fsnotify/fsnotify",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__ghodss__yaml",
    _tag = "download",
    module = "github.com/ghodss/yaml",
    version = "v1.0.0",
)

go_module(
    name = "github.com__ghodss__yaml",
    download = ":_github.com__ghodss__yaml#download",
    install = ["."],
    module = "github.com/ghodss/yaml",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)

go_mod_download(
    name = "github.com__gin-contrib__cors",
    _tag = "download",
    module = "github.com/gin-contrib/cors",
    version = "v1.3.0",
)

go_module(
    name = "github.com__gin-contrib__cors",
    download = ":_github.com__gin-contrib__cors#download",
    install = ["."],
    module = "github.com/gin-contrib/cors",
    visibility = ["PUBLIC"],
    deps = [":github.com__gin-gonic__gin"],
)

go_mod_download(
    name = "github.com__gin-contrib__sse",
    _tag = "download",
    module = "github.com/gin-contrib/sse",
    version = "v0.1.0",
)

go_module(
    name = "github.com__gin-contrib__sse",
    download = ":_github.com__gin-contrib__sse#download",
    install = ["."],
    module = "github.com/gin-contrib/sse",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gin-gonic__gin",
    _tag = "download",
    module = "github.com/gin-gonic/gin",
    version = "v1.6.2",
)

go_module(
    name = "github.com__gin-gonic__gin",
    download = ":_github.com__gin-gonic__gin#download",
    install = ["."],
    module = "github.com/gin-gonic/gin",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-contrib__sse",
        ":github.com__gin-gonic__gin__binding",
        ":github.com__gin-gonic__gin__internal__bytesconv",
        ":github.com__gin-gonic__gin__internal__json",
        ":github.com__gin-gonic__gin__render",
        ":github.com__mattn__go-isatty",
    ],
)

go_module(
    name = "github.com__gin-gonic__gin__binding",
    download = ":_github.com__gin-gonic__gin#download",
    install = ["binding"],
    module = "github.com/gin-gonic/gin",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-gonic__gin__internal__bytesconv",
        ":github.com__gin-gonic__gin__internal__json",
        ":github.com__go-playground__validator__v10",
        ":github.com__golang__protobuf__proto",
        ":github.com__ugorji__go__codec",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__gin-gonic__gin__internal__bytesconv",
    download = ":_github.com__gin-gonic__gin#download",
    install = ["internal/bytesconv"],
    module = "github.com/gin-gonic/gin",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gin-gonic__gin__internal__json",
    download = ":_github.com__gin-gonic__gin#download",
    install = ["internal/json"],
    module = "github.com/gin-gonic/gin",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gin-gonic__gin__render",
    download = ":_github.com__gin-gonic__gin#download",
    install = ["render"],
    module = "github.com/gin-gonic/gin",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gin-gonic__gin__internal__bytesconv",
        ":github.com__gin-gonic__gin__internal__json",
        ":github.com__golang__protobuf__proto",
        ":github.com__ugorji__go__codec",
        ":gopkg.in__yaml.v2",
    ],
)

go_mod_download(
    name = "github.com__go-errors__errors",
    _tag = "download",
    module = "github.com/go-errors/errors",
    version = "v1.0.1",
)

go_module(
    name = "github.com__go-errors__errors",
    download = ":_github.com__go-errors__errors#download",
    install = ["."],
    module = "github.com/go-errors/errors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__go-kit__kit",
    _tag = "download",
    module = "github.com/go-kit/kit",
    version = "v0.10.0",
)

go_module(
    name = "github.com__go-kit__kit__endpoint",
    download = ":_github.com__go-kit__kit#download",
    install = ["endpoint"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__go-kit__kit__log",
    download = ":_github.com__go-kit__kit#download",
    install = ["log"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-logfmt__logfmt"],
)

go_module(
    name = "github.com__go-kit__kit__sd",
    download = ":_github.com__go-kit__kit#download",
    install = ["sd"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
    ],
)

go_module(
    name = "github.com__go-kit__kit__sd__lb",
    download = ":_github.com__go-kit__kit#download",
    install = ["sd/lb"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__sd",
    ],
)

go_module(
    name = "github.com__go-kit__kit__tracing__opencensus",
    download = ":_github.com__go-kit__kit#download",
    install = ["tracing/opencensus"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__sd__lb",
        ":github.com__go-kit__kit__transport__grpc",
        ":github.com__go-kit__kit__transport__http",
        ":go.opencensus.io__plugin__ochttp",
        ":go.opencensus.io__plugin__ochttp__propagation__b3",
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "github.com__go-kit__kit__transport",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-kit__kit__log"],
)

go_module(
    name = "github.com__go-kit__kit__transport__grpc",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport/grpc"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
        ":github.com__go-kit__kit__transport",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__metadata",
    ],
)

go_module(
    name = "github.com__go-kit__kit__transport__http",
    download = ":_github.com__go-kit__kit#download",
    install = ["transport/http"],
    module = "github.com/go-kit/kit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__log",
        ":github.com__go-kit__kit__transport",
    ],
)

go_mod_download(
    name = "github.com__go-logfmt__logfmt",
    _tag = "download",
    module = "github.com/go-logfmt/logfmt",
    version = "v0.5.0",
)

go_module(
    name = "github.com__go-logfmt__logfmt",
    download = ":_github.com__go-logfmt__logfmt#download",
    install = ["."],
    module = "github.com/go-logfmt/logfmt",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__go-logr__logr",
    _tag = "download",
    module = "github.com/go-logr/logr",
    version = "v0.4.0",
)

go_module(
    name = "github.com__go-logr__logr",
    download = ":_github.com__go-logr__logr#download",
    install = ["."],
    module = "github.com/go-logr/logr",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__go-openapi__jsonpointer",
    _tag = "download",
    module = "github.com/go-openapi/jsonpointer",
    version = "v0.19.3",
)

go_module(
    name = "github.com__go-openapi__jsonpointer",
    download = ":_github.com__go-openapi__jsonpointer#download",
    install = ["."],
    module = "github.com/go-openapi/jsonpointer",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-openapi__swag"],
)

go_mod_download(
    name = "github.com__go-openapi__jsonreference",
    _tag = "download",
    module = "github.com/go-openapi/jsonreference",
    version = "v0.19.3",
)

go_module(
    name = "github.com__go-openapi__jsonreference",
    download = ":_github.com__go-openapi__jsonreference#download",
    install = ["."],
    module = "github.com/go-openapi/jsonreference",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__PuerkitoBio__purell",
        ":github.com__go-openapi__jsonpointer",
    ],
)

go_mod_download(
    name = "github.com__go-openapi__spec",
    _tag = "download",
    module = "github.com/go-openapi/spec",
    version = "v0.19.5",
)

go_module(
    name = "github.com__go-openapi__spec",
    download = ":_github.com__go-openapi__spec#download",
    install = ["."],
    module = "github.com/go-openapi/spec",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__jsonpointer",
        ":github.com__go-openapi__jsonreference",
        ":github.com__go-openapi__swag",
    ],
)

go_mod_download(
    name = "github.com__go-openapi__swag",
    _tag = "download",
    module = "github.com/go-openapi/swag",
    version = "v0.19.5",
)

go_module(
    name = "github.com__go-openapi__swag",
    download = ":_github.com__go-openapi__swag#download",
    install = ["."],
    module = "github.com/go-openapi/swag",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mailru__easyjson__jlexer",
        ":github.com__mailru__easyjson__jwriter",
        ":gopkg.in__yaml.v2",
    ],
)

go_mod_download(
    name = "github.com__go-playground__locales",
    _tag = "download",
    module = "github.com/go-playground/locales",
    version = "v0.13.0",
)

go_module(
    name = "github.com__go-playground__locales",
    download = ":_github.com__go-playground__locales#download",
    install = ["."],
    module = "github.com/go-playground/locales",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-playground__locales__currency"],
)

go_module(
    name = "github.com__go-playground__locales__currency",
    download = ":_github.com__go-playground__locales#download",
    install = ["currency"],
    module = "github.com/go-playground/locales",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__go-playground__universal-translator",
    _tag = "download",
    module = "github.com/go-playground/universal-translator",
    version = "v0.17.0",
)

go_module(
    name = "github.com__go-playground__universal-translator",
    download = ":_github.com__go-playground__universal-translator#download",
    install = ["."],
    module = "github.com/go-playground/universal-translator",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-playground__locales"],
)

go_mod_download(
    name = "github.com__go-playground__validator__v10",
    _tag = "download",
    module = "github.com/go-playground/validator/v10",
    version = "v10.2.0",
)

go_module(
    name = "github.com__go-playground__validator__v10",
    download = ":_github.com__go-playground__validator__v10#download",
    install = ["."],
    module = "github.com/go-playground/validator/v10",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-playground__universal-translator",
        ":github.com__leodido__go-urn",
    ],
)

go_mod_download(
    name = "github.com__go-sql-driver__mysql",
    _tag = "download",
    module = "github.com/go-sql-driver/mysql",
    version = "v1.5.0",
)

go_module(
    name = "github.com__go-sql-driver__mysql",
    download = ":_github.com__go-sql-driver__mysql#download",
    install = ["."],
    module = "github.com/go-sql-driver/mysql",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gobwas__glob",
    _tag = "download",
    module = "github.com/gobwas/glob",
    version = "v0.2.3",
)

go_module(
    name = "github.com__gobwas__glob",
    download = ":_github.com__gobwas__glob#download",
    install = ["."],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gobwas__glob__compiler",
        ":github.com__gobwas__glob__syntax",
    ],
)

go_module(
    name = "github.com__gobwas__glob__compiler",
    download = ":_github.com__gobwas__glob#download",
    install = ["compiler"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gobwas__glob__match",
        ":github.com__gobwas__glob__syntax__ast",
        ":github.com__gobwas__glob__util__runes",
    ],
)

go_module(
    name = "github.com__gobwas__glob__match",
    download = ":_github.com__gobwas__glob#download",
    install = ["match"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gobwas__glob__util__runes",
        ":github.com__gobwas__glob__util__strings",
    ],
)

go_module(
    name = "github.com__gobwas__glob__syntax",
    download = ":_github.com__gobwas__glob#download",
    install = ["syntax"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gobwas__glob__syntax__ast",
        ":github.com__gobwas__glob__syntax__lexer",
    ],
)

go_module(
    name = "github.com__gobwas__glob__syntax__ast",
    download = ":_github.com__gobwas__glob#download",
    install = ["syntax/ast"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [":github.com__gobwas__glob__syntax__lexer"],
)

go_module(
    name = "github.com__gobwas__glob__syntax__lexer",
    download = ":_github.com__gobwas__glob#download",
    install = ["syntax/lexer"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [":github.com__gobwas__glob__util__runes"],
)

go_module(
    name = "github.com__gobwas__glob__util__runes",
    download = ":_github.com__gobwas__glob#download",
    install = ["util/runes"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gobwas__glob__util__strings",
    download = ":_github.com__gobwas__glob#download",
    install = ["util/strings"],
    module = "github.com/gobwas/glob",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gofrs__flock",
    _tag = "download",
    module = "github.com/gofrs/flock",
    version = "v0.8.0",
)

go_module(
    name = "github.com__gofrs__flock",
    download = ":_github.com__gofrs__flock#download",
    install = ["."],
    module = "github.com/gofrs/flock",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gofrs__uuid",
    _tag = "download",
    module = "github.com/gofrs/uuid",
    version = "v3.2.0+incompatible",
)

go_module(
    name = "github.com__gofrs__uuid",
    download = ":_github.com__gofrs__uuid#download",
    install = ["."],
    module = "github.com/gofrs/uuid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gogo__protobuf",
    _tag = "download",
    module = "github.com/gogo/protobuf",
    version = "v1.3.2",
)

go_module(
    name = "github.com__gogo__protobuf__proto",
    download = ":_github.com__gogo__protobuf#download",
    install = ["proto"],
    module = "github.com/gogo/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gogo__protobuf__sortkeys",
    download = ":_github.com__gogo__protobuf#download",
    install = ["sortkeys"],
    module = "github.com/gogo/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__groupcache",
    _tag = "download",
    module = "github.com/golang/groupcache",
    version = "v0.0.0-20200121045136-8c9f03a8e57e",
)

go_module(
    name = "github.com__golang__groupcache__lru",
    download = ":_github.com__golang__groupcache#download",
    install = ["lru"],
    module = "github.com/golang/groupcache",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__mock",
    _tag = "download",
    module = "github.com/golang/mock",
    version = "v1.5.0",
)

go_module(
    name = "github.com__golang__mock__gomock",
    download = ":_github.com__golang__mock#download",
    install = ["gomock"],
    module = "github.com/golang/mock",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__golang__protobuf",
    _tag = "download",
    module = "github.com/golang/protobuf",
    version = "v1.5.2",
)

go_module(
    name = "github.com__golang__protobuf__proto",
    download = ":_github.com__golang__protobuf#download",
    install = ["proto"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protodesc",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__any",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/any"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__duration",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/duration"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
    ],
)

go_module(
    name = "github.com__golang__protobuf__ptypes__timestamp",
    download = ":_github.com__golang__protobuf#download",
    install = ["ptypes/timestamp"],
    module = "github.com/golang/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_mod_download(
    name = "github.com__golang__snappy",
    _tag = "download",
    module = "github.com/golang/snappy",
    version = "v0.0.1",
)

go_module(
    name = "github.com__golang__snappy",
    download = ":_github.com__golang__snappy#download",
    install = ["."],
    module = "github.com/golang/snappy",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__btree",
    _tag = "download",
    module = "github.com/google/btree",
    version = "v1.0.0",
)

go_module(
    name = "github.com__google__btree",
    download = ":_github.com__google__btree#download",
    install = ["."],
    module = "github.com/google/btree",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__go-cmp",
    _tag = "download",
    module = "github.com/google/go-cmp",
    version = "v0.5.5",
)

go_module(
    name = "github.com__google__go-cmp__cmp",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp__internal__diff",
        ":github.com__google__go-cmp__cmp__internal__flags",
        ":github.com__google__go-cmp__cmp__internal__function",
        ":github.com__google__go-cmp__cmp__internal__value",
    ],
)

go_module(
    name = "github.com__google__go-cmp__cmp__cmpopts",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/cmpopts"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp",
        ":github.com__google__go-cmp__cmp__internal__function",
    ],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__diff",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/diff"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__go-cmp__cmp__internal__flags"],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__flags",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/flags"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__function",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/function"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__google__go-cmp__cmp__internal__value",
    download = ":_github.com__google__go-cmp#download",
    install = ["cmp/internal/value"],
    module = "github.com/google/go-cmp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__gofuzz",
    _tag = "download",
    module = "github.com/google/gofuzz",
    version = "v1.1.0",
)

go_module(
    name = "github.com__google__gofuzz",
    download = ":_github.com__google__gofuzz#download",
    install = ["."],
    module = "github.com/google/gofuzz",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__shlex",
    _tag = "download",
    module = "github.com/google/shlex",
    version = "v0.0.0-20191202100458-e7afc7fbc510",
)

go_module(
    name = "github.com__google__shlex",
    download = ":_github.com__google__shlex#download",
    install = ["."],
    module = "github.com/google/shlex",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__google__uuid",
    _tag = "download",
    module = "github.com/google/uuid",
    version = "v1.1.2",
)

go_module(
    name = "github.com__google__uuid",
    download = ":_github.com__google__uuid#download",
    install = ["."],
    module = "github.com/google/uuid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__googleapis__gax-go__v2",
    _tag = "download",
    module = "github.com/googleapis/gax-go/v2",
    version = "v2.0.5",
)

go_module(
    name = "github.com__googleapis__gax-go__v2",
    download = ":_github.com__googleapis__gax-go__v2#download",
    install = ["."],
    module = "github.com/googleapis/gax-go/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_mod_download(
    name = "github.com__googleapis__gnostic",
    _tag = "download",
    module = "github.com/googleapis/gnostic",
    version = "v0.5.5",
)

go_module(
    name = "github.com__googleapis__gnostic__compiler",
    download = ":_github.com__googleapis__gnostic#download",
    install = ["compiler"],
    module = "github.com/googleapis/gnostic",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__any",
        ":github.com__googleapis__gnostic__extensions",
        ":github.com__googleapis__gnostic__jsonschema",
        ":gopkg.in__yaml.v3",
    ],
)

go_module(
    name = "github.com__googleapis__gnostic__extensions",
    download = ":_github.com__googleapis__gnostic#download",
    install = ["extensions"],
    module = "github.com/googleapis/gnostic",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "github.com__googleapis__gnostic__jsonschema",
    download = ":_github.com__googleapis__gnostic#download",
    install = ["jsonschema"],
    module = "github.com/googleapis/gnostic",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v3"],
)

go_module(
    name = "github.com__googleapis__gnostic__openapiv2",
    download = ":_github.com__googleapis__gnostic#download",
    install = ["openapiv2"],
    module = "github.com/googleapis/gnostic",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gnostic__compiler",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
        ":gopkg.in__yaml.v3",
    ],
)

go_mod_download(
    name = "github.com__gorilla__css",
    _tag = "download",
    module = "github.com/gorilla/css",
    version = "v1.0.0",
)

go_module(
    name = "github.com__gorilla__css__scanner",
    download = ":_github.com__gorilla__css#download",
    install = ["scanner"],
    module = "github.com/gorilla/css",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gorilla__mux",
    _tag = "download",
    module = "github.com/gorilla/mux",
    version = "v1.8.0",
)

go_module(
    name = "github.com__gorilla__mux",
    download = ":_github.com__gorilla__mux#download",
    install = ["."],
    module = "github.com/gorilla/mux",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gorilla__securecookie",
    _tag = "download",
    module = "github.com/gorilla/securecookie",
    version = "v1.1.1",
)

go_module(
    name = "github.com__gorilla__securecookie",
    download = ":_github.com__gorilla__securecookie#download",
    install = ["."],
    module = "github.com/gorilla/securecookie",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__gorilla__sessions",
    _tag = "download",
    module = "github.com/gorilla/sessions",
    version = "v1.2.1",
)

go_module(
    name = "github.com__gorilla__sessions",
    download = ":_github.com__gorilla__sessions#download",
    install = ["."],
    module = "github.com/gorilla/sessions",
    visibility = ["PUBLIC"],
    deps = [":github.com__gorilla__securecookie"],
)

go_mod_download(
    name = "github.com__gosuri__uitable",
    _tag = "download",
    module = "github.com/gosuri/uitable",
    version = "v0.0.4",
)

go_module(
    name = "github.com__gosuri__uitable",
    download = ":_github.com__gosuri__uitable#download",
    install = ["."],
    module = "github.com/gosuri/uitable",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fatih__color",
        ":github.com__gosuri__uitable__util__strutil",
        ":github.com__gosuri__uitable__util__wordwrap",
    ],
)

go_module(
    name = "github.com__gosuri__uitable__util__strutil",
    download = ":_github.com__gosuri__uitable#download",
    install = ["util/strutil"],
    module = "github.com/gosuri/uitable",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-runewidth"],
)

go_module(
    name = "github.com__gosuri__uitable__util__wordwrap",
    download = ":_github.com__gosuri__uitable#download",
    install = ["util/wordwrap"],
    module = "github.com/gosuri/uitable",
    visibility = ["PUBLIC"],
    deps = [":github.com__gosuri__uitable__util__strutil"],
)

go_mod_download(
    name = "github.com__gregjones__httpcache",
    _tag = "download",
    module = "github.com/gregjones/httpcache",
    version = "v0.0.0-20180305231024-9cad4c3443a7",
)

go_module(
    name = "github.com__gregjones__httpcache",
    download = ":_github.com__gregjones__httpcache#download",
    install = ["."],
    module = "github.com/gregjones/httpcache",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__gregjones__httpcache__diskcache",
    download = ":_github.com__gregjones__httpcache#download",
    install = ["diskcache"],
    module = "github.com/gregjones/httpcache",
    visibility = ["PUBLIC"],
    deps = [":github.com__peterbourgon__diskv"],
)

go_mod_download(
    name = "github.com__hashicorp__errwrap",
    _tag = "download",
    module = "github.com/hashicorp/errwrap",
    version = "v1.0.0",
)

go_module(
    name = "github.com__hashicorp__errwrap",
    download = ":_github.com__hashicorp__errwrap#download",
    install = ["."],
    module = "github.com/hashicorp/errwrap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__go-cleanhttp",
    _tag = "download",
    module = "github.com/hashicorp/go-cleanhttp",
    version = "v0.5.1",
)

go_module(
    name = "github.com__hashicorp__go-cleanhttp",
    download = ":_github.com__hashicorp__go-cleanhttp#download",
    install = ["."],
    module = "github.com/hashicorp/go-cleanhttp",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__go-hclog",
    _tag = "download",
    module = "github.com/hashicorp/go-hclog",
    version = "v0.8.0",
)

go_module(
    name = "github.com__hashicorp__go-hclog",
    download = ":_github.com__hashicorp__go-hclog#download",
    install = ["."],
    module = "github.com/hashicorp/go-hclog",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__go-multierror",
    _tag = "download",
    module = "github.com/hashicorp/go-multierror",
    version = "v1.0.0",
)

go_module(
    name = "github.com__hashicorp__go-multierror",
    download = ":_github.com__hashicorp__go-multierror#download",
    install = ["."],
    module = "github.com/hashicorp/go-multierror",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__errwrap"],
)

go_mod_download(
    name = "github.com__hashicorp__go-plugin",
    _tag = "download",
    module = "github.com/hashicorp/go-plugin",
    version = "v1.0.1",
)

go_module(
    name = "github.com__hashicorp__go-plugin",
    download = ":_github.com__hashicorp__go-plugin#download",
    install = ["."],
    module = "github.com/hashicorp/go-plugin",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__go-hclog",
        ":github.com__hashicorp__go-plugin__internal__plugin",
        ":github.com__hashicorp__yamux",
        ":github.com__mitchellh__go-testing-interface",
        ":github.com__oklog__run",
        ":golang.org__x__net__context",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__health",
        ":google.golang.org__grpc__health__grpc_health_v1",
    ],
)

go_module(
    name = "github.com__hashicorp__go-plugin__internal__plugin",
    download = ":_github.com__hashicorp__go-plugin#download",
    install = ["internal/plugin"],
    module = "github.com/hashicorp/go-plugin",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":golang.org__x__net__context",
        ":google.golang.org__grpc",
    ],
)

go_mod_download(
    name = "github.com__hashicorp__go-retryablehttp",
    _tag = "download",
    module = "github.com/hashicorp/go-retryablehttp",
    version = "v0.5.4",
)

go_module(
    name = "github.com__hashicorp__go-retryablehttp",
    download = ":_github.com__hashicorp__go-retryablehttp#download",
    install = ["."],
    module = "github.com/hashicorp/go-retryablehttp",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__go-cleanhttp"],
)

go_mod_download(
    name = "github.com__hashicorp__go-rootcerts",
    _tag = "download",
    module = "github.com/hashicorp/go-rootcerts",
    version = "v1.0.1",
)

go_module(
    name = "github.com__hashicorp__go-rootcerts",
    download = ":_github.com__hashicorp__go-rootcerts#download",
    install = ["."],
    module = "github.com/hashicorp/go-rootcerts",
    visibility = ["PUBLIC"],
    deps = select({
        ":__config_darwin_amd64": [":github.com__mitchellh__go-homedir"],
        ":__config_darwin_arm64": [":github.com__mitchellh__go-homedir"],
        ":__config_linux_amd64": [],
        "default": [],
    }),
)

go_mod_download(
    name = "github.com__hashicorp__go-sockaddr",
    _tag = "download",
    module = "github.com/hashicorp/go-sockaddr",
    version = "v1.0.2",
)

go_module(
    name = "github.com__hashicorp__go-sockaddr",
    download = ":_github.com__hashicorp__go-sockaddr#download",
    install = ["."],
    module = "github.com/hashicorp/go-sockaddr",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__golang-lru",
    _tag = "download",
    module = "github.com/hashicorp/golang-lru",
    version = "v0.5.4",
)

go_module(
    name = "github.com__hashicorp__golang-lru",
    download = ":_github.com__hashicorp__golang-lru#download",
    install = ["."],
    module = "github.com/hashicorp/golang-lru",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__golang-lru__simplelru"],
)

go_module(
    name = "github.com__hashicorp__golang-lru__simplelru",
    download = ":_github.com__hashicorp__golang-lru#download",
    install = ["simplelru"],
    module = "github.com/hashicorp/golang-lru",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__hashicorp__hcl",
    _tag = "download",
    module = "github.com/hashicorp/hcl",
    version = "v1.0.0",
)

go_module(
    name = "github.com__hashicorp__hcl",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["."],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__hcl__hcl__ast",
        ":github.com__hashicorp__hcl__hcl__parser",
        ":github.com__hashicorp__hcl__hcl__token",
        ":github.com__hashicorp__hcl__json__parser",
    ],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__ast",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/ast"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__hcl__hcl__token"],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__parser",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/parser"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__hcl__hcl__ast",
        ":github.com__hashicorp__hcl__hcl__scanner",
        ":github.com__hashicorp__hcl__hcl__token",
    ],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__printer",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/printer"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__hcl__hcl__ast",
        ":github.com__hashicorp__hcl__hcl__parser",
        ":github.com__hashicorp__hcl__hcl__token",
    ],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__scanner",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/scanner"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__hcl__hcl__token"],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__strconv",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/strconv"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__hcl__hcl__token",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["hcl/token"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__hcl__hcl__strconv"],
)

go_module(
    name = "github.com__hashicorp__hcl__json__parser",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["json/parser"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__hcl__hcl__ast",
        ":github.com__hashicorp__hcl__hcl__token",
        ":github.com__hashicorp__hcl__json__scanner",
        ":github.com__hashicorp__hcl__json__token",
    ],
)

go_module(
    name = "github.com__hashicorp__hcl__json__scanner",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["json/scanner"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__hcl__json__token"],
)

go_module(
    name = "github.com__hashicorp__hcl__json__token",
    download = ":_github.com__hashicorp__hcl#download",
    install = ["json/token"],
    module = "github.com/hashicorp/hcl",
    visibility = ["PUBLIC"],
    deps = [":github.com__hashicorp__hcl__hcl__token"],
)

go_mod_download(
    name = "github.com__hashicorp__vault__api",
    _tag = "download",
    module = "github.com/hashicorp/vault/api",
    version = "v1.0.4",
)

go_module(
    name = "github.com__hashicorp__vault__api",
    download = ":_github.com__hashicorp__vault__api#download",
    install = ["."],
    module = "github.com/hashicorp/vault/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__errwrap",
        ":github.com__hashicorp__go-cleanhttp",
        ":github.com__hashicorp__go-multierror",
        ":github.com__hashicorp__go-retryablehttp",
        ":github.com__hashicorp__go-rootcerts",
        ":github.com__hashicorp__hcl",
        ":github.com__hashicorp__hcl__hcl__ast",
        ":github.com__hashicorp__vault__sdk__helper__consts",
        ":github.com__hashicorp__vault__sdk__helper__hclutil",
        ":github.com__hashicorp__vault__sdk__helper__jsonutil",
        ":github.com__hashicorp__vault__sdk__helper__parseutil",
        ":github.com__mitchellh__mapstructure",
        ":golang.org__x__net__http2",
        ":golang.org__x__time__rate",
        ":gopkg.in__square__go-jose.v2__jwt",
    ],
)

go_mod_download(
    name = "github.com__hashicorp__vault__sdk",
    _tag = "download",
    module = "github.com/hashicorp/vault/sdk",
    version = "v0.1.13",
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__compressutil",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/compressutil"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__snappy",
        ":github.com__hashicorp__errwrap",
        ":github.com__pierrec__lz4",
    ],
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__consts",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/consts"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__hclutil",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/hclutil"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__go-multierror",
        ":github.com__hashicorp__hcl__hcl__ast",
    ],
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__jsonutil",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/jsonutil"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__errwrap",
        ":github.com__hashicorp__vault__sdk__helper__compressutil",
    ],
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__parseutil",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/parseutil"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__errwrap",
        ":github.com__hashicorp__go-sockaddr",
        ":github.com__hashicorp__vault__sdk__helper__strutil",
        ":github.com__mitchellh__mapstructure",
    ],
)

go_module(
    name = "github.com__hashicorp__vault__sdk__helper__strutil",
    download = ":_github.com__hashicorp__vault__sdk#download",
    install = ["helper/strutil"],
    module = "github.com/hashicorp/vault/sdk",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__errwrap",
        ":github.com__ryanuber__go-glob",
    ],
)

go_mod_download(
    name = "github.com__hashicorp__yamux",
    _tag = "download",
    module = "github.com/hashicorp/yamux",
    version = "v0.0.0-20181012175058-2f1d1f20f75d",
)

go_module(
    name = "github.com__hashicorp__yamux",
    download = ":_github.com__hashicorp__yamux#download",
    install = ["."],
    module = "github.com/hashicorp/yamux",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__huandu__xstrings",
    _tag = "download",
    module = "github.com/huandu/xstrings",
    version = "v1.3.2",
)

go_module(
    name = "github.com__huandu__xstrings",
    download = ":_github.com__huandu__xstrings#download",
    install = ["."],
    module = "github.com/huandu/xstrings",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__iancoleman__orderedmap",
    _tag = "download",
    module = "github.com/iancoleman/orderedmap",
    version = "v0.2.0",
)

go_module(
    name = "github.com__iancoleman__orderedmap",
    download = ":_github.com__iancoleman__orderedmap#download",
    install = ["."],
    module = "github.com/iancoleman/orderedmap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__imdario__mergo",
    _tag = "download",
    module = "github.com/imdario/mergo",
    version = "v0.3.12",
)

go_module(
    name = "github.com__imdario__mergo",
    download = ":_github.com__imdario__mergo#download",
    install = ["."],
    module = "github.com/imdario/mergo",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jinzhu__copier",
    _tag = "download",
    module = "github.com/jinzhu/copier",
    version = "v0.0.0-20201025035756-632e723a6687",
)

go_module(
    name = "github.com__jinzhu__copier",
    download = ":_github.com__jinzhu__copier#download",
    install = ["."],
    module = "github.com/jinzhu/copier",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jinzhu__gorm",
    _tag = "download",
    module = "github.com/jinzhu/gorm",
    version = "v1.9.1",
)

go_module(
    name = "github.com__jinzhu__gorm",
    download = ":_github.com__jinzhu__gorm#download",
    install = ["."],
    module = "github.com/jinzhu/gorm",
    visibility = ["PUBLIC"],
    deps = [":github.com__jinzhu__inflection"],
)

go_module(
    name = "github.com__jinzhu__gorm__dialects__mysql",
    download = ":_github.com__jinzhu__gorm#download",
    install = ["dialects/mysql"],
    module = "github.com/jinzhu/gorm",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-sql-driver__mysql"],
)

go_module(
    name = "github.com__jinzhu__gorm__dialects__postgres",
    download = ":_github.com__jinzhu__gorm#download",
    install = ["dialects/postgres"],
    module = "github.com/jinzhu/gorm",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__lib__pq",
        ":github.com__lib__pq__hstore",
    ],
)

go_module(
    name = "github.com__jinzhu__gorm__dialects__sqlite",
    download = ":_github.com__jinzhu__gorm#download",
    install = ["dialects/sqlite"],
    module = "github.com/jinzhu/gorm",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-sqlite3"],
)

go_mod_download(
    name = "github.com__jinzhu__inflection",
    _tag = "download",
    module = "github.com/jinzhu/inflection",
    version = "v1.0.0",
)

go_module(
    name = "github.com__jinzhu__inflection",
    download = ":_github.com__jinzhu__inflection#download",
    install = ["."],
    module = "github.com/jinzhu/inflection",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jinzhu__now",
    _tag = "download",
    module = "github.com/jinzhu/now",
    version = "v1.1.1",
)

go_module(
    name = "github.com__jinzhu__now",
    download = ":_github.com__jinzhu__now#download",
    install = ["."],
    module = "github.com/jinzhu/now",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jmespath__go-jmespath",
    _tag = "download",
    module = "github.com/jmespath/go-jmespath",
    version = "v0.4.0",
)

go_module(
    name = "github.com__jmespath__go-jmespath",
    download = ":_github.com__jmespath__go-jmespath#download",
    install = ["."],
    module = "github.com/jmespath/go-jmespath",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jmoiron__sqlx",
    _tag = "download",
    module = "github.com/jmoiron/sqlx",
    version = "v1.3.1",
)

go_module(
    name = "github.com__jmoiron__sqlx",
    download = ":_github.com__jmoiron__sqlx#download",
    install = ["."],
    module = "github.com/jmoiron/sqlx",
    visibility = ["PUBLIC"],
    deps = [":github.com__jmoiron__sqlx__reflectx"],
)

go_module(
    name = "github.com__jmoiron__sqlx__reflectx",
    download = ":_github.com__jmoiron__sqlx#download",
    install = ["reflectx"],
    module = "github.com/jmoiron/sqlx",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__joho__godotenv",
    _tag = "download",
    module = "github.com/joho/godotenv",
    version = "v1.3.0",
)

go_module(
    name = "github.com__joho__godotenv",
    download = ":_github.com__joho__godotenv#download",
    install = ["."],
    module = "github.com/joho/godotenv",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__jonboulle__clockwork",
    _tag = "download",
    module = "github.com/jonboulle/clockwork",
    version = "v0.2.0",
)

go_module(
    name = "github.com__jonboulle__clockwork",
    download = ":_github.com__jonboulle__clockwork#download",
    install = ["."],
    module = "github.com/jonboulle/clockwork",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__json-iterator__go",
    _tag = "download",
    module = "github.com/json-iterator/go",
    version = "v1.1.11",
)

go_module(
    name = "github.com__json-iterator__go",
    download = ":_github.com__json-iterator__go#download",
    install = ["."],
    module = "github.com/json-iterator/go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__modern-go__concurrent",
        ":github.com__modern-go__reflect2",
    ],
)

go_mod_download(
    name = "github.com__kubernetes-csi__external-snapshotter__v2",
    _tag = "download",
    module = "github.com/kubernetes-csi/external-snapshotter/v2",
    version = "v2.2.0-rc1",
)

go_module(
    name = "github.com__kubernetes-csi__external-snapshotter__v2__pkg__apis__volumesnapshot__v1beta1",
    download = ":_github.com__kubernetes-csi__external-snapshotter__v2#download",
    install = ["pkg/apis/volumesnapshot/v1beta1"],
    module = "github.com/kubernetes-csi/external-snapshotter/v2",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_mod_download(
    name = "github.com__lann__builder",
    _tag = "download",
    module = "github.com/lann/builder",
    version = "v0.0.0-20180802200727-47ae307949d0",
)

go_module(
    name = "github.com__lann__builder",
    download = ":_github.com__lann__builder#download",
    install = ["."],
    module = "github.com/lann/builder",
    visibility = ["PUBLIC"],
    deps = [":github.com__lann__ps"],
)

go_mod_download(
    name = "github.com__lann__ps",
    _tag = "download",
    module = "github.com/lann/ps",
    version = "v0.0.0-20150810152359-62de8c46ede0",
)

go_module(
    name = "github.com__lann__ps",
    download = ":_github.com__lann__ps#download",
    install = ["."],
    module = "github.com/lann/ps",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__leodido__go-urn",
    _tag = "download",
    module = "github.com/leodido/go-urn",
    version = "v1.2.0",
)

go_module(
    name = "github.com__leodido__go-urn",
    download = ":_github.com__leodido__go-urn#download",
    install = ["."],
    module = "github.com/leodido/go-urn",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__lestrrat-go__backoff",
    _tag = "download",
    module = "github.com/lestrrat-go/backoff",
    version = "v1.0.0",
)

go_module(
    name = "github.com__lestrrat-go__backoff",
    download = ":_github.com__lestrrat-go__backoff#download",
    install = ["."],
    module = "github.com/lestrrat-go/backoff",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_mod_download(
    name = "github.com__lib__pq",
    _tag = "download",
    module = "github.com/lib/pq",
    version = "v1.10.0",
)

go_module(
    name = "github.com__lib__pq",
    download = ":_github.com__lib__pq#download",
    install = ["."],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__lib__pq__oid",
        ":github.com__lib__pq__scram",
    ],
)

go_module(
    name = "github.com__lib__pq__hstore",
    download = ":_github.com__lib__pq#download",
    install = ["hstore"],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__lib__pq__oid",
    download = ":_github.com__lib__pq#download",
    install = ["oid"],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__lib__pq__scram",
    download = ":_github.com__lib__pq#download",
    install = ["scram"],
    module = "github.com/lib/pq",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__liggitt__tabwriter",
    _tag = "download",
    module = "github.com/liggitt/tabwriter",
    version = "v0.0.0-20181228230101-89fcab3d43de",
)

go_module(
    name = "github.com__liggitt__tabwriter",
    download = ":_github.com__liggitt__tabwriter#download",
    install = ["."],
    module = "github.com/liggitt/tabwriter",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__lithammer__shortuuid__v3",
    _tag = "download",
    module = "github.com/lithammer/shortuuid/v3",
    version = "v3.0.4",
)

go_module(
    name = "github.com__lithammer__shortuuid__v3",
    download = ":_github.com__lithammer__shortuuid__v3#download",
    install = ["."],
    module = "github.com/lithammer/shortuuid/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__uuid"],
)

go_mod_download(
    name = "github.com__magiconair__properties",
    _tag = "download",
    module = "github.com/magiconair/properties",
    version = "v1.8.5",
)

go_module(
    name = "github.com__magiconair__properties",
    download = ":_github.com__magiconair__properties#download",
    install = ["."],
    module = "github.com/magiconair/properties",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mailru__easyjson",
    _tag = "download",
    module = "github.com/mailru/easyjson",
    version = "v0.7.0",
)

go_module(
    name = "github.com__mailru__easyjson__buffer",
    download = ":_github.com__mailru__easyjson#download",
    install = ["buffer"],
    module = "github.com/mailru/easyjson",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mailru__easyjson__jlexer",
    download = ":_github.com__mailru__easyjson#download",
    install = ["jlexer"],
    module = "github.com/mailru/easyjson",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__mailru__easyjson__jwriter",
    download = ":_github.com__mailru__easyjson#download",
    install = ["jwriter"],
    module = "github.com/mailru/easyjson",
    visibility = ["PUBLIC"],
    deps = [":github.com__mailru__easyjson__buffer"],
)

go_mod_download(
    name = "github.com__mattn__go-colorable",
    _tag = "download",
    module = "github.com/mattn/go-colorable",
    version = "v0.1.8",
)

go_module(
    name = "github.com__mattn__go-colorable",
    download = ":_github.com__mattn__go-colorable#download",
    install = ["."],
    module = "github.com/mattn/go-colorable",
    visibility = ["PUBLIC"],
    deps = [":github.com__mattn__go-isatty"],
)

go_mod_download(
    name = "github.com__mattn__go-ieproxy",
    _tag = "download",
    module = "github.com/mattn/go-ieproxy",
    version = "v0.0.1",
)

go_module(
    name = "github.com__mattn__go-ieproxy",
    download = ":_github.com__mattn__go-ieproxy#download",
    install = ["."],
    module = "github.com/mattn/go-ieproxy",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mattn__go-isatty",
    _tag = "download",
    module = "github.com/mattn/go-isatty",
    version = "v0.0.12",
)

go_module(
    name = "github.com__mattn__go-isatty",
    download = ":_github.com__mattn__go-isatty#download",
    install = ["."],
    module = "github.com/mattn/go-isatty",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__mattn__go-runewidth",
    _tag = "download",
    module = "github.com/mattn/go-runewidth",
    version = "v0.0.7",
)

go_module(
    name = "github.com__mattn__go-runewidth",
    download = ":_github.com__mattn__go-runewidth#download",
    install = ["."],
    module = "github.com/mattn/go-runewidth",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mattn__go-sqlite3",
    _tag = "download",
    module = "github.com/mattn/go-sqlite3",
    version = "v2.0.3+incompatible",
)

go_module(
    name = "github.com__mattn__go-sqlite3",
    download = ":_github.com__mattn__go-sqlite3#download",
    install = ["."],
    module = "github.com/mattn/go-sqlite3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__matttproud__golang_protobuf_extensions",
    _tag = "download",
    module = "github.com/matttproud/golang_protobuf_extensions",
    version = "v1.0.2-0.20181231171920-c182affec369",
)

go_module(
    name = "github.com__matttproud__golang_protobuf_extensions__pbutil",
    download = ":_github.com__matttproud__golang_protobuf_extensions#download",
    install = ["pbutil"],
    module = "github.com/matttproud/golang_protobuf_extensions",
    visibility = ["PUBLIC"],
    deps = [":github.com__golang__protobuf__proto"],
)

go_mod_download(
    name = "github.com__microcosm-cc__bluemonday",
    _tag = "download",
    module = "github.com/microcosm-cc/bluemonday",
    version = "v1.0.17",
)

go_module(
    name = "github.com__microcosm-cc__bluemonday",
    download = ":_github.com__microcosm-cc__bluemonday#download",
    install = ["."],
    module = "github.com/microcosm-cc/bluemonday",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__aymerick__douceur__parser",
        ":github.com__microcosm-cc__bluemonday__css",
        ":golang.org__x__net__html",
    ],
)

go_module(
    name = "github.com__microcosm-cc__bluemonday__css",
    download = ":_github.com__microcosm-cc__bluemonday#download",
    install = ["css"],
    module = "github.com/microcosm-cc/bluemonday",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__copystructure",
    _tag = "download",
    module = "github.com/mitchellh/copystructure",
    version = "v1.1.1",
)

go_module(
    name = "github.com__mitchellh__copystructure",
    download = ":_github.com__mitchellh__copystructure#download",
    install = ["."],
    module = "github.com/mitchellh/copystructure",
    visibility = ["PUBLIC"],
    deps = [":github.com__mitchellh__reflectwalk"],
)

go_mod_download(
    name = "github.com__mitchellh__go-homedir",
    _tag = "download",
    module = "github.com/mitchellh/go-homedir",
    version = "v1.1.0",
)

go_module(
    name = "github.com__mitchellh__go-homedir",
    download = ":_github.com__mitchellh__go-homedir#download",
    install = ["."],
    module = "github.com/mitchellh/go-homedir",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__go-testing-interface",
    _tag = "download",
    module = "github.com/mitchellh/go-testing-interface",
    version = "v1.0.0",
)

go_module(
    name = "github.com__mitchellh__go-testing-interface",
    download = ":_github.com__mitchellh__go-testing-interface#download",
    install = ["."],
    module = "github.com/mitchellh/go-testing-interface",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__go-wordwrap",
    _tag = "download",
    module = "github.com/mitchellh/go-wordwrap",
    version = "v1.0.0",
)

go_module(
    name = "github.com__mitchellh__go-wordwrap",
    download = ":_github.com__mitchellh__go-wordwrap#download",
    install = ["."],
    module = "github.com/mitchellh/go-wordwrap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__mapstructure",
    _tag = "download",
    module = "github.com/mitchellh/mapstructure",
    version = "v1.4.1",
)

go_module(
    name = "github.com__mitchellh__mapstructure",
    download = ":_github.com__mitchellh__mapstructure#download",
    install = ["."],
    module = "github.com/mitchellh/mapstructure",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mitchellh__reflectwalk",
    _tag = "download",
    module = "github.com/mitchellh/reflectwalk",
    version = "v1.0.1",
)

go_module(
    name = "github.com__mitchellh__reflectwalk",
    download = ":_github.com__mitchellh__reflectwalk#download",
    install = ["."],
    module = "github.com/mitchellh/reflectwalk",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__moby__spdystream",
    _tag = "download",
    module = "github.com/moby/spdystream",
    version = "v0.2.0",
)

go_module(
    name = "github.com__moby__spdystream",
    download = ":_github.com__moby__spdystream#download",
    install = ["."],
    module = "github.com/moby/spdystream",
    visibility = ["PUBLIC"],
    deps = [":github.com__moby__spdystream__spdy"],
)

go_module(
    name = "github.com__moby__spdystream__spdy",
    download = ":_github.com__moby__spdystream#download",
    install = ["spdy"],
    module = "github.com/moby/spdystream",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__moby__term",
    _tag = "download",
    module = "github.com/moby/term",
    version = "v0.0.0-20201216013528-df9cb8a40635",
)

go_module(
    name = "github.com__moby__term",
    download = ":_github.com__moby__term#download",
    install = ["."],
    module = "github.com/moby/term",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__modern-go__concurrent",
    _tag = "download",
    module = "github.com/modern-go/concurrent",
    version = "v0.0.0-20180306012644-bacd9c7ef1dd",
)

go_module(
    name = "github.com__modern-go__concurrent",
    download = ":_github.com__modern-go__concurrent#download",
    install = ["."],
    module = "github.com/modern-go/concurrent",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__modern-go__reflect2",
    _tag = "download",
    module = "github.com/modern-go/reflect2",
    version = "v1.0.1",
)

go_module(
    name = "github.com__modern-go__reflect2",
    download = ":_github.com__modern-go__reflect2#download",
    install = ["."],
    module = "github.com/modern-go/reflect2",
    visibility = ["PUBLIC"],
    deps = [":github.com__modern-go__concurrent"],
)

go_mod_download(
    name = "github.com__monochromegane__go-gitignore",
    _tag = "download",
    module = "github.com/monochromegane/go-gitignore",
    version = "v0.0.0-20200626010858-205db1a8cc00",
)

go_module(
    name = "github.com__monochromegane__go-gitignore",
    download = ":_github.com__monochromegane__go-gitignore#download",
    install = ["."],
    module = "github.com/monochromegane/go-gitignore",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__moogar0880__problems",
    _tag = "download",
    module = "github.com/moogar0880/problems",
    version = "v0.1.1",
)

go_module(
    name = "github.com__moogar0880__problems",
    download = ":_github.com__moogar0880__problems#download",
    install = ["."],
    module = "github.com/moogar0880/problems",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__morikuni__aec",
    _tag = "download",
    module = "github.com/morikuni/aec",
    version = "v1.0.0",
)

go_module(
    name = "github.com__morikuni__aec",
    download = ":_github.com__morikuni__aec#download",
    install = ["."],
    module = "github.com/morikuni/aec",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__mxk__go-flowrate",
    _tag = "download",
    module = "github.com/mxk/go-flowrate",
    version = "v0.0.0-20140419014527-cca7078d478f",
)

go_module(
    name = "github.com__mxk__go-flowrate__flowrate",
    download = ":_github.com__mxk__go-flowrate#download",
    install = ["flowrate"],
    module = "github.com/mxk/go-flowrate",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__oklog__run",
    _tag = "download",
    module = "github.com/oklog/run",
    version = "v1.1.0",
)

go_module(
    name = "github.com__oklog__run",
    download = ":_github.com__oklog__run#download",
    install = ["."],
    module = "github.com/oklog/run",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__oklog__ulid",
    _tag = "download",
    module = "github.com/oklog/ulid",
    version = "v1.3.1",
)

go_module(
    name = "github.com__oklog__ulid",
    download = ":_github.com__oklog__ulid#download",
    install = ["."],
    module = "github.com/oklog/ulid",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__onsi__gomega",
    _tag = "download",
    module = "github.com/onsi/gomega",
    version = "v1.14.0",
)

go_module(
    name = "github.com__onsi__gomega",
    download = ":_github.com__onsi__gomega#download",
    install = ["."],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega__internal__assertion",
        ":github.com__onsi__gomega__internal__asyncassertion",
        ":github.com__onsi__gomega__internal__defaults",
        ":github.com__onsi__gomega__internal__testingtsupport",
        ":github.com__onsi__gomega__matchers",
        ":github.com__onsi__gomega__types",
    ],
)

go_module(
    name = "github.com__onsi__gomega__format",
    download = ":_github.com__onsi__gomega#download",
    install = ["format"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__onsi__gomega__gbytes",
    download = ":_github.com__onsi__gomega#download",
    install = ["gbytes"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega__format"],
)

go_module(
    name = "github.com__onsi__gomega__gexec",
    download = ":_github.com__onsi__gomega#download",
    install = ["gexec"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega",
        ":github.com__onsi__gomega__format",
        ":github.com__onsi__gomega__gbytes",
    ],
)

go_module(
    name = "github.com__onsi__gomega__internal__assertion",
    download = ":_github.com__onsi__gomega#download",
    install = ["internal/assertion"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega__types"],
)

go_module(
    name = "github.com__onsi__gomega__internal__asyncassertion",
    download = ":_github.com__onsi__gomega#download",
    install = ["internal/asyncassertion"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega__internal__oraclematcher",
        ":github.com__onsi__gomega__types",
    ],
)

go_module(
    name = "github.com__onsi__gomega__internal__defaults",
    download = ":_github.com__onsi__gomega#download",
    install = ["internal/defaults"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__onsi__gomega__internal__oraclematcher",
    download = ":_github.com__onsi__gomega#download",
    install = ["internal/oraclematcher"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega__types"],
)

go_module(
    name = "github.com__onsi__gomega__internal__testingtsupport",
    download = ":_github.com__onsi__gomega#download",
    install = ["internal/testingtsupport"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega__types"],
)

go_module(
    name = "github.com__onsi__gomega__matchers",
    download = ":_github.com__onsi__gomega#download",
    install = ["matchers"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega__format",
        ":github.com__onsi__gomega__internal__oraclematcher",
        ":github.com__onsi__gomega__matchers__support__goraph__bipartitegraph",
        ":github.com__onsi__gomega__types",
        ":golang.org__x__net__html__charset",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "github.com__onsi__gomega__matchers__support__goraph__bipartitegraph",
    download = ":_github.com__onsi__gomega#download",
    install = ["matchers/support/goraph/bipartitegraph"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega__matchers__support__goraph__edge",
        ":github.com__onsi__gomega__matchers__support__goraph__node",
        ":github.com__onsi__gomega__matchers__support__goraph__util",
    ],
)

go_module(
    name = "github.com__onsi__gomega__matchers__support__goraph__edge",
    download = ":_github.com__onsi__gomega#download",
    install = ["matchers/support/goraph/edge"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [":github.com__onsi__gomega__matchers__support__goraph__node"],
)

go_module(
    name = "github.com__onsi__gomega__matchers__support__goraph__node",
    download = ":_github.com__onsi__gomega#download",
    install = ["matchers/support/goraph/node"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__onsi__gomega__matchers__support__goraph__util",
    download = ":_github.com__onsi__gomega#download",
    install = ["matchers/support/goraph/util"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__onsi__gomega__types",
    download = ":_github.com__onsi__gomega#download",
    install = ["types"],
    module = "github.com/onsi/gomega",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__opencontainers__go-digest",
    _tag = "download",
    module = "github.com/opencontainers/go-digest",
    version = "v1.0.0",
)

go_module(
    name = "github.com__opencontainers__go-digest",
    download = ":_github.com__opencontainers__go-digest#download",
    install = ["."],
    module = "github.com/opencontainers/go-digest",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__opencontainers__image-spec",
    _tag = "download",
    module = "github.com/opencontainers/image-spec",
    version = "v1.0.1",
)

go_module(
    name = "github.com__opencontainers__image-spec__specs-go",
    download = ":_github.com__opencontainers__image-spec#download",
    install = ["specs-go"],
    module = "github.com/opencontainers/image-spec",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__opencontainers__image-spec__specs-go__v1",
    download = ":_github.com__opencontainers__image-spec#download",
    install = ["specs-go/v1"],
    module = "github.com/opencontainers/image-spec",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go",
    ],
)

go_mod_download(
    name = "github.com__opentracing__opentracing-go",
    _tag = "download",
    module = "github.com/opentracing/opentracing-go",
    version = "v1.1.0",
)

go_module(
    name = "github.com__opentracing__opentracing-go",
    download = ":_github.com__opentracing__opentracing-go#download",
    install = ["."],
    module = "github.com/opentracing/opentracing-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__opentracing__opentracing-go__log"],
)

go_module(
    name = "github.com__opentracing__opentracing-go__ext",
    download = ":_github.com__opentracing__opentracing-go#download",
    install = ["ext"],
    module = "github.com/opentracing/opentracing-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__opentracing__opentracing-go"],
)

go_module(
    name = "github.com__opentracing__opentracing-go__log",
    download = ":_github.com__opentracing__opentracing-go#download",
    install = ["log"],
    module = "github.com/opentracing/opentracing-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__patrickmn__go-cache",
    _tag = "download",
    module = "github.com/patrickmn/go-cache",
    version = "v2.1.0+incompatible",
)

go_module(
    name = "github.com__patrickmn__go-cache",
    download = ":_github.com__patrickmn__go-cache#download",
    install = ["."],
    module = "github.com/patrickmn/go-cache",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pborman__uuid",
    _tag = "download",
    module = "github.com/pborman/uuid",
    version = "v1.2.1",
)

go_module(
    name = "github.com__pborman__uuid",
    download = ":_github.com__pborman__uuid#download",
    install = ["."],
    module = "github.com/pborman/uuid",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__uuid"],
)

go_mod_download(
    name = "github.com__pelletier__go-toml",
    _tag = "download",
    module = "github.com/pelletier/go-toml",
    version = "v1.9.3",
)

go_module(
    name = "github.com__pelletier__go-toml",
    download = ":_github.com__pelletier__go-toml#download",
    install = ["."],
    module = "github.com/pelletier/go-toml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__peterbourgon__diskv",
    _tag = "download",
    module = "github.com/peterbourgon/diskv",
    version = "v2.0.1+incompatible",
)

go_module(
    name = "github.com__peterbourgon__diskv",
    download = ":_github.com__peterbourgon__diskv#download",
    install = ["."],
    module = "github.com/peterbourgon/diskv",
    visibility = ["PUBLIC"],
    deps = [":github.com__google__btree"],
)

go_mod_download(
    name = "github.com__pierrec__lz4",
    _tag = "download",
    module = "github.com/pierrec/lz4",
    version = "v2.0.5+incompatible",
)

go_module(
    name = "github.com__pierrec__lz4",
    download = ":_github.com__pierrec__lz4#download",
    install = ["."],
    module = "github.com/pierrec/lz4",
    visibility = ["PUBLIC"],
    deps = [":github.com__pierrec__lz4__internal__xxh32"],
)

go_module(
    name = "github.com__pierrec__lz4__internal__xxh32",
    download = ":_github.com__pierrec__lz4#download",
    install = ["internal/xxh32"],
    module = "github.com/pierrec/lz4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pkg__errors",
    _tag = "download",
    module = "github.com/pkg/errors",
    version = "v0.9.1",
)

go_module(
    name = "github.com__pkg__errors",
    download = ":_github.com__pkg__errors#download",
    install = ["."],
    module = "github.com/pkg/errors",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pmezard__go-difflib",
    _tag = "download",
    module = "github.com/pmezard/go-difflib",
    version = "v1.0.0",
)

go_module(
    name = "github.com__pmezard__go-difflib__difflib",
    download = ":_github.com__pmezard__go-difflib#download",
    install = ["difflib"],
    module = "github.com/pmezard/go-difflib",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__pquerna__cachecontrol",
    _tag = "download",
    module = "github.com/pquerna/cachecontrol",
    version = "v0.0.0-20171018203845-0dec1b30a021",
)

go_module(
    name = "github.com__pquerna__cachecontrol",
    download = ":_github.com__pquerna__cachecontrol#download",
    install = ["."],
    module = "github.com/pquerna/cachecontrol",
    visibility = ["PUBLIC"],
    deps = [":github.com__pquerna__cachecontrol__cacheobject"],
)

go_module(
    name = "github.com__pquerna__cachecontrol__cacheobject",
    download = ":_github.com__pquerna__cachecontrol#download",
    install = ["cacheobject"],
    module = "github.com/pquerna/cachecontrol",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring",
    _tag = "download",
    module = "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring",
    version = "v0.43.0",
)

go_module(
    name = "github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring",
    download = ":_github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring#download",
    install = ["."],
    module = "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring__v1",
    download = ":_github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring#download",
    install = ["v1"],
    module = "github.com/prometheus-operator/prometheus-operator/pkg/apis/monitoring",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus-operator__prometheus-operator__pkg__apis__monitoring",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_mod_download(
    name = "github.com__prometheus__client_golang",
    _tag = "download",
    module = "github.com/prometheus/client_golang",
    version = "v1.11.0",
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__beorn7__perks__quantile",
        ":github.com__cespare__xxhash__v2",
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":github.com__prometheus__client_golang__prometheus__internal",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__expfmt",
        ":github.com__prometheus__common__model",
        ":github.com__prometheus__procfs",
    ],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__collectors",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/collectors"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [":github.com__prometheus__client_golang__prometheus"],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__internal",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/internal"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [":github.com__prometheus__client_model__go"],
)

go_module(
    name = "github.com__prometheus__client_golang__prometheus__promhttp",
    download = ":_github.com__prometheus__client_golang#download",
    install = ["prometheus/promhttp"],
    module = "github.com/prometheus/client_golang",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__expfmt",
    ],
)

go_mod_download(
    name = "github.com__prometheus__client_model",
    _tag = "download",
    module = "github.com/prometheus/client_model",
    version = "v0.2.0",
)

go_module(
    name = "github.com__prometheus__client_model__go",
    download = ":_github.com__prometheus__client_model#download",
    install = ["go"],
    module = "github.com/prometheus/client_model",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__timestamp",
    ],
)

go_mod_download(
    name = "github.com__prometheus__common",
    _tag = "download",
    module = "github.com/prometheus/common",
    version = "v0.26.0",
)

go_module(
    name = "github.com__prometheus__common__expfmt",
    download = ":_github.com__prometheus__common#download",
    install = ["expfmt"],
    module = "github.com/prometheus/common",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":github.com__matttproud__golang_protobuf_extensions__pbutil",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__internal__bitbucket.org__ww__goautoneg",
        ":github.com__prometheus__common__model",
    ],
)

go_module(
    name = "github.com__prometheus__common__internal__bitbucket.org__ww__goautoneg",
    download = ":_github.com__prometheus__common#download",
    install = ["internal/bitbucket.org/ww/goautoneg"],
    module = "github.com/prometheus/common",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__prometheus__common__model",
    download = ":_github.com__prometheus__common#download",
    install = ["model"],
    module = "github.com/prometheus/common",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__prometheus__procfs",
    _tag = "download",
    module = "github.com/prometheus/procfs",
    version = "v0.6.0",
)

go_module(
    name = "github.com__prometheus__procfs",
    download = ":_github.com__prometheus__procfs#download",
    install = ["."],
    module = "github.com/prometheus/procfs",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__procfs__internal__fs",
        ":github.com__prometheus__procfs__internal__util",
        ":golang.org__x__sys__unix",
    ],
)

go_module(
    name = "github.com__prometheus__procfs__internal__fs",
    download = ":_github.com__prometheus__procfs#download",
    install = ["internal/fs"],
    module = "github.com/prometheus/procfs",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__prometheus__procfs__internal__util",
    download = ":_github.com__prometheus__procfs#download",
    install = ["internal/util"],
    module = "github.com/prometheus/procfs",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__prometheus__prom2json",
    _tag = "download",
    module = "github.com/prometheus/prom2json",
    version = "v1.3.0",
)

go_module(
    name = "github.com__prometheus__prom2json",
    download = ":_github.com__prometheus__prom2json#download",
    install = ["."],
    module = "github.com/prometheus/prom2json",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__matttproud__golang_protobuf_extensions__pbutil",
        ":github.com__prometheus__client_model__go",
        ":github.com__prometheus__common__expfmt",
    ],
)

go_mod_download(
    name = "github.com__robfig__cron",
    _tag = "download",
    module = "github.com/robfig/cron",
    version = "v1.2.0",
)

go_module(
    name = "github.com__robfig__cron",
    download = ":_github.com__robfig__cron#download",
    install = ["."],
    module = "github.com/robfig/cron",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__rubenv__sql-migrate",
    _tag = "download",
    module = "github.com/rubenv/sql-migrate",
    version = "v0.0.0-20200616145509-8d140a17f351",
)

go_module(
    name = "github.com__rubenv__sql-migrate",
    download = ":_github.com__rubenv__sql-migrate#download",
    install = ["."],
    module = "github.com/rubenv/sql-migrate",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__rubenv__sql-migrate__sqlparse",
        ":gopkg.in__gorp.v1",
    ],
)

go_module(
    name = "github.com__rubenv__sql-migrate__sqlparse",
    download = ":_github.com__rubenv__sql-migrate#download",
    install = ["sqlparse"],
    module = "github.com/rubenv/sql-migrate",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__russross__blackfriday",
    _tag = "download",
    module = "github.com/russross/blackfriday",
    version = "v1.5.2",
)

go_module(
    name = "github.com__russross__blackfriday",
    download = ":_github.com__russross__blackfriday#download",
    install = ["."],
    module = "github.com/russross/blackfriday",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__ryanuber__go-glob",
    _tag = "download",
    module = "github.com/ryanuber/go-glob",
    version = "v1.0.0",
)

go_module(
    name = "github.com__ryanuber__go-glob",
    download = ":_github.com__ryanuber__go-glob#download",
    install = ["."],
    module = "github.com/ryanuber/go-glob",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sagikazarmark__appkit",
    _tag = "download",
    module = "github.com/sagikazarmark/appkit",
    version = "v0.8.0",
)

go_module(
    name = "github.com__sagikazarmark__appkit__endpoint",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["endpoint"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__sagikazarmark__appkit__errors",
    ],
)

go_module(
    name = "github.com__sagikazarmark__appkit__errors",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["errors"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__sagikazarmark__appkit__run",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["run"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__sagikazarmark__appkit__transport__http",
    download = ":_github.com__sagikazarmark__appkit#download",
    install = ["transport/http"],
    module = "github.com/sagikazarmark/appkit",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__moogar0880__problems",
        ":github.com__sagikazarmark__appkit__errors",
    ],
)

go_mod_download(
    name = "github.com__sagikazarmark__kitx",
    _tag = "download",
    module = "github.com/sagikazarmark/kitx",
    version = "v0.12.0",
)

go_module(
    name = "github.com__sagikazarmark__kitx__correlation",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["correlation"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__transport__grpc",
        ":github.com__go-kit__kit__transport__http",
        ":google.golang.org__grpc__metadata",
    ],
)

go_module(
    name = "github.com__sagikazarmark__kitx__endpoint",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["endpoint"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-kit__kit__endpoint"],
)

go_module(
    name = "github.com__sagikazarmark__kitx__transport",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["transport"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-kit__kit__transport"],
)

go_module(
    name = "github.com__sagikazarmark__kitx__transport__http",
    download = ":_github.com__sagikazarmark__kitx#download",
    install = ["transport/http"],
    module = "github.com/sagikazarmark/kitx",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-kit__kit__endpoint",
        ":github.com__go-kit__kit__transport__http",
        ":github.com__moogar0880__problems",
        ":github.com__pkg__errors",
    ],
)

go_mod_download(
    name = "github.com__sagikazarmark__ocmux",
    _tag = "download",
    module = "github.com/sagikazarmark/ocmux",
    version = "v0.2.0",
)

go_module(
    name = "github.com__sagikazarmark__ocmux",
    download = ":_github.com__sagikazarmark__ocmux#download",
    install = ["."],
    module = "github.com/sagikazarmark/ocmux",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gorilla__mux",
        ":go.opencensus.io__plugin__ochttp",
        ":go.opencensus.io__trace",
    ],
)

go_mod_download(
    name = "github.com__shopspring__decimal",
    _tag = "download",
    module = "github.com/shopspring/decimal",
    version = "v1.2.0",
)

go_module(
    name = "github.com__shopspring__decimal",
    download = ":_github.com__shopspring__decimal#download",
    install = ["."],
    module = "github.com/shopspring/decimal",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__sirupsen__logrus",
    _tag = "download",
    module = "github.com/sirupsen/logrus",
    version = "v1.8.1",
)

go_module(
    name = "github.com__sirupsen__logrus",
    download = ":_github.com__sirupsen__logrus#download",
    install = ["."],
    module = "github.com/sirupsen/logrus",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "github.com__spf13__afero",
    _tag = "download",
    module = "github.com/spf13/afero",
    version = "v1.6.0",
)

go_module(
    name = "github.com__spf13__afero",
    download = ":_github.com__spf13__afero#download",
    install = ["."],
    module = "github.com/spf13/afero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spf13__afero__mem",
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "github.com__spf13__afero__mem",
    download = ":_github.com__spf13__afero#download",
    install = ["mem"],
    module = "github.com/spf13/afero",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__cast",
    _tag = "download",
    module = "github.com/spf13/cast",
    version = "v1.3.1",
)

go_module(
    name = "github.com__spf13__cast",
    download = ":_github.com__spf13__cast#download",
    install = ["."],
    module = "github.com/spf13/cast",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__cobra",
    _tag = "download",
    module = "github.com/spf13/cobra",
    version = "v1.1.3",
)

go_module(
    name = "github.com__spf13__cobra",
    download = ":_github.com__spf13__cobra#download",
    install = ["."],
    module = "github.com/spf13/cobra",
    visibility = ["PUBLIC"],
    deps = [":github.com__spf13__pflag"],
)

go_mod_download(
    name = "github.com__spf13__jwalterweatherman",
    _tag = "download",
    module = "github.com/spf13/jwalterweatherman",
    version = "v1.1.0",
)

go_module(
    name = "github.com__spf13__jwalterweatherman",
    download = ":_github.com__spf13__jwalterweatherman#download",
    install = ["."],
    module = "github.com/spf13/jwalterweatherman",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__pflag",
    _tag = "download",
    module = "github.com/spf13/pflag",
    version = "v1.0.5",
)

go_module(
    name = "github.com__spf13__pflag",
    download = ":_github.com__spf13__pflag#download",
    install = ["."],
    module = "github.com/spf13/pflag",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__spf13__viper",
    _tag = "download",
    module = "github.com/spf13/viper",
    version = "v1.8.0",
)

go_module(
    name = "github.com__spf13__viper",
    download = ":_github.com__spf13__viper#download",
    install = ["."],
    module = "github.com/spf13/viper",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fsnotify__fsnotify",
        ":github.com__hashicorp__hcl",
        ":github.com__hashicorp__hcl__hcl__printer",
        ":github.com__magiconair__properties",
        ":github.com__mitchellh__mapstructure",
        ":github.com__pelletier__go-toml",
        ":github.com__spf13__afero",
        ":github.com__spf13__cast",
        ":github.com__spf13__jwalterweatherman",
        ":github.com__spf13__pflag",
        ":github.com__subosito__gotenv",
        ":gopkg.in__ini.v1",
        ":gopkg.in__yaml.v2",
    ],
)

go_mod_download(
    name = "github.com__stretchr__objx",
    _tag = "download",
    module = "github.com/stretchr/objx",
    version = "v0.2.0",
)

go_module(
    name = "github.com__stretchr__objx",
    download = ":_github.com__stretchr__objx#download",
    install = ["."],
    module = "github.com/stretchr/objx",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__stretchr__testify",
    _tag = "download",
    module = "github.com/stretchr/testify",
    version = "v1.7.0",
)

go_module(
    name = "github.com__stretchr__testify__assert",
    download = ":_github.com__stretchr__testify#download",
    install = ["assert"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__pmezard__go-difflib__difflib",
        ":gopkg.in__yaml.v3",
    ],
)

go_module(
    name = "github.com__stretchr__testify__mock",
    download = ":_github.com__stretchr__testify#download",
    install = ["mock"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__pmezard__go-difflib__difflib",
        ":github.com__stretchr__objx",
        ":github.com__stretchr__testify__assert",
    ],
)

go_module(
    name = "github.com__stretchr__testify__require",
    download = ":_github.com__stretchr__testify#download",
    install = ["require"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [":github.com__stretchr__testify__assert"],
)

go_module(
    name = "github.com__stretchr__testify__suite",
    download = ":_github.com__stretchr__testify#download",
    install = ["suite"],
    module = "github.com/stretchr/testify",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__stretchr__testify__assert",
        ":github.com__stretchr__testify__require",
    ],
)

go_mod_download(
    name = "github.com__subosito__gotenv",
    _tag = "download",
    module = "github.com/subosito/gotenv",
    version = "v1.2.0",
)

go_module(
    name = "github.com__subosito__gotenv",
    download = ":_github.com__subosito__gotenv#download",
    install = ["."],
    module = "github.com/subosito/gotenv",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__technosophos__moniker",
    _tag = "download",
    module = "github.com/technosophos/moniker",
    version = "v0.0.0-20180509230615-a5dbd03a2245",
)

go_module(
    name = "github.com__technosophos__moniker",
    download = ":_github.com__technosophos__moniker#download",
    install = ["."],
    module = "github.com/technosophos/moniker",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__uber-go__mapdecode",
    _tag = "download",
    module = "github.com/uber-go/mapdecode",
    version = "v1.0.0",
)

go_module(
    name = "github.com__uber-go__mapdecode",
    download = ":_github.com__uber-go__mapdecode#download",
    install = ["."],
    module = "github.com/uber-go/mapdecode",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__mapdecode__internal__mapstructure",
        ":go.uber.org__multierr",
    ],
)

go_module(
    name = "github.com__uber-go__mapdecode__internal__mapstructure",
    download = ":_github.com__uber-go__mapdecode#download",
    install = ["internal/mapstructure"],
    module = "github.com/uber-go/mapdecode",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__uber-go__tally",
    _tag = "download",
    module = "github.com/uber-go/tally",
    version = "v3.3.15+incompatible",
)

go_module(
    name = "github.com__uber-go__tally",
    download = ":_github.com__uber-go__tally#download",
    install = ["."],
    module = "github.com/uber-go/tally",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__uber__tchannel-go",
    _tag = "download",
    module = "github.com/uber/tchannel-go",
    version = "v1.18.0",
)

go_module(
    name = "github.com__uber__tchannel-go",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["."],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":github.com__opentracing__opentracing-go__ext",
        ":github.com__uber__tchannel-go__internal__argreader",
        ":github.com__uber__tchannel-go__relay",
        ":github.com__uber__tchannel-go__thrift__arg2",
        ":github.com__uber__tchannel-go__tnet",
        ":github.com__uber__tchannel-go__tos",
        ":github.com__uber__tchannel-go__trand",
        ":github.com__uber__tchannel-go__typed",
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":golang.org__x__net__context",
        ":golang.org__x__net__ipv4",
        ":golang.org__x__net__ipv6",
        ":golang.org__x__sys__unix",
    ],
)

go_module(
    name = "github.com__uber__tchannel-go__internal__argreader",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["internal/argreader"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go__relay",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["relay"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [":github.com__uber__tchannel-go__thrift__arg2"],
)

go_module(
    name = "github.com__uber__tchannel-go__thrift__arg2",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["thrift/arg2"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go__tnet",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["tnet"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go__tos",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["tos"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go__trand",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["trand"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__uber__tchannel-go__typed",
    download = ":_github.com__uber__tchannel-go#download",
    install = ["typed"],
    module = "github.com/uber/tchannel-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__ugorji__go__codec",
    _tag = "download",
    module = "github.com/ugorji/go/codec",
    version = "v1.1.7",
)

go_module(
    name = "github.com__ugorji__go__codec",
    download = ":_github.com__ugorji__go__codec#download",
    install = ["."],
    module = "github.com/ugorji/go/codec",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__vmware-tanzu__velero",
    _tag = "download",
    module = "github.com/vmware-tanzu/velero",
    version = "v1.5.1",
)

go_module(
    name = "github.com__vmware-tanzu__velero__internal__hook",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["internal/hook"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gofrs__uuid",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__kuberesource",
        ":github.com__vmware-tanzu__velero__pkg__podexec",
        ":github.com__vmware-tanzu__velero__pkg__restic",
        ":github.com__vmware-tanzu__velero__pkg__util__collections",
        ":github.com__vmware-tanzu__velero__pkg__util__kube",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/apis/velero/v1"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__archive",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/archive"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__util__filesystem",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__builder",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/builder"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__buildinfo",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/buildinfo"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__client",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/client"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__spf13__pflag",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__buildinfo",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__plugin__pkg__client__auth__azure",
        ":k8s.io__client-go__plugin__pkg__client__auth__gcp",
        ":k8s.io__client-go__plugin__pkg__client__auth__oidc",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__clientcmd",
        ":sigs.k8s.io__controller-runtime__pkg__client",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__cmd__util__flag",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/cmd/util/flag"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__spf13__cobra",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__discovery",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/discovery"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__features",
        ":github.com__vmware-tanzu__velero__third_party__kubernetes__pkg__kubectl__cmd__util",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__version",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__restmapper",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__features",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/features"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__util__sets"],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/clientset/versioned"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__typed__velero__v1",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__util__flowcontrol",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__scheme",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/clientset/versioned/scheme"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__typed__velero__v1",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/clientset/versioned/typed/velero/v1"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__scheme",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__informers__externalversions__internalinterfaces",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/informers/externalversions/internalinterfaces"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__informers__externalversions__velero__v1",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/informers/externalversions/velero/v1"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned",
        ":github.com__vmware-tanzu__velero__pkg__generated__informers__externalversions__internalinterfaces",
        ":github.com__vmware-tanzu__velero__pkg__generated__listers__velero__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__generated__listers__velero__v1",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/generated/listers/velero/v1"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__kuberesource",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/kuberesource"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__runtime__schema"],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__label",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/label"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__util__validation",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__persistence",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/persistence"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__kubernetes-csi__external-snapshotter__v2__pkg__apis__volumesnapshot__v1beta1",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__scheme",
        ":github.com__vmware-tanzu__velero__pkg__plugin__velero",
        ":github.com__vmware-tanzu__velero__pkg__volume",
        ":k8s.io__apimachinery__pkg__util__errors",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__plugin__framework",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/plugin/framework"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__hashicorp__go-plugin",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__spf13__pflag",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__cmd__util__flag",
        ":github.com__vmware-tanzu__velero__pkg__plugin__generated",
        ":github.com__vmware-tanzu__velero__pkg__plugin__velero",
        ":github.com__vmware-tanzu__velero__pkg__util__logging",
        ":golang.org__x__net__context",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__plugin__generated",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/plugin/generated"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":golang.org__x__net__context",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__plugin__velero",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/plugin/velero"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__podexec",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/podexec"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__remotecommand",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__restic",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/restic"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__azure-sdk-for-go__services__storage__mgmt__2019-06-01__storage",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":github.com__Azure__go-autorest__autorest__azure__auth",
        ":github.com__aws__aws-sdk-go__aws__endpoints",
        ":github.com__aws__aws-sdk-go__aws__session",
        ":github.com__aws__aws-sdk-go__service__s3__s3manager",
        ":github.com__joho__godotenv",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__typed__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__informers__externalversions__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__listers__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__label",
        ":github.com__vmware-tanzu__velero__pkg__persistence",
        ":github.com__vmware-tanzu__velero__pkg__util__boolptr",
        ":github.com__vmware-tanzu__velero__pkg__util__exec",
        ":github.com__vmware-tanzu__velero__pkg__util__filesystem",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__listers__core__v1",
        ":k8s.io__client-go__tools__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__restore",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/restore"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__gofrs__uuid",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__internal__hook",
        ":github.com__vmware-tanzu__velero__pkg__apis__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__archive",
        ":github.com__vmware-tanzu__velero__pkg__builder",
        ":github.com__vmware-tanzu__velero__pkg__buildinfo",
        ":github.com__vmware-tanzu__velero__pkg__client",
        ":github.com__vmware-tanzu__velero__pkg__discovery",
        ":github.com__vmware-tanzu__velero__pkg__generated__clientset__versioned__typed__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__generated__listers__velero__v1",
        ":github.com__vmware-tanzu__velero__pkg__kuberesource",
        ":github.com__vmware-tanzu__velero__pkg__label",
        ":github.com__vmware-tanzu__velero__pkg__plugin__framework",
        ":github.com__vmware-tanzu__velero__pkg__plugin__velero",
        ":github.com__vmware-tanzu__velero__pkg__podexec",
        ":github.com__vmware-tanzu__velero__pkg__restic",
        ":github.com__vmware-tanzu__velero__pkg__util__boolptr",
        ":github.com__vmware-tanzu__velero__pkg__util__collections",
        ":github.com__vmware-tanzu__velero__pkg__util__filesystem",
        ":github.com__vmware-tanzu__velero__pkg__util__kube",
        ":github.com__vmware-tanzu__velero__pkg__volume",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apimachinery__pkg__api__equality",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__boolptr",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/boolptr"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__collections",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/collections"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gobwas__glob",
        ":github.com__pkg__errors",
        ":github.com__vmware-tanzu__velero__pkg__discovery",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__sets",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__exec",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/exec"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__filesystem",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/filesystem"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__kube",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/kube"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":k8s.io__api__core__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__listers__core__v1",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__util__logging",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/util/logging"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":github.com__vmware-tanzu__velero__pkg__cmd__util__flag",
    ],
)

go_module(
    name = "github.com__vmware-tanzu__velero__pkg__volume",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["pkg/volume"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware-tanzu__velero__third_party__kubernetes__pkg__kubectl__cmd__util",
    download = ":_github.com__vmware-tanzu__velero#download",
    install = ["third_party/kubernetes/pkg/kubectl/cmd/util"],
    module = "github.com/vmware-tanzu/velero",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__sirupsen__logrus",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_mod_download(
    name = "github.com__vmware__govmomi",
    _tag = "download",
    module = "github.com/vmware/govmomi",
    version = "v0.22.0",
)

go_module(
    name = "github.com__vmware__govmomi",
    download = ":_github.com__vmware__govmomi#download",
    install = ["."],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__session",
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__find",
    download = ":_github.com__vmware__govmomi#download",
    install = ["find"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__list",
        ":github.com__vmware__govmomi__object",
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__list",
    download = ":_github.com__vmware__govmomi#download",
    install = ["list"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__nfc",
    download = ":_github.com__vmware__govmomi#download",
    install = ["nfc"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__progress",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__object",
    download = ":_github.com__vmware__govmomi#download",
    install = ["object"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__nfc",
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__session",
        ":github.com__vmware__govmomi__task",
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__progress",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__property",
    download = ":_github.com__vmware__govmomi#download",
    install = ["property"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__session",
    download = ":_github.com__vmware__govmomi#download",
    install = ["session"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__vim25",
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__mo",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__task",
    download = ":_github.com__vmware__govmomi#download",
    install = ["task"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__property",
        ":github.com__vmware__govmomi__vim25__progress",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__vim25",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__debug",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/debug"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__methods",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/methods"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__mo",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/mo"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__vim25__methods",
        ":github.com__vmware__govmomi__vim25__soap",
        ":github.com__vmware__govmomi__vim25__types",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__progress",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/progress"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__soap",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/soap"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__vmware__govmomi__vim25__debug",
        ":github.com__vmware__govmomi__vim25__progress",
        ":github.com__vmware__govmomi__vim25__types",
        ":github.com__vmware__govmomi__vim25__xml",
    ],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__types",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/types"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "github.com__vmware__govmomi__vim25__xml",
    download = ":_github.com__vmware__govmomi#download",
    install = ["vim25/xml"],
    module = "github.com/vmware/govmomi",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__wayneashleyberry__terminal-dimensions",
    _tag = "download",
    module = "github.com/wayneashleyberry/terminal-dimensions",
    version = "v1.0.0",
)

go_module(
    name = "github.com__wayneashleyberry__terminal-dimensions",
    download = ":_github.com__wayneashleyberry__terminal-dimensions#download",
    install = ["."],
    module = "github.com/wayneashleyberry/terminal-dimensions",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonpointer",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonpointer",
    version = "v0.0.0-20180127040702-4e3ac2762d5f",
)

go_module(
    name = "github.com__xeipuuv__gojsonpointer",
    download = ":_github.com__xeipuuv__gojsonpointer#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonpointer",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonreference",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonreference",
    version = "v0.0.0-20180127040603-bd5ef7bd5415",
)

go_module(
    name = "github.com__xeipuuv__gojsonreference",
    download = ":_github.com__xeipuuv__gojsonreference#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonreference",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonpointer"],
)

go_mod_download(
    name = "github.com__xeipuuv__gojsonschema",
    _tag = "download",
    module = "github.com/xeipuuv/gojsonschema",
    version = "v1.2.0",
)

go_module(
    name = "github.com__xeipuuv__gojsonschema",
    download = ":_github.com__xeipuuv__gojsonschema#download",
    install = ["."],
    module = "github.com/xeipuuv/gojsonschema",
    visibility = ["PUBLIC"],
    deps = [":github.com__xeipuuv__gojsonreference"],
)

go_mod_download(
    name = "github.com__xlab__treeprint",
    _tag = "download",
    module = "github.com/xlab/treeprint",
    version = "v0.0.0-20181112141820-a009c3971eca",
)

go_module(
    name = "github.com__xlab__treeprint",
    download = ":_github.com__xlab__treeprint#download",
    install = ["."],
    module = "github.com/xlab/treeprint",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.opencensus.io",
    _tag = "download",
    module = "go.opencensus.io",
    version = "v0.23.0",
)

go_module(
    name = "go.opencensus.io",
    download = ":_go.opencensus.io#download",
    install = ["."],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__internal",
    download = ":_go.opencensus.io#download",
    install = ["internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io"],
)

go_module(
    name = "go.opencensus.io__internal__tagencoding",
    download = ":_go.opencensus.io#download",
    install = ["internal/tagencoding"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__metric__metricdata",
    download = ":_go.opencensus.io#download",
    install = ["metric/metricdata"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__resource"],
)

go_module(
    name = "go.opencensus.io__metric__metricproducer",
    download = ":_go.opencensus.io#download",
    install = ["metric/metricproducer"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__metric__metricdata"],
)

go_module(
    name = "go.opencensus.io__plugin__ocgrpc",
    download = ":_go.opencensus.io#download",
    install = ["plugin/ocgrpc"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__view",
        ":go.opencensus.io__tag",
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "go.opencensus.io__plugin__ochttp",
    download = ":_go.opencensus.io#download",
    install = ["plugin/ochttp"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__plugin__ochttp__propagation__b3",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__view",
        ":go.opencensus.io__tag",
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
    ],
)

go_module(
    name = "go.opencensus.io__plugin__ochttp__propagation__b3",
    download = ":_go.opencensus.io#download",
    install = ["plugin/ochttp/propagation/b3"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
    ],
)

go_module(
    name = "go.opencensus.io__resource",
    download = ":_go.opencensus.io#download",
    install = ["resource"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__stats",
    download = ":_go.opencensus.io#download",
    install = ["stats"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__stats__internal",
        ":go.opencensus.io__tag",
    ],
)

go_module(
    name = "go.opencensus.io__stats__internal",
    download = ":_go.opencensus.io#download",
    install = ["stats/internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__tag"],
)

go_module(
    name = "go.opencensus.io__stats__view",
    download = ":_go.opencensus.io#download",
    install = ["stats/view"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__internal__tagencoding",
        ":go.opencensus.io__metric__metricdata",
        ":go.opencensus.io__metric__metricproducer",
        ":go.opencensus.io__resource",
        ":go.opencensus.io__stats",
        ":go.opencensus.io__stats__internal",
        ":go.opencensus.io__tag",
    ],
)

go_module(
    name = "go.opencensus.io__tag",
    download = ":_go.opencensus.io#download",
    install = ["tag"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__trace",
    download = ":_go.opencensus.io#download",
    install = ["trace"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__groupcache__lru",
        ":go.opencensus.io__internal",
        ":go.opencensus.io__trace__internal",
        ":go.opencensus.io__trace__tracestate",
    ],
)

go_module(
    name = "go.opencensus.io__trace__internal",
    download = ":_go.opencensus.io#download",
    install = ["trace/internal"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.opencensus.io__trace__propagation",
    download = ":_go.opencensus.io#download",
    install = ["trace/propagation"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [":go.opencensus.io__trace"],
)

go_module(
    name = "go.opencensus.io__trace__tracestate",
    download = ":_go.opencensus.io#download",
    install = ["trace/tracestate"],
    module = "go.opencensus.io",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.starlark.net",
    _tag = "download",
    module = "go.starlark.net",
    version = "v0.0.0-20200306205701-8dd3e2ee1dd5",
)

go_module(
    name = "go.starlark.net__internal__compile",
    download = ":_go.starlark.net#download",
    install = ["internal/compile"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [
        ":go.starlark.net__resolve",
        ":go.starlark.net__syntax",
    ],
)

go_module(
    name = "go.starlark.net__internal__spell",
    download = ":_go.starlark.net#download",
    install = ["internal/spell"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.starlark.net__resolve",
    download = ":_go.starlark.net#download",
    install = ["resolve"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [
        ":go.starlark.net__internal__spell",
        ":go.starlark.net__syntax",
    ],
)

go_module(
    name = "go.starlark.net__starlark",
    download = ":_go.starlark.net#download",
    install = ["starlark"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [
        ":go.starlark.net__internal__compile",
        ":go.starlark.net__internal__spell",
        ":go.starlark.net__resolve",
        ":go.starlark.net__syntax",
    ],
)

go_module(
    name = "go.starlark.net__starlarkstruct",
    download = ":_go.starlark.net#download",
    install = ["starlarkstruct"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [
        ":go.starlark.net__starlark",
        ":go.starlark.net__syntax",
    ],
)

go_module(
    name = "go.starlark.net__syntax",
    download = ":_go.starlark.net#download",
    install = ["syntax"],
    module = "go.starlark.net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.uber.org__atomic",
    _tag = "download",
    module = "go.uber.org/atomic",
    version = "v1.7.0",
)

go_module(
    name = "go.uber.org__atomic",
    download = ":_go.uber.org__atomic#download",
    install = ["."],
    module = "go.uber.org/atomic",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.uber.org__cadence",
    _tag = "download",
    module = "go.uber.org/cadence",
    version = "v0.19.0",
)

go_module(
    name = "go.uber.org__cadence",
    download = ":_go.uber.org__cadence#download",
    install = ["."],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__cadence__workflow",
    ],
)

go_module(
    name = "go.uber.org__cadence__.gen__go__cadence",
    download = ":_go.uber.org__cadence#download",
    install = [".gen/go/cadence"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__multierr",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
    download = ":_go.uber.org__cadence#download",
    install = [".gen/go/cadence/workflowserviceclient"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__cadence",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__yarpc",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__encoding__thrift",
    ],
)

go_module(
    name = "go.uber.org__cadence__.gen__go__cadence__workflowservicetest",
    download = ":_go.uber.org__cadence#download",
    install = [".gen/go/cadence/workflowservicetest"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__mock__gomock",
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__yarpc",
    ],
)

go_module(
    name = "go.uber.org__cadence__.gen__go__shadower",
    download = ":_go.uber.org__cadence#download",
    install = [".gen/go/shadower"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__multierr",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__cadence__.gen__go__shared",
    download = ":_go.uber.org__cadence#download",
    install = [".gen/go/shared"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__thriftrw__ptr",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__cadence__activity",
    download = ":_go.uber.org__cadence#download",
    install = ["activity"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__tally",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__zap",
    ],
)

go_module(
    name = "go.uber.org__cadence__client",
    download = ":_go.uber.org__cadence#download",
    install = ["client"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence",
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__encoded",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__cadence__workflow",
    ],
)

go_module(
    name = "go.uber.org__cadence__encoded",
    download = ":_go.uber.org__cadence#download",
    install = ["encoded"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__cadence__internal"],
)

go_module(
    name = "go.uber.org__cadence__internal",
    download = ":_go.uber.org__cadence#download",
    install = ["internal"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__apache__thrift__lib__go__thrift",
        ":github.com__cristalhq__jwt__v3",
        ":github.com__facebookgo__clock",
        ":github.com__golang__mock__gomock",
        ":github.com__opentracing__opentracing-go",
        ":github.com__pborman__uuid",
        ":github.com__robfig__cron",
        ":github.com__stretchr__testify__mock",
        ":github.com__uber-go__tally",
        ":go.uber.org__atomic",
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__cadence__workflowservicetest",
        ":go.uber.org__cadence__.gen__go__shadower",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__internal__common",
        ":go.uber.org__cadence__internal__common__auth",
        ":go.uber.org__cadence__internal__common__backoff",
        ":go.uber.org__cadence__internal__common__cache",
        ":go.uber.org__cadence__internal__common__metrics",
        ":go.uber.org__cadence__internal__common__serializer",
        ":go.uber.org__cadence__internal__common__util",
        ":go.uber.org__yarpc",
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
        ":golang.org__x__time__rate",
    ],
)

go_module(
    name = "go.uber.org__cadence__internal__common",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__apache__thrift__lib__go__thrift",
        ":go.uber.org__cadence__.gen__go__shared",
    ],
)

go_module(
    name = "go.uber.org__cadence__internal__common__auth",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/auth"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__yarpc",
    ],
)

go_module(
    name = "go.uber.org__cadence__internal__common__backoff",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/backoff"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__cadence__internal__common__cache",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/cache"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__cadence__internal__common__metrics",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/metrics"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__tally",
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__yarpc",
    ],
)

go_module(
    name = "go.uber.org__cadence__internal__common__serializer",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/serializer"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__thriftrw__protocol",
        ":go.uber.org__thriftrw__wire",
    ],
)

go_module(
    name = "go.uber.org__cadence__internal__common__util",
    download = ":_go.uber.org__cadence#download",
    install = ["internal/common/util"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__cadence__.gen__go__shared"],
)

go_module(
    name = "go.uber.org__cadence__mocks",
    download = ":_go.uber.org__cadence#download",
    install = ["mocks"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__stretchr__testify__mock",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__client",
        ":go.uber.org__cadence__encoded",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__cadence__workflow",
    ],
)

go_module(
    name = "go.uber.org__cadence__testsuite",
    download = ":_go.uber.org__cadence#download",
    install = ["testsuite"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__cadence__internal"],
)

go_module(
    name = "go.uber.org__cadence__worker",
    download = ":_go.uber.org__cadence#download",
    install = ["worker"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__cadence__.gen__go__cadence__workflowserviceclient",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__activity",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__cadence__internal__common__auth",
        ":go.uber.org__cadence__workflow",
        ":go.uber.org__zap",
    ],
)

go_module(
    name = "go.uber.org__cadence__workflow",
    download = ":_go.uber.org__cadence#download",
    install = ["workflow"],
    module = "go.uber.org/cadence",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__tally",
        ":go.uber.org__cadence__.gen__go__shared",
        ":go.uber.org__cadence__encoded",
        ":go.uber.org__cadence__internal",
        ":go.uber.org__zap",
    ],
)

go_mod_download(
    name = "go.uber.org__multierr",
    _tag = "download",
    module = "go.uber.org/multierr",
    version = "v1.6.0",
)

go_module(
    name = "go.uber.org__multierr",
    download = ":_go.uber.org__multierr#download",
    install = ["."],
    module = "go.uber.org/multierr",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__atomic"],
)

go_mod_download(
    name = "go.uber.org__net__metrics",
    _tag = "download",
    module = "go.uber.org/net/metrics",
    version = "v1.3.0",
)

go_module(
    name = "go.uber.org__net__metrics",
    download = ":_go.uber.org__net__metrics#download",
    install = ["."],
    module = "go.uber.org/net/metrics",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promhttp",
        ":github.com__prometheus__client_model__go",
        ":go.uber.org__atomic",
        ":go.uber.org__net__metrics__push",
    ],
)

go_module(
    name = "go.uber.org__net__metrics__bucket",
    download = ":_go.uber.org__net__metrics#download",
    install = ["bucket"],
    module = "go.uber.org/net/metrics",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__net__metrics__push",
    download = ":_go.uber.org__net__metrics#download",
    install = ["push"],
    module = "go.uber.org/net/metrics",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__net__metrics__tallypush",
    download = ":_go.uber.org__net__metrics#download",
    install = ["tallypush"],
    module = "go.uber.org/net/metrics",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__tally",
        ":go.uber.org__net__metrics__push",
    ],
)

go_mod_download(
    name = "go.uber.org__thriftrw",
    _tag = "download",
    module = "go.uber.org/thriftrw",
    version = "v1.25.0",
)

go_module(
    name = "go.uber.org__thriftrw__envelope",
    download = ":_go.uber.org__thriftrw#download",
    install = ["envelope"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__thriftrw__internal__envelope__exception",
        ":go.uber.org__thriftrw__protocol",
        ":go.uber.org__thriftrw__wire",
    ],
)

go_module(
    name = "go.uber.org__thriftrw__internal__envelope__exception",
    download = ":_go.uber.org__thriftrw#download",
    install = ["internal/envelope/exception"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__thriftrw__protocol",
    download = ":_go.uber.org__thriftrw#download",
    install = ["protocol"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__thriftrw__protocol__binary",
        ":go.uber.org__thriftrw__wire",
    ],
)

go_module(
    name = "go.uber.org__thriftrw__protocol__binary",
    download = ":_go.uber.org__thriftrw#download",
    install = ["protocol/binary"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__thriftrw__wire"],
)

go_module(
    name = "go.uber.org__thriftrw__ptr",
    download = ":_go.uber.org__thriftrw#download",
    install = ["ptr"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__thriftrw__thriftreflect",
    download = ":_go.uber.org__thriftrw#download",
    install = ["thriftreflect"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__thriftrw__version",
    download = ":_go.uber.org__thriftrw#download",
    install = ["version"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__thriftrw__wire",
    download = ":_go.uber.org__thriftrw#download",
    install = ["wire"],
    module = "go.uber.org/thriftrw",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.uber.org__yarpc",
    _tag = "download",
    module = "go.uber.org/yarpc",
    version = "v1.55.0",
)

go_module(
    name = "go.uber.org__yarpc",
    download = ":_go.uber.org__yarpc#download",
    install = ["."],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":github.com__uber-go__tally",
        ":github.com__uber__tchannel-go",
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":go.uber.org__net__metrics",
        ":go.uber.org__net__metrics__tallypush",
        ":go.uber.org__thriftrw__version",
        ":go.uber.org__yarpc__api__encoding",
        ":go.uber.org__yarpc__api__middleware",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
        ":go.uber.org__yarpc__internal",
        ":go.uber.org__yarpc__internal__errorsync",
        ":go.uber.org__yarpc__internal__firstoutboundmiddleware",
        ":go.uber.org__yarpc__internal__humanize",
        ":go.uber.org__yarpc__internal__inboundmiddleware",
        ":go.uber.org__yarpc__internal__introspection",
        ":go.uber.org__yarpc__internal__observability",
        ":go.uber.org__yarpc__internal__outboundmiddleware",
        ":go.uber.org__yarpc__internal__request",
        ":go.uber.org__yarpc__pkg__lifecycle",
        ":go.uber.org__yarpc__yarpcerrors",
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "go.uber.org__yarpc__api__backoff",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/backoff"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__api__encoding",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/encoding"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__internal__inboundcall",
        ":go.uber.org__yarpc__yarpcerrors",
    ],
)

go_module(
    name = "go.uber.org__yarpc__api__middleware",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/middleware"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
    ],
)

go_module(
    name = "go.uber.org__yarpc__api__peer",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/peer"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__yarpc__api__transport"],
)

go_module(
    name = "go.uber.org__yarpc__api__transport",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/transport"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":github.com__opentracing__opentracing-go__ext",
        ":github.com__opentracing__opentracing-go__log",
        ":go.uber.org__yarpc__yarpcerrors",
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__yarpc__api__x__introspection",
    download = ":_go.uber.org__yarpc#download",
    install = ["api/x/introspection"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__encoding__thrift",
    download = ":_go.uber.org__yarpc#download",
    install = ["encoding/thrift"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__thriftrw__envelope",
        ":go.uber.org__thriftrw__protocol",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__yarpc",
        ":go.uber.org__yarpc__api__encoding",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__encoding__thrift__internal",
        ":go.uber.org__yarpc__internal__bufferpool",
        ":go.uber.org__yarpc__pkg__encoding",
        ":go.uber.org__yarpc__pkg__errors",
        ":go.uber.org__yarpc__pkg__procedure",
        ":go.uber.org__yarpc__yarpcerrors",
    ],
)

go_module(
    name = "go.uber.org__yarpc__encoding__thrift__internal",
    download = ":_go.uber.org__yarpc#download",
    install = ["encoding/thrift/internal"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__thriftrw__thriftreflect",
        ":go.uber.org__thriftrw__wire",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__multierr"],
)

go_module(
    name = "go.uber.org__yarpc__internal__backoff",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/backoff"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__yarpc__api__backoff",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__bufferpool",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/bufferpool"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__config",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/config"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__mapdecode",
        ":go.uber.org__yarpc__internal__interpolate",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__digester",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/digester"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__errorsync",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/errorsync"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__firstoutboundmiddleware",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/firstoutboundmiddleware"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__middleware",
        ":go.uber.org__yarpc__api__transport",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__humanize",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/humanize"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__inboundcall",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/inboundcall"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__yarpc__api__transport"],
)

go_module(
    name = "go.uber.org__yarpc__internal__inboundmiddleware",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/inboundmiddleware"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__middleware",
        ":go.uber.org__yarpc__api__transport",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__interpolate",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/interpolate"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__introspection",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/introspection"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
        ":go.uber.org__yarpc__pkg__procedure",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__iopool",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/iopool"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__internal__observability",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/observability"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__net__metrics",
        ":go.uber.org__net__metrics__bucket",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__internal__digester",
        ":go.uber.org__yarpc__yarpcerrors",
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__outboundmiddleware",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/outboundmiddleware"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__middleware",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__request",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/request"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
    ],
)

go_module(
    name = "go.uber.org__yarpc__internal__yarpcerrors",
    download = ":_go.uber.org__yarpc#download",
    install = ["internal/yarpcerrors"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__yarpc__yarpcerrors"],
)

go_module(
    name = "go.uber.org__yarpc__peer",
    download = ":_go.uber.org__yarpc#download",
    install = ["peer"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__multierr",
        ":go.uber.org__yarpc__api__peer",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
        ":go.uber.org__yarpc__pkg__lifecycle",
    ],
)

go_module(
    name = "go.uber.org__yarpc__peer__abstractpeer",
    download = ":_go.uber.org__yarpc#download",
    install = ["peer/abstractpeer"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__yarpc__api__peer",
    ],
)

go_module(
    name = "go.uber.org__yarpc__peer__hostport",
    download = ":_go.uber.org__yarpc#download",
    install = ["peer/hostport"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__yarpc__api__peer",
    ],
)

go_module(
    name = "go.uber.org__yarpc__pkg__encoding",
    download = ":_go.uber.org__yarpc#download",
    install = ["pkg/encoding"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc",
        ":go.uber.org__yarpc__api__encoding",
    ],
)

go_module(
    name = "go.uber.org__yarpc__pkg__errors",
    download = ":_go.uber.org__yarpc#download",
    install = ["pkg/errors"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__yarpcerrors",
    ],
)

go_module(
    name = "go.uber.org__yarpc__pkg__lifecycle",
    download = ":_go.uber.org__yarpc#download",
    install = ["pkg/lifecycle"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__yarpc__yarpcerrors",
    ],
)

go_module(
    name = "go.uber.org__yarpc__pkg__procedure",
    download = ":_go.uber.org__yarpc#download",
    install = ["pkg/procedure"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__transport__tchannel",
    download = ":_go.uber.org__yarpc#download",
    install = ["transport/tchannel"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__opentracing__opentracing-go",
        ":github.com__uber__tchannel-go",
        ":go.uber.org__multierr",
        ":go.uber.org__yarpc__api__backoff",
        ":go.uber.org__yarpc__api__peer",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__api__x__introspection",
        ":go.uber.org__yarpc__internal__backoff",
        ":go.uber.org__yarpc__internal__bufferpool",
        ":go.uber.org__yarpc__internal__iopool",
        ":go.uber.org__yarpc__internal__yarpcerrors",
        ":go.uber.org__yarpc__peer",
        ":go.uber.org__yarpc__peer__abstractpeer",
        ":go.uber.org__yarpc__peer__hostport",
        ":go.uber.org__yarpc__pkg__errors",
        ":go.uber.org__yarpc__pkg__lifecycle",
        ":go.uber.org__yarpc__transport__tchannel__internal",
        ":go.uber.org__yarpc__yarpcconfig",
        ":go.uber.org__yarpc__yarpcerrors",
        ":go.uber.org__zap",
        ":golang.org__x__net__context",
    ],
)

go_module(
    name = "go.uber.org__yarpc__transport__tchannel__internal",
    download = ":_go.uber.org__yarpc#download",
    install = ["transport/tchannel/internal"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__yarpc__yarpcconfig",
    download = ":_go.uber.org__yarpc#download",
    install = ["yarpcconfig"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__uber-go__mapdecode",
        ":go.uber.org__multierr",
        ":go.uber.org__yarpc",
        ":go.uber.org__yarpc__api__backoff",
        ":go.uber.org__yarpc__api__peer",
        ":go.uber.org__yarpc__api__transport",
        ":go.uber.org__yarpc__internal__backoff",
        ":go.uber.org__yarpc__internal__config",
        ":go.uber.org__yarpc__internal__interpolate",
        ":go.uber.org__yarpc__peer",
        ":go.uber.org__zap__zapcore",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "go.uber.org__yarpc__yarpcerrors",
    download = ":_go.uber.org__yarpc#download",
    install = ["yarpcerrors"],
    module = "go.uber.org/yarpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "go.uber.org__zap",
    _tag = "download",
    module = "go.uber.org/zap",
    version = "v1.18.1",
)

go_module(
    name = "go.uber.org__zap",
    download = ":_go.uber.org__zap#download",
    install = ["."],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":go.uber.org__zap__internal__bufferpool",
        ":go.uber.org__zap__zapcore",
    ],
)

go_module(
    name = "go.uber.org__zap__buffer",
    download = ":_go.uber.org__zap#download",
    install = ["buffer"],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__zap__internal__bufferpool",
    download = ":_go.uber.org__zap#download",
    install = ["internal/bufferpool"],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [":go.uber.org__zap__buffer"],
)

go_module(
    name = "go.uber.org__zap__internal__color",
    download = ":_go.uber.org__zap#download",
    install = ["internal/color"],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__zap__internal__exit",
    download = ":_go.uber.org__zap#download",
    install = ["internal/exit"],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "go.uber.org__zap__zapcore",
    download = ":_go.uber.org__zap#download",
    install = ["zapcore"],
    module = "go.uber.org/zap",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__atomic",
        ":go.uber.org__multierr",
        ":go.uber.org__zap__buffer",
        ":go.uber.org__zap__internal__bufferpool",
        ":go.uber.org__zap__internal__color",
        ":go.uber.org__zap__internal__exit",
    ],
)

go_mod_download(
    name = "golang.org__x__crypto",
    _tag = "download",
    module = "golang.org/x/crypto",
    version = "v0.0.0-20210220033148-5ea612d1eb83",
)

go_module(
    name = "golang.org__x__crypto__bcrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["bcrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__blowfish"],
)

go_module(
    name = "golang.org__x__crypto__blowfish",
    download = ":_golang.org__x__crypto#download",
    install = ["blowfish"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__cast5",
    download = ":_golang.org__x__crypto#download",
    install = ["cast5"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__chacha20",
    download = ":_golang.org__x__crypto#download",
    install = ["chacha20"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__internal__subtle"],
)

go_module(
    name = "golang.org__x__crypto__curve25519",
    download = ":_golang.org__x__crypto#download",
    install = ["curve25519"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__ed25519",
    download = ":_golang.org__x__crypto#download",
    install = ["ed25519"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__internal__subtle",
    download = ":_golang.org__x__crypto#download",
    install = ["internal/subtle"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__openpgp",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__crypto__openpgp__armor",
        ":golang.org__x__crypto__openpgp__errors",
        ":golang.org__x__crypto__openpgp__packet",
        ":golang.org__x__crypto__openpgp__s2k",
    ],
)

go_module(
    name = "golang.org__x__crypto__openpgp__armor",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/armor"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__openpgp__errors"],
)

go_module(
    name = "golang.org__x__crypto__openpgp__clearsign",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/clearsign"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__crypto__openpgp__armor",
        ":golang.org__x__crypto__openpgp__errors",
        ":golang.org__x__crypto__openpgp__packet",
    ],
)

go_module(
    name = "golang.org__x__crypto__openpgp__elgamal",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/elgamal"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__openpgp__errors",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/errors"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__openpgp__packet",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/packet"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__crypto__cast5",
        ":golang.org__x__crypto__openpgp__elgamal",
        ":golang.org__x__crypto__openpgp__errors",
        ":golang.org__x__crypto__openpgp__s2k",
    ],
)

go_module(
    name = "golang.org__x__crypto__openpgp__s2k",
    download = ":_golang.org__x__crypto#download",
    install = ["openpgp/s2k"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__openpgp__errors"],
)

go_module(
    name = "golang.org__x__crypto__pbkdf2",
    download = ":_golang.org__x__crypto#download",
    install = ["pbkdf2"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__pkcs12",
    download = ":_golang.org__x__crypto#download",
    install = ["pkcs12"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__pkcs12__internal__rc2"],
)

go_module(
    name = "golang.org__x__crypto__pkcs12__internal__rc2",
    download = ":_golang.org__x__crypto#download",
    install = ["pkcs12/internal/rc2"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__poly1305",
    download = ":_golang.org__x__crypto#download",
    install = ["poly1305"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__crypto__scrypt",
    download = ":_golang.org__x__crypto#download",
    install = ["scrypt"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__pbkdf2"],
)

go_module(
    name = "golang.org__x__crypto__ssh",
    download = ":_golang.org__x__crypto#download",
    install = ["ssh"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__crypto__chacha20",
        ":golang.org__x__crypto__curve25519",
        ":golang.org__x__crypto__ed25519",
        ":golang.org__x__crypto__poly1305",
        ":golang.org__x__crypto__ssh__internal__bcrypt_pbkdf",
    ],
)

go_module(
    name = "golang.org__x__crypto__ssh__internal__bcrypt_pbkdf",
    download = ":_golang.org__x__crypto#download",
    install = ["ssh/internal/bcrypt_pbkdf"],
    module = "golang.org/x/crypto",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__crypto__blowfish"],
)

go_mod_download(
    name = "golang.org__x__net",
    _tag = "download",
    module = "golang.org/x/net",
    version = "v0.0.0-20211209124913-491a49abca63",
)

go_module(
    name = "golang.org__x__net__bpf",
    download = ":_golang.org__x__net#download",
    install = ["bpf"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__context",
    download = ":_golang.org__x__net#download",
    install = ["context"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__context__ctxhttp",
    download = ":_golang.org__x__net#download",
    install = ["context/ctxhttp"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__html",
    download = ":_golang.org__x__net#download",
    install = ["html"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__html__atom"],
)

go_module(
    name = "golang.org__x__net__html__atom",
    download = ":_golang.org__x__net#download",
    install = ["html/atom"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__html__charset",
    download = ":_golang.org__x__net#download",
    install = ["html/charset"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__html",
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__charmap",
        ":golang.org__x__text__encoding__htmlindex",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__net__http__httpguts",
    download = ":_golang.org__x__net#download",
    install = ["http/httpguts"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__idna"],
)

go_module(
    name = "golang.org__x__net__http2",
    download = ":_golang.org__x__net#download",
    install = ["http2"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2__hpack",
        ":golang.org__x__net__http__httpguts",
        ":golang.org__x__net__idna",
    ],
)

go_module(
    name = "golang.org__x__net__http2__hpack",
    download = ":_golang.org__x__net#download",
    install = ["http2/hpack"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__idna",
    download = ":_golang.org__x__net#download",
    install = ["idna"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__secure__bidirule",
        ":golang.org__x__text__unicode__bidi",
        ":golang.org__x__text__unicode__norm",
    ],
)

go_module(
    name = "golang.org__x__net__internal__iana",
    download = ":_golang.org__x__net#download",
    install = ["internal/iana"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__internal__socket",
    download = ":_golang.org__x__net#download",
    install = ["internal/socket"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_module(
    name = "golang.org__x__net__internal__timeseries",
    download = ":_golang.org__x__net#download",
    install = ["internal/timeseries"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__ipv4",
    download = ":_golang.org__x__net#download",
    install = ["ipv4"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__bpf",
        ":golang.org__x__net__internal__iana",
        ":golang.org__x__net__internal__socket",
        ":golang.org__x__sys__unix",
    ],
)

go_module(
    name = "golang.org__x__net__ipv6",
    download = ":_golang.org__x__net#download",
    install = ["ipv6"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__bpf",
        ":golang.org__x__net__internal__iana",
        ":golang.org__x__net__internal__socket",
        ":golang.org__x__sys__unix",
    ],
)

go_module(
    name = "golang.org__x__net__publicsuffix",
    download = ":_golang.org__x__net#download",
    install = ["publicsuffix"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__net__trace",
    download = ":_golang.org__x__net#download",
    install = ["trace"],
    module = "golang.org/x/net",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__internal__timeseries"],
)

go_mod_download(
    name = "golang.org__x__oauth2",
    _tag = "download",
    module = "golang.org/x/oauth2",
    version = "v0.0.0-20210402161424-2e8d93401602",
)

go_module(
    name = "golang.org__x__oauth2",
    download = ":_golang.org__x__oauth2#download",
    install = ["."],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__oauth2__internal"],
)

go_module(
    name = "golang.org__x__oauth2__google",
    download = ":_golang.org__x__oauth2#download",
    install = ["google"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [
        ":cloud.google.com__go__compute__metadata",
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__google__internal__externalaccount",
        ":golang.org__x__oauth2__internal",
        ":golang.org__x__oauth2__jws",
        ":golang.org__x__oauth2__jwt",
    ],
)

go_module(
    name = "golang.org__x__oauth2__google__internal__externalaccount",
    download = ":_golang.org__x__oauth2#download",
    install = ["google/internal/externalaccount"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__oauth2"],
)

go_module(
    name = "golang.org__x__oauth2__internal",
    download = ":_golang.org__x__oauth2#download",
    install = ["internal"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__context__ctxhttp"],
)

go_module(
    name = "golang.org__x__oauth2__jws",
    download = ":_golang.org__x__oauth2#download",
    install = ["jws"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__oauth2__jwt",
    download = ":_golang.org__x__oauth2#download",
    install = ["jwt"],
    module = "golang.org/x/oauth2",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__internal",
        ":golang.org__x__oauth2__jws",
    ],
)

go_mod_download(
    name = "golang.org__x__sync",
    _tag = "download",
    module = "golang.org/x/sync",
    version = "v0.0.0-20210220032951-036812b2e83c",
)

go_module(
    name = "golang.org__x__sync__errgroup",
    download = ":_golang.org__x__sync#download",
    install = ["errgroup"],
    module = "golang.org/x/sync",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__sync__semaphore",
    download = ":_golang.org__x__sync#download",
    install = ["semaphore"],
    module = "golang.org/x/sync",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "golang.org__x__sys",
    _tag = "download",
    module = "golang.org/x/sys",
    version = "v0.0.0-20210630005230-0f9fa26af87c",
)

go_module(
    name = "golang.org__x__sys__execabs",
    download = ":_golang.org__x__sys#download",
    install = ["execabs"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__sys__internal__unsafeheader",
    download = ":_golang.org__x__sys#download",
    install = ["internal/unsafeheader"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__sys__unix",
    download = ":_golang.org__x__sys#download",
    install = ["unix"],
    module = "golang.org/x/sys",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__internal__unsafeheader"],
)

go_mod_download(
    name = "golang.org__x__term",
    _tag = "download",
    module = "golang.org/x/term",
    version = "v0.0.0-20210220032956-6a3ed077a48d",
)

go_module(
    name = "golang.org__x__term",
    download = ":_golang.org__x__term#download",
    install = ["."],
    module = "golang.org/x/term",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__sys__unix"],
)

go_mod_download(
    name = "golang.org__x__text",
    _tag = "download",
    module = "golang.org/x/text",
    version = "v0.3.6",
)

go_module(
    name = "golang.org__x__text__encoding",
    download = ":_golang.org__x__text#download",
    install = ["encoding"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__charmap",
    download = ":_golang.org__x__text#download",
    install = ["encoding/charmap"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__htmlindex",
    download = ":_golang.org__x__text#download",
    install = ["encoding/htmlindex"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__charmap",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__encoding__japanese",
        ":golang.org__x__text__encoding__korean",
        ":golang.org__x__text__encoding__simplifiedchinese",
        ":golang.org__x__text__encoding__traditionalchinese",
        ":golang.org__x__text__encoding__unicode",
        ":golang.org__x__text__language",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__internal",
    download = ":_golang.org__x__text#download",
    install = ["encoding/internal"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__internal__identifier",
    download = ":_golang.org__x__text#download",
    install = ["encoding/internal/identifier"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__encoding__japanese",
    download = ":_golang.org__x__text#download",
    install = ["encoding/japanese"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__korean",
    download = ":_golang.org__x__text#download",
    install = ["encoding/korean"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__simplifiedchinese",
    download = ":_golang.org__x__text#download",
    install = ["encoding/simplifiedchinese"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__traditionalchinese",
    download = ":_golang.org__x__text#download",
    install = ["encoding/traditionalchinese"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__encoding__unicode",
    download = ":_golang.org__x__text#download",
    install = ["encoding/unicode"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__encoding",
        ":golang.org__x__text__encoding__internal",
        ":golang.org__x__text__encoding__internal__identifier",
        ":golang.org__x__text__internal__utf8internal",
        ":golang.org__x__text__runes",
        ":golang.org__x__text__transform",
    ],
)

go_module(
    name = "golang.org__x__text__internal__language",
    download = ":_golang.org__x__text#download",
    install = ["internal/language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__tag"],
)

go_module(
    name = "golang.org__x__text__internal__language__compact",
    download = ":_golang.org__x__text#download",
    install = ["internal/language/compact"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__internal__language"],
)

go_module(
    name = "golang.org__x__text__internal__tag",
    download = ":_golang.org__x__text#download",
    install = ["internal/tag"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__internal__utf8internal",
    download = ":_golang.org__x__text#download",
    install = ["internal/utf8internal"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__language",
    download = ":_golang.org__x__text#download",
    install = ["language"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__internal__language",
        ":golang.org__x__text__internal__language__compact",
    ],
)

go_module(
    name = "golang.org__x__text__runes",
    download = ":_golang.org__x__text#download",
    install = ["runes"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_module(
    name = "golang.org__x__text__secure__bidirule",
    download = ":_golang.org__x__text#download",
    install = ["secure/bidirule"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__text__transform",
        ":golang.org__x__text__unicode__bidi",
    ],
)

go_module(
    name = "golang.org__x__text__transform",
    download = ":_golang.org__x__text#download",
    install = ["transform"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__bidi",
    download = ":_golang.org__x__text#download",
    install = ["unicode/bidi"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "golang.org__x__text__unicode__norm",
    download = ":_golang.org__x__text#download",
    install = ["unicode/norm"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_module(
    name = "golang.org__x__text__width",
    download = ":_golang.org__x__text#download",
    install = ["width"],
    module = "golang.org/x/text",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__text__transform"],
)

go_mod_download(
    name = "golang.org__x__time",
    _tag = "download",
    module = "golang.org/x/time",
    version = "v0.0.0-20210723032227-1f47c861a9ac",
)

go_module(
    name = "golang.org__x__time__rate",
    download = ":_golang.org__x__time#download",
    install = ["rate"],
    module = "golang.org/x/time",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gomodules.xyz__jsonpatch__v2",
    _tag = "download",
    module = "gomodules.xyz/jsonpatch/v2",
    version = "v2.2.0",
)

go_module(
    name = "gomodules.xyz__jsonpatch__v2",
    download = ":_gomodules.xyz__jsonpatch__v2#download",
    install = ["."],
    module = "gomodules.xyz/jsonpatch/v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "google.golang.org__api",
    _tag = "download",
    module = "google.golang.org/api",
    version = "v0.44.0",
)

go_module(
    name = "google.golang.org__api__cloudresourcemanager__v1",
    download = ":_google.golang.org__api#download",
    install = ["cloudresourcemanager/v1"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__internal__gensupport",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__http",
    ],
)

go_module(
    name = "google.golang.org__api__compute__v1",
    download = ":_google.golang.org__api#download",
    install = ["compute/v1"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__internal__gensupport",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__http",
    ],
)

go_module(
    name = "google.golang.org__api__container__v1",
    download = ":_google.golang.org__api#download",
    install = ["container/v1"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__internal__gensupport",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__http",
    ],
)

go_module(
    name = "google.golang.org__api__googleapi",
    download = ":_google.golang.org__api#download",
    install = ["googleapi"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__api__internal__third_party__uritemplates"],
)

go_module(
    name = "google.golang.org__api__googleapi__transport",
    download = ":_google.golang.org__api#download",
    install = ["googleapi/transport"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__api__internal",
    download = ":_google.golang.org__api#download",
    install = ["internal"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__google",
        ":google.golang.org__api__internal__impersonate",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "google.golang.org__api__internal__gensupport",
    download = ":_google.golang.org__api#download",
    install = ["internal/gensupport"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gax-go__v2",
        ":google.golang.org__api__googleapi",
    ],
)

go_module(
    name = "google.golang.org__api__internal__impersonate",
    download = ":_google.golang.org__api#download",
    install = ["internal/impersonate"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__oauth2"],
)

go_module(
    name = "google.golang.org__api__internal__third_party__uritemplates",
    download = ":_google.golang.org__api#download",
    install = ["internal/third_party/uritemplates"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__api__iterator",
    download = ":_google.golang.org__api#download",
    install = ["iterator"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__api__option",
    download = ":_google.golang.org__api#download",
    install = ["option"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__google",
        ":google.golang.org__api__internal",
        ":google.golang.org__api__internal__impersonate",
        ":google.golang.org__grpc",
    ],
)

go_module(
    name = "google.golang.org__api__option__internaloption",
    download = ":_google.golang.org__api#download",
    install = ["option/internaloption"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__internal",
        ":google.golang.org__api__option",
    ],
)

go_module(
    name = "google.golang.org__api__serviceusage__v1",
    download = ":_google.golang.org__api#download",
    install = ["serviceusage/v1"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__internal__gensupport",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__http",
    ],
)

go_module(
    name = "google.golang.org__api__storage__v1",
    download = ":_google.golang.org__api#download",
    install = ["storage/v1"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__googleapi",
        ":google.golang.org__api__internal__gensupport",
        ":google.golang.org__api__option",
        ":google.golang.org__api__option__internaloption",
        ":google.golang.org__api__transport__http",
    ],
)

go_module(
    name = "google.golang.org__api__transport__cert",
    download = ":_google.golang.org__api#download",
    install = ["transport/cert"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__api__transport__grpc",
    download = ":_google.golang.org__api#download",
    install = ["transport/grpc"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":cloud.google.com__go__compute__metadata",
        ":go.opencensus.io__plugin__ocgrpc",
        ":golang.org__x__oauth2",
        ":google.golang.org__api__internal",
        ":google.golang.org__api__option",
        ":google.golang.org__api__transport__internal__dca",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__balancer__grpclb",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__google",
        ":google.golang.org__grpc__credentials__oauth",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__api__transport__http",
    download = ":_google.golang.org__api#download",
    install = ["transport/http"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__plugin__ochttp",
        ":golang.org__x__oauth2",
        ":google.golang.org__api__googleapi__transport",
        ":google.golang.org__api__internal",
        ":google.golang.org__api__option",
        ":google.golang.org__api__transport__cert",
        ":google.golang.org__api__transport__http__internal__propagation",
        ":google.golang.org__api__transport__internal__dca",
    ],
)

go_module(
    name = "google.golang.org__api__transport__http__internal__propagation",
    download = ":_google.golang.org__api#download",
    install = ["transport/http/internal/propagation"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":go.opencensus.io__trace",
        ":go.opencensus.io__trace__propagation",
    ],
)

go_module(
    name = "google.golang.org__api__transport__internal__dca",
    download = ":_google.golang.org__api#download",
    install = ["transport/internal/dca"],
    module = "google.golang.org/api",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__api__internal",
        ":google.golang.org__api__transport__cert",
    ],
)

go_mod_download(
    name = "google.golang.org__genproto",
    _tag = "download",
    module = "google.golang.org/genproto",
    version = "v0.0.0-20210602131652-f16073e35f0c",
)

go_module(
    name = "google.golang.org__genproto__googleapis__api__annotations",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/api/annotations"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__descriptorpb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__iam__credentials__v1",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/iam/credentials/v1"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__genproto__googleapis__api__annotations",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__durationpb",
        ":google.golang.org__protobuf__types__known__timestamppb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__iam__v1",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/iam/v1"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__genproto__googleapis__api__annotations",
        ":google.golang.org__genproto__googleapis__type__expr",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__code",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/rpc/code"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__rpc__status",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/rpc/status"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
        ":google.golang.org__protobuf__types__known__anypb",
    ],
)

go_module(
    name = "google.golang.org__genproto__googleapis__type__expr",
    download = ":_google.golang.org__genproto#download",
    install = ["googleapis/type/expr"],
    module = "google.golang.org/genproto",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_mod_download(
    name = "google.golang.org__grpc",
    _tag = "download",
    module = "google.golang.org/grpc",
    version = "v1.27.1",
)

go_module(
    name = "google.golang.org__grpc",
    download = ":_google.golang.org__grpc#download",
    install = ["."],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__trace",
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__balancer__roundrobin",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__encoding",
        ":google.golang.org__grpc__encoding__proto",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__balancerload",
        ":google.golang.org__grpc__internal__binarylog",
        ":google.golang.org__grpc__internal__buffer",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__grpcsync",
        ":google.golang.org__grpc__internal__resolver__dns",
        ":google.golang.org__grpc__internal__resolver__passthrough",
        ":google.golang.org__grpc__internal__transport",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__naming",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__attributes",
    download = ":_google.golang.org__grpc#download",
    install = ["attributes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__balancer",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__base",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/base"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__resolver",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__grpclb",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/grpclb"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":github.com__google__go-cmp__cmp",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__grpclb__grpc_lb_v1",
        ":google.golang.org__grpc__balancer__roundrobin",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__resolver__dns",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__grpclb__grpc_lb_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/grpclb/grpc_lb_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__balancer__roundrobin",
    download = ":_google.golang.org__grpc#download",
    install = ["balancer/roundrobin"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__balancer",
        ":google.golang.org__grpc__balancer__base",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__binarylog__grpc_binarylog_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["binarylog/grpc_binarylog_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes__duration",
        ":github.com__golang__protobuf__ptypes__timestamp",
    ],
)

go_module(
    name = "google.golang.org__grpc__codes",
    download = ":_google.golang.org__grpc#download",
    install = ["codes"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__connectivity",
    download = ":_google.golang.org__grpc#download",
    install = ["connectivity"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__credentials",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__credentials__internal",
        ":google.golang.org__grpc__internal",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__alts__internal",
        ":google.golang.org__grpc__credentials__alts__internal__handshaker",
        ":google.golang.org__grpc__credentials__alts__internal__handshaker__service",
        ":google.golang.org__grpc__credentials__alts__internal__proto__grpc_gcp",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal__authinfo",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal/authinfo"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__alts__internal__proto__grpc_gcp",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal__conn",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal/conn"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials__alts__internal"],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal__handshaker",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal/handshaker"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__alts__internal",
        ":google.golang.org__grpc__credentials__alts__internal__authinfo",
        ":google.golang.org__grpc__credentials__alts__internal__conn",
        ":google.golang.org__grpc__credentials__alts__internal__proto__grpc_gcp",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal__handshaker__service",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal/handshaker/service"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc"],
)

go_module(
    name = "google.golang.org__grpc__credentials__alts__internal__proto__grpc_gcp",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/alts/internal/proto/grpc_gcp"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__google",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/google"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__credentials__alts",
        ":google.golang.org__grpc__credentials__oauth",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
    ],
)

go_module(
    name = "google.golang.org__grpc__credentials__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__credentials__oauth",
    download = ":_google.golang.org__grpc#download",
    install = ["credentials/oauth"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__google",
        ":golang.org__x__oauth2__jwt",
        ":google.golang.org__grpc__credentials",
    ],
)

go_module(
    name = "google.golang.org__grpc__encoding",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__encoding__proto",
    download = ":_google.golang.org__grpc#download",
    install = ["encoding/proto"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc__encoding",
    ],
)

go_module(
    name = "google.golang.org__grpc__grpclog",
    download = ":_google.golang.org__grpc#download",
    install = ["grpclog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__health",
    download = ":_google.golang.org__grpc#download",
    install = ["health"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__health__grpc_health_v1",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__backoff",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__health__grpc_health_v1",
    download = ":_google.golang.org__grpc#download",
    install = ["health/grpc_health_v1"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":google.golang.org__grpc",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal",
    download = ":_google.golang.org__grpc#download",
    install = ["internal"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__connectivity"],
)

go_module(
    name = "google.golang.org__grpc__internal__backoff",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/backoff"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__backoff",
        ":google.golang.org__grpc__internal__grpcrand",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__balancerload",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/balancerload"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__internal__binarylog",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/binarylog"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__grpc__binarylog__grpc_binarylog_v1",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__status",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__buffer",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/buffer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__channelz",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/channelz"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__connectivity",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
    ] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__envconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/envconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcrand",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcrand"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__grpcsync",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/grpcsync"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__dns",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/dns"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal__envconfig",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__resolver",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__internal__resolver__passthrough",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/resolver/passthrough"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__resolver"],
)

go_module(
    name = "google.golang.org__grpc__internal__syscall",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/syscall"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"] + select({
        ":__config_darwin_amd64": [],
        ":__config_darwin_arm64": [],
        ":__config_linux_amd64": [":golang.org__x__sys__unix"],
        "default": [],
    }),
)

go_module(
    name = "google.golang.org__grpc__internal__transport",
    download = ":_google.golang.org__grpc#download",
    install = ["internal/transport"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":golang.org__x__net__http2",
        ":golang.org__x__net__http2__hpack",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__grpclog",
        ":google.golang.org__grpc__internal",
        ":google.golang.org__grpc__internal__channelz",
        ":google.golang.org__grpc__internal__grpcrand",
        ":google.golang.org__grpc__internal__syscall",
        ":google.golang.org__grpc__keepalive",
        ":google.golang.org__grpc__metadata",
        ":google.golang.org__grpc__peer",
        ":google.golang.org__grpc__stats",
        ":google.golang.org__grpc__status",
        ":google.golang.org__grpc__tap",
    ],
)

go_module(
    name = "google.golang.org__grpc__keepalive",
    download = ":_google.golang.org__grpc#download",
    install = ["keepalive"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__metadata",
    download = ":_google.golang.org__grpc#download",
    install = ["metadata"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__naming",
    download = ":_google.golang.org__grpc#download",
    install = ["naming"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__grpclog"],
)

go_module(
    name = "google.golang.org__grpc__peer",
    download = ":_google.golang.org__grpc#download",
    install = ["peer"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__credentials"],
)

go_module(
    name = "google.golang.org__grpc__resolver",
    download = ":_google.golang.org__grpc#download",
    install = ["resolver"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__grpc__attributes",
        ":google.golang.org__grpc__credentials",
        ":google.golang.org__grpc__serviceconfig",
    ],
)

go_module(
    name = "google.golang.org__grpc__serviceconfig",
    download = ":_google.golang.org__grpc#download",
    install = ["serviceconfig"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__grpc__stats",
    download = ":_google.golang.org__grpc#download",
    install = ["stats"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__grpc__metadata"],
)

go_module(
    name = "google.golang.org__grpc__status",
    download = ":_google.golang.org__grpc#download",
    install = ["status"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__golang__protobuf__ptypes",
        ":google.golang.org__genproto__googleapis__rpc__status",
        ":google.golang.org__grpc__codes",
        ":google.golang.org__grpc__internal",
    ],
)

go_module(
    name = "google.golang.org__grpc__tap",
    download = ":_google.golang.org__grpc#download",
    install = ["tap"],
    module = "google.golang.org/grpc",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "google.golang.org__protobuf",
    _tag = "download",
    module = "google.golang.org/protobuf",
    version = "v1.26.0",
)

go_module(
    name = "google.golang.org__protobuf__encoding__prototext",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/prototext"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__set",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__encoding__protowire",
    download = ":_google.golang.org__protobuf#download",
    install = ["encoding/protowire"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__errors"],
)

go_module(
    name = "google.golang.org__protobuf__internal__descfmt",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descfmt"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__descopts",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/descopts"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__detrand",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/detrand"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__defval",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/defval"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__text",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__messageset",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/messageset"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__tag",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/tag"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__encoding__text",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/encoding/text"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__strs",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__errors",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/errors"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__internal__detrand"],
)

go_module(
    name = "google.golang.org__protobuf__internal__filedesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filedesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descfmt",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__filetype",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/filetype"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__flags",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/flags"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__genid",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/genid"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__impl",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/impl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__prototext",
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__descopts",
        ":google.golang.org__protobuf__internal__detrand",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__encoding__tag",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__order",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/order"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [":google.golang.org__protobuf__reflect__protoreflect"],
)

go_module(
    name = "google.golang.org__protobuf__internal__pragma",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/pragma"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__set",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/set"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__internal__strs",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/strs"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__internal__version",
    download = ":_google.golang.org__protobuf#download",
    install = ["internal/version"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "google.golang.org__protobuf__proto",
    download = ":_google.golang.org__protobuf#download",
    install = ["proto"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__order",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoiface",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protodesc",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protodesc"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__encoding__defval",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__internal__genid",
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__internal__strs",
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__types__descriptorpb",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoreflect",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoreflect"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__encoding__protowire",
        ":google.golang.org__protobuf__internal__pragma",
    ],
)

go_module(
    name = "google.golang.org__protobuf__reflect__protoregistry",
    download = ":_google.golang.org__protobuf#download",
    install = ["reflect/protoregistry"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__encoding__messageset",
        ":google.golang.org__protobuf__internal__errors",
        ":google.golang.org__protobuf__internal__flags",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoiface",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoiface"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__pragma",
        ":google.golang.org__protobuf__reflect__protoreflect",
    ],
)

go_module(
    name = "google.golang.org__protobuf__runtime__protoimpl",
    download = ":_google.golang.org__protobuf#download",
    install = ["runtime/protoimpl"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__internal__filedesc",
        ":google.golang.org__protobuf__internal__filetype",
        ":google.golang.org__protobuf__internal__impl",
        ":google.golang.org__protobuf__internal__version",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__descriptorpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/descriptorpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoiface",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__anypb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/anypb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__proto",
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__reflect__protoregistry",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__durationpb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/durationpb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_module(
    name = "google.golang.org__protobuf__types__known__timestamppb",
    download = ":_google.golang.org__protobuf#download",
    install = ["types/known/timestamppb"],
    module = "google.golang.org/protobuf",
    visibility = ["PUBLIC"],
    deps = [
        ":google.golang.org__protobuf__reflect__protoreflect",
        ":google.golang.org__protobuf__runtime__protoimpl",
    ],
)

go_mod_download(
    name = "gopkg.in__gorp.v1",
    _tag = "download",
    module = "gopkg.in/gorp.v1",
    version = "v1.7.2",
)

go_module(
    name = "gopkg.in__gorp.v1",
    download = ":_gopkg.in__gorp.v1#download",
    install = ["."],
    module = "gopkg.in/gorp.v1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__inf.v0",
    _tag = "download",
    module = "gopkg.in/inf.v0",
    version = "v0.9.1",
)

go_module(
    name = "gopkg.in__inf.v0",
    download = ":_gopkg.in__inf.v0#download",
    install = ["."],
    module = "gopkg.in/inf.v0",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__ini.v1",
    _tag = "download",
    module = "gopkg.in/ini.v1",
    version = "v1.62.0",
)

go_module(
    name = "gopkg.in__ini.v1",
    download = ":_gopkg.in__ini.v1#download",
    install = ["."],
    module = "gopkg.in/ini.v1",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__resty.v1",
    _tag = "download",
    module = "gopkg.in/resty.v1",
    version = "v1.12.0",
)

go_module(
    name = "gopkg.in__resty.v1",
    download = ":_gopkg.in__resty.v1#download",
    install = ["."],
    module = "gopkg.in/resty.v1",
    visibility = ["PUBLIC"],
    deps = [":golang.org__x__net__publicsuffix"],
)

go_mod_download(
    name = "gopkg.in__square__go-jose.v2",
    _tag = "download",
    module = "gopkg.in/square/go-jose.v2",
    version = "v2.5.1",
)

go_module(
    name = "gopkg.in__square__go-jose.v2",
    download = ":_gopkg.in__square__go-jose.v2#download",
    install = ["."],
    module = "gopkg.in/square/go-jose.v2",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__crypto__ed25519",
        ":golang.org__x__crypto__pbkdf2",
        ":gopkg.in__square__go-jose.v2__cipher",
        ":gopkg.in__square__go-jose.v2__json",
    ],
)

go_module(
    name = "gopkg.in__square__go-jose.v2__cipher",
    download = ":_gopkg.in__square__go-jose.v2#download",
    install = ["cipher"],
    module = "gopkg.in/square/go-jose.v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__square__go-jose.v2__json",
    download = ":_gopkg.in__square__go-jose.v2#download",
    install = ["json"],
    module = "gopkg.in/square/go-jose.v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "gopkg.in__square__go-jose.v2__jwt",
    download = ":_gopkg.in__square__go-jose.v2#download",
    install = ["jwt"],
    module = "gopkg.in/square/go-jose.v2",
    visibility = ["PUBLIC"],
    deps = [
        ":gopkg.in__square__go-jose.v2",
        ":gopkg.in__square__go-jose.v2__json",
    ],
)

go_mod_download(
    name = "gopkg.in__yaml.v2",
    _tag = "download",
    module = "gopkg.in/yaml.v2",
    version = "v2.4.0",
)

go_module(
    name = "gopkg.in__yaml.v2",
    download = ":_gopkg.in__yaml.v2#download",
    install = ["."],
    module = "gopkg.in/yaml.v2",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "gopkg.in__yaml.v3",
    _tag = "download",
    module = "gopkg.in/yaml.v3",
    version = "v3.0.0-20210107192922-496545a6307b",
)

go_module(
    name = "gopkg.in__yaml.v3",
    download = ":_gopkg.in__yaml.v3#download",
    install = ["."],
    module = "gopkg.in/yaml.v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "helm.sh__helm__v3",
    _tag = "download",
    module = "helm.sh/helm/v3",
    version = "v3.6.1",
)

go_module(
    name = "helm.sh__helm__v3__internal__experimental__registry",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/experimental/registry"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__containerd__containerd__content",
        ":github.com__containerd__containerd__errdefs",
        ":github.com__containerd__containerd__remotes",
        ":github.com__deislabs__oras__pkg__auth",
        ":github.com__deislabs__oras__pkg__auth__docker",
        ":github.com__deislabs__oras__pkg__content",
        ":github.com__deislabs__oras__pkg__context",
        ":github.com__deislabs__oras__pkg__oras",
        ":github.com__docker__go-units",
        ":github.com__gosuri__uitable",
        ":github.com__opencontainers__go-digest",
        ":github.com__opencontainers__image-spec__specs-go",
        ":github.com__opencontainers__image-spec__specs-go__v1",
        ":github.com__pkg__errors",
        ":github.com__sirupsen__logrus",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":helm.sh__helm__v3__pkg__helmpath",
    ],
)

go_module(
    name = "helm.sh__helm__v3__internal__fileutil",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/fileutil"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":helm.sh__helm__v3__internal__third_party__dep__fs"],
)

go_module(
    name = "helm.sh__helm__v3__internal__ignore",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/ignore"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "helm.sh__helm__v3__internal__resolver",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/resolver"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__gates",
        ":helm.sh__helm__v3__pkg__helmpath",
        ":helm.sh__helm__v3__pkg__provenance",
        ":helm.sh__helm__v3__pkg__repo",
    ],
)

go_module(
    name = "helm.sh__helm__v3__internal__sympath",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/sympath"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "helm.sh__helm__v3__internal__third_party__dep__fs",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/third_party/dep/fs"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "helm.sh__helm__v3__internal__third_party__k8s.io__kubernetes__deployment__util",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/third_party/k8s.io/kubernetes/deployment/util"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__equality",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__client-go__kubernetes__typed__apps__v1",
    ],
)

go_module(
    name = "helm.sh__helm__v3__internal__tlsutil",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/tlsutil"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "helm.sh__helm__v3__internal__urlutil",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/urlutil"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3__internal__version",
    download = ":_helm.sh__helm__v3#download",
    install = ["internal/version"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3__pkg__action",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/action"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__Masterminds__sprig__v3",
        ":github.com__gosuri__uitable",
        ":github.com__pkg__errors",
        ":golang.org__x__term",
        ":helm.sh__helm__v3__internal__experimental__registry",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":helm.sh__helm__v3__pkg__cli",
        ":helm.sh__helm__v3__pkg__downloader",
        ":helm.sh__helm__v3__pkg__engine",
        ":helm.sh__helm__v3__pkg__getter",
        ":helm.sh__helm__v3__pkg__kube",
        ":helm.sh__helm__v3__pkg__kube__fake",
        ":helm.sh__helm__v3__pkg__lint",
        ":helm.sh__helm__v3__pkg__lint__support",
        ":helm.sh__helm__v3__pkg__postrender",
        ":helm.sh__helm__v3__pkg__provenance",
        ":helm.sh__helm__v3__pkg__release",
        ":helm.sh__helm__v3__pkg__releaseutil",
        ":helm.sh__helm__v3__pkg__repo",
        ":helm.sh__helm__v3__pkg__storage",
        ":helm.sh__helm__v3__pkg__storage__driver",
        ":helm.sh__helm__v3__pkg__time",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__cli-runtime__pkg__genericclioptions",
        ":k8s.io__cli-runtime__pkg__printers",
        ":k8s.io__cli-runtime__pkg__resource",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__rest",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__chart",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/chart"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__Masterminds__semver__v3"],
)

go_module(
    name = "helm.sh__helm__v3__pkg__chart__loader",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/chart/loader"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__internal__ignore",
        ":helm.sh__helm__v3__internal__sympath",
        ":helm.sh__helm__v3__pkg__chart",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__chartutil",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/chartutil"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__cyphar__filepath-securejoin",
        ":github.com__mitchellh__copystructure",
        ":github.com__pkg__errors",
        ":github.com__xeipuuv__gojsonschema",
        ":helm.sh__helm__v3__internal__version",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__cli",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/cli"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spf13__pflag",
        ":helm.sh__helm__v3__pkg__helmpath",
        ":k8s.io__cli-runtime__pkg__genericclioptions",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__cli__values",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/cli/values"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__getter",
        ":helm.sh__helm__v3__pkg__strvals",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__downloader",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/downloader"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__internal__experimental__registry",
        ":helm.sh__helm__v3__internal__fileutil",
        ":helm.sh__helm__v3__internal__resolver",
        ":helm.sh__helm__v3__internal__third_party__dep__fs",
        ":helm.sh__helm__v3__internal__urlutil",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":helm.sh__helm__v3__pkg__getter",
        ":helm.sh__helm__v3__pkg__helmpath",
        ":helm.sh__helm__v3__pkg__provenance",
        ":helm.sh__helm__v3__pkg__repo",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__engine",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/engine"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__BurntSushi__toml",
        ":github.com__Masterminds__sprig__v3",
        ":github.com__gobwas__glob",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__rest",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__gates",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/gates"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3__pkg__getter",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/getter"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__internal__experimental__registry",
        ":helm.sh__helm__v3__internal__tlsutil",
        ":helm.sh__helm__v3__internal__urlutil",
        ":helm.sh__helm__v3__internal__version",
        ":helm.sh__helm__v3__pkg__cli",
        ":helm.sh__helm__v3__pkg__plugin",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__helmpath",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/helmpath"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":helm.sh__helm__v3__pkg__helmpath__xdg",
        ":k8s.io__client-go__util__homedir",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__helmpath__xdg",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/helmpath/xdg"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3__pkg__kube",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/kube"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__internal__third_party__k8s.io__kubernetes__deployment__util",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__cli-runtime__pkg__genericclioptions",
        ":k8s.io__cli-runtime__pkg__resource",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__client-go__tools__clientcmd",
        ":k8s.io__client-go__tools__watch",
        ":k8s.io__kubectl__pkg__cmd__util",
        ":k8s.io__kubectl__pkg__validation",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__kube__fake",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/kube/fake"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":helm.sh__helm__v3__pkg__kube",
        ":k8s.io__api__core__v1",
        ":k8s.io__cli-runtime__pkg__resource",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__lint",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/lint"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":helm.sh__helm__v3__pkg__lint__rules",
        ":helm.sh__helm__v3__pkg__lint__support",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__lint__rules",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/lint/rules"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__asaskevich__govalidator",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":helm.sh__helm__v3__pkg__engine",
        ":helm.sh__helm__v3__pkg__lint__support",
        ":k8s.io__apimachinery__pkg__api__validation",
        ":k8s.io__apimachinery__pkg__api__validation__path",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__validation__field",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__apiserver__pkg__endpoints__deprecation",
        ":k8s.io__client-go__kubernetes__scheme",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__lint__support",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/lint/support"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "helm.sh__helm__v3__pkg__plugin",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/plugin"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__cli",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__postrender",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/postrender"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "helm.sh__helm__v3__pkg__provenance",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/provenance"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":golang.org__x__crypto__openpgp",
        ":golang.org__x__crypto__openpgp__clearsign",
        ":golang.org__x__crypto__openpgp__packet",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__release",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/release"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__time",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__releaseutil",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/releaseutil"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__chartutil",
        ":helm.sh__helm__v3__pkg__release",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__repo",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/repo"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__semver__v3",
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__internal__fileutil",
        ":helm.sh__helm__v3__internal__urlutil",
        ":helm.sh__helm__v3__pkg__chart",
        ":helm.sh__helm__v3__pkg__chart__loader",
        ":helm.sh__helm__v3__pkg__getter",
        ":helm.sh__helm__v3__pkg__helmpath",
        ":helm.sh__helm__v3__pkg__provenance",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__storage",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/storage"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":helm.sh__helm__v3__pkg__release",
        ":helm.sh__helm__v3__pkg__releaseutil",
        ":helm.sh__helm__v3__pkg__storage__driver",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__storage__driver",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/storage/driver"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Masterminds__squirrel",
        ":github.com__jmoiron__sqlx",
        ":github.com__lib__pq",
        ":github.com__pkg__errors",
        ":github.com__rubenv__sql-migrate",
        ":helm.sh__helm__v3__pkg__release",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__strvals",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/strvals"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "helm.sh__helm__v3__pkg__time",
    download = ":_helm.sh__helm__v3#download",
    install = ["pkg/time"],
    module = "helm.sh/helm/v3",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "k8s.io__api",
    _tag = "download",
    module = "k8s.io/api",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__api__admission__v1",
    download = ":_k8s.io__api#download",
    install = ["admission/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__authentication__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "k8s.io__api__admission__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["admission/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__authentication__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "k8s.io__api__admissionregistration__v1",
    download = ":_k8s.io__api#download",
    install = ["admissionregistration/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__admissionregistration__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["admissionregistration/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__apiserverinternal__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["apiserverinternal/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__apps__v1",
    download = ":_k8s.io__api#download",
    install = ["apps/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__apps__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["apps/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__apps__v1beta2",
    download = ":_k8s.io__api#download",
    install = ["apps/v1beta2"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__authentication__v1",
    download = ":_k8s.io__api#download",
    install = ["authentication/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "k8s.io__api__authentication__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["authentication/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__authorization__v1",
    download = ":_k8s.io__api#download",
    install = ["authorization/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__authorization__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["authorization/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__autoscaling__v1",
    download = ":_k8s.io__api#download",
    install = ["autoscaling/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__autoscaling__v2beta1",
    download = ":_k8s.io__api#download",
    install = ["autoscaling/v2beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__autoscaling__v2beta2",
    download = ":_k8s.io__api#download",
    install = ["autoscaling/v2beta2"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__batch__v1",
    download = ":_k8s.io__api#download",
    install = ["batch/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__batch__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["batch/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__certificates__v1",
    download = ":_k8s.io__api#download",
    install = ["certificates/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__certificates__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["certificates/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__coordination__v1",
    download = ":_k8s.io__api#download",
    install = ["coordination/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__coordination__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["coordination/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__core__v1",
    download = ":_k8s.io__api#download",
    install = ["core/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__discovery__v1",
    download = ":_k8s.io__api#download",
    install = ["discovery/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__discovery__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["discovery/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__events__v1",
    download = ":_k8s.io__api#download",
    install = ["events/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__events__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["events/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__extensions__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["extensions/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__flowcontrol__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["flowcontrol/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__flowcontrol__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["flowcontrol/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__imagepolicy__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["imagepolicy/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__networking__v1",
    download = ":_k8s.io__api#download",
    install = ["networking/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__networking__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["networking/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__node__v1",
    download = ":_k8s.io__api#download",
    install = ["node/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__node__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["node/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__node__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["node/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__policy__v1",
    download = ":_k8s.io__api#download",
    install = ["policy/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__policy__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["policy/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__api__rbac__v1",
    download = ":_k8s.io__api#download",
    install = ["rbac/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__rbac__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["rbac/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__rbac__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["rbac/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__scheduling__v1",
    download = ":_k8s.io__api#download",
    install = ["scheduling/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__scheduling__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["scheduling/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__scheduling__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["scheduling/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__storage__v1",
    download = ":_k8s.io__api#download",
    install = ["storage/v1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__storage__v1alpha1",
    download = ":_k8s.io__api#download",
    install = ["storage/v1alpha1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__api__storage__v1beta1",
    download = ":_k8s.io__api#download",
    install = ["storage/v1beta1"],
    module = "k8s.io/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_mod_download(
    name = "k8s.io__apiextensions-apiserver",
    _tag = "download",
    module = "k8s.io/apiextensions-apiserver",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__apiextensions-apiserver__pkg__apis__apiextensions",
    download = ":_k8s.io__apiextensions-apiserver#download",
    install = ["pkg/apis/apiextensions"],
    module = "k8s.io/apiextensions-apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1",
    download = ":_k8s.io__apiextensions-apiserver#download",
    install = ["pkg/apis/apiextensions/v1"],
    module = "k8s.io/apiextensions-apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions",
        ":k8s.io__apimachinery__pkg__api__equality",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__utils__pointer",
    ],
)

go_module(
    name = "k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
    download = ":_k8s.io__apiextensions-apiserver#download",
    install = ["pkg/apis/apiextensions/v1beta1"],
    module = "k8s.io/apiextensions-apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__utils__pointer",
    ],
)

go_mod_download(
    name = "k8s.io__apimachinery",
    _tag = "download",
    module = "k8s.io/apimachinery",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__equality",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/equality"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__errors",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/errors"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__validation__field",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__meta",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/meta"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__resource",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/resource"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":gopkg.in__inf.v0",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__validation",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/validation"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__equality",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__validation",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__apimachinery__pkg__util__validation__field",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__api__validation__path",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/api/validation/path"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__internalversion",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/internalversion"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1beta1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__internalversion__scheme",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/internalversion/scheme"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__internalversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__v1",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/v1"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__gogo__protobuf__sortkeys",
        ":github.com__google__gofuzz",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__watch",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/v1/unstructured"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__v1__unstructured__unstructuredscheme",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/v1/unstructured/unstructuredscheme"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__runtime__serializer__versioning",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__v1__validation",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/v1/validation"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__apimachinery__pkg__util__validation__field",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__apis__meta__v1beta1",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/apis/meta/v1beta1"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__conversion",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/conversion"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__third_party__forked__golang__reflect"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__conversion__queryparams",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/conversion/queryparams"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__fields",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/fields"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__selection"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__labels",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/labels"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__apimachinery__pkg__util__validation__field",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__conversion__queryparams",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__naming",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__klog__v2",
        ":sigs.k8s.io__structured-merge-diff__v4__value",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__schema",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/schema"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":github.com__gogo__protobuf__proto"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__runtime__serializer__protobuf",
        ":k8s.io__apimachinery__pkg__runtime__serializer__recognizer",
        ":k8s.io__apimachinery__pkg__runtime__serializer__versioning",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer__json",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer/json"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__json-iterator__go",
        ":github.com__modern-go__reflect2",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__recognizer",
        ":k8s.io__apimachinery__pkg__util__framer",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__klog__v2",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer__protobuf",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer/protobuf"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__recognizer",
        ":k8s.io__apimachinery__pkg__util__framer",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer__recognizer",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer/recognizer"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer__streaming",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer/streaming"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__runtime__serializer__versioning",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/runtime/serializer/versioning"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__selection",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/selection"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__types",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/types"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__cache",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/cache"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__hashicorp__golang-lru",
        ":k8s.io__apimachinery__pkg__util__clock",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__clock",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/clock"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__diff",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/diff"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__google__go-cmp__cmp",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__duration",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/duration"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__errors",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/errors"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__util__sets"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__framer",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/framer"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__httpstream",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/httpstream"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__httpstream__spdy",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/httpstream/spdy"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__moby__spdystream",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__httpstream",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__third_party__forked__golang__netutil",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__intstr",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/intstr"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__gogo__protobuf__proto",
        ":github.com__google__gofuzz",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__json",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/json"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__jsonmergepatch",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/jsonmergepatch"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__mergepatch",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__managedfields",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/managedfields"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":sigs.k8s.io__structured-merge-diff__v4__fieldpath",
        ":sigs.k8s.io__structured-merge-diff__v4__typed",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__mergepatch",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/mergepatch"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__naming",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/naming"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__net",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/net"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__proxy",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/proxy"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mxk__go-flowrate__flowrate",
        ":golang.org__x__net__html",
        ":golang.org__x__net__html__atom",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__util__httpstream",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__third_party__forked__golang__netutil",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__remotecommand",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/remotecommand"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__apis__meta__v1"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__runtime",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/runtime"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__klog__v2"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__sets",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/sets"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__strategicpatch",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/strategicpatch"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__mergepatch",
        ":k8s.io__apimachinery__third_party__forked__golang__json",
        ":k8s.io__kube-openapi__pkg__util__proto",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__uuid",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/uuid"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__uuid",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__validation",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/validation"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__util__validation__field"],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__validation__field",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/validation/field"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__version",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/version"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__wait",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/wait"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__util__yaml",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/util/yaml"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__json",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "k8s.io__apimachinery__pkg__version",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/version"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__pkg__watch",
    download = ":_k8s.io__apimachinery#download",
    install = ["pkg/watch"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__apimachinery__third_party__forked__golang__json",
    download = ":_k8s.io__apimachinery#download",
    install = ["third_party/forked/golang/json"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__third_party__forked__golang__netutil",
    download = ":_k8s.io__apimachinery#download",
    install = ["third_party/forked/golang/netutil"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__apimachinery__third_party__forked__golang__reflect",
    download = ":_k8s.io__apimachinery#download",
    install = ["third_party/forked/golang/reflect"],
    module = "k8s.io/apimachinery",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "k8s.io__apiserver",
    _tag = "download",
    module = "k8s.io/apiserver",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__apiserver__pkg__endpoints__deprecation",
    download = ":_k8s.io__apiserver#download",
    install = ["pkg/endpoints/deprecation"],
    module = "k8s.io/apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__version",
    ],
)

go_module(
    name = "k8s.io__apiserver__pkg__features",
    download = ":_k8s.io__apiserver#download",
    install = ["pkg/features"],
    module = "k8s.io/apiserver",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__component-base__featuregate",
    ],
)

go_module(
    name = "k8s.io__apiserver__pkg__util__feature",
    download = ":_k8s.io__apiserver#download",
    install = ["pkg/util/feature"],
    module = "k8s.io/apiserver",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__component-base__featuregate"],
)

go_mod_download(
    name = "k8s.io__cli-runtime",
    _tag = "download",
    module = "k8s.io/cli-runtime",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__cli-runtime__pkg__genericclioptions",
    download = ":_k8s.io__cli-runtime#download",
    install = ["pkg/genericclioptions"],
    module = "k8s.io/cli-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__google__uuid",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__cli-runtime__pkg__printers",
        ":k8s.io__cli-runtime__pkg__resource",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__discovery__cached__disk",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__restmapper",
        ":k8s.io__client-go__tools__clientcmd",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":k8s.io__client-go__util__homedir",
    ],
)

go_module(
    name = "k8s.io__cli-runtime__pkg__printers",
    download = ":_k8s.io__cli-runtime#download",
    install = ["pkg/printers"],
    module = "k8s.io/cli-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__liggitt__tabwriter",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__duration",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__util__jsonpath",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "k8s.io__cli-runtime__pkg__resource",
    download = ":_k8s.io__cli-runtime#download",
    install = ["pkg/resource"],
    module = "k8s.io/cli-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gnostic__openapiv2",
        ":golang.org__x__text__encoding__unicode",
        ":golang.org__x__text__transform",
        ":gopkg.in__yaml.v2",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured__unstructuredscheme",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__restmapper",
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__krusty",
    ],
)

go_mod_download(
    name = "k8s.io__client-go",
    _tag = "download",
    module = "k8s.io/client-go",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__admissionregistration__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/admissionregistration/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__admissionregistration__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/admissionregistration/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__apiserverinternal__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/apiserverinternal/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__apps__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/apps/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__apps__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/apps/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__apps__v1beta2",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/apps/v1beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__autoscaling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/autoscaling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__autoscaling__v2beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/autoscaling/v2beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__autoscaling__v2beta2",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/autoscaling/v2beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__batch__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/batch/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__batch__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/batch/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__batch__v1",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__certificates__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/certificates/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__certificates__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/certificates/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__coordination__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/coordination/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__coordination__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/coordination/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__core__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/core/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__discovery__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/discovery/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__discovery__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__discovery__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/discovery/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__events__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/events/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__events__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/events/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__extensions__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/extensions/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__flowcontrol__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/flowcontrol/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__flowcontrol__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/flowcontrol/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__internal",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/internal"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__structured-merge-diff__v4__typed"],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__meta__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/meta/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__networking__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/networking/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__networking__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__networking__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/networking/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__node__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/node/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__node__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__node__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/node/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__node__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/node/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__policy__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/policy/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__policy__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/policy/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__rbac__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/rbac/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__rbac__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/rbac/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__rbac__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/rbac/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__scheduling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/scheduling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__scheduling__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/scheduling/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__scheduling__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/scheduling/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__storage__v1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/storage/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__storage__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/storage/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__applyconfigurations__storage__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["applyconfigurations/storage/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__managedfields",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__applyconfigurations__internal",
        ":k8s.io__client-go__applyconfigurations__meta__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__discovery",
    download = ":_k8s.io__client-go#download",
    install = ["discovery"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__protobuf__proto",
        ":github.com__googleapis__gnostic__openapiv2",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__version",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__discovery__cached__disk",
    download = ":_k8s.io__client-go#download",
    install = ["discovery/cached/disk"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gnostic__openapiv2",
        ":github.com__gregjones__httpcache",
        ":github.com__gregjones__httpcache__diskcache",
        ":github.com__peterbourgon__diskv",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__version",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__discovery__fake",
    download = ":_k8s.io__client-go#download",
    install = ["discovery/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gnostic__openapiv2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__version",
        ":k8s.io__client-go__pkg__version",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__dynamic",
    download = ":_k8s.io__client-go#download",
    install = ["dynamic"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__informers",
    download = ":_k8s.io__client-go#download",
    install = ["informers"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__api__certificates__v1",
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__api__coordination__v1",
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__discovery__v1",
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__api__events__v1",
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__api__networking__v1",
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__api__node__v1",
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__api__policy__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__informers__admissionregistration",
        ":k8s.io__client-go__informers__apiserverinternal",
        ":k8s.io__client-go__informers__apps",
        ":k8s.io__client-go__informers__autoscaling",
        ":k8s.io__client-go__informers__batch",
        ":k8s.io__client-go__informers__certificates",
        ":k8s.io__client-go__informers__coordination",
        ":k8s.io__client-go__informers__core",
        ":k8s.io__client-go__informers__discovery",
        ":k8s.io__client-go__informers__events",
        ":k8s.io__client-go__informers__extensions",
        ":k8s.io__client-go__informers__flowcontrol",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__networking",
        ":k8s.io__client-go__informers__node",
        ":k8s.io__client-go__informers__policy",
        ":k8s.io__client-go__informers__rbac",
        ":k8s.io__client-go__informers__scheduling",
        ":k8s.io__client-go__informers__storage",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__admissionregistration",
    download = ":_k8s.io__client-go#download",
    install = ["informers/admissionregistration"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__admissionregistration__v1",
        ":k8s.io__client-go__informers__admissionregistration__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__admissionregistration__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/admissionregistration/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__admissionregistration__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__admissionregistration__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/admissionregistration/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__admissionregistration__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apiserverinternal",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apiserverinternal"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apiserverinternal__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apiserverinternal/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apps",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apps"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__apps__v1",
        ":k8s.io__client-go__informers__apps__v1beta1",
        ":k8s.io__client-go__informers__apps__v1beta2",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apps__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apps/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__apps__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apps__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apps/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__apps__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__apps__v1beta2",
    download = ":_k8s.io__client-go#download",
    install = ["informers/apps/v1beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__apps__v1beta2",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__autoscaling",
    download = ":_k8s.io__client-go#download",
    install = ["informers/autoscaling"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__autoscaling__v1",
        ":k8s.io__client-go__informers__autoscaling__v2beta1",
        ":k8s.io__client-go__informers__autoscaling__v2beta2",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__autoscaling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/autoscaling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__autoscaling__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__autoscaling__v2beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/autoscaling/v2beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__autoscaling__v2beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__autoscaling__v2beta2",
    download = ":_k8s.io__client-go#download",
    install = ["informers/autoscaling/v2beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__autoscaling__v2beta2",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__batch",
    download = ":_k8s.io__client-go#download",
    install = ["informers/batch"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__batch__v1",
        ":k8s.io__client-go__informers__batch__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__batch__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/batch/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__batch__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__batch__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/batch/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__batch__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__certificates",
    download = ":_k8s.io__client-go#download",
    install = ["informers/certificates"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__certificates__v1",
        ":k8s.io__client-go__informers__certificates__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__certificates__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/certificates/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__certificates__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__certificates__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/certificates/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__certificates__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__coordination",
    download = ":_k8s.io__client-go#download",
    install = ["informers/coordination"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__coordination__v1",
        ":k8s.io__client-go__informers__coordination__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__coordination__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/coordination/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__coordination__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__coordination__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/coordination/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__coordination__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__core",
    download = ":_k8s.io__client-go#download",
    install = ["informers/core"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__core__v1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__core__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/core/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__core__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__discovery",
    download = ":_k8s.io__client-go#download",
    install = ["informers/discovery"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__discovery__v1",
        ":k8s.io__client-go__informers__discovery__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__discovery__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/discovery/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__discovery__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__discovery__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/discovery/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__discovery__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__events",
    download = ":_k8s.io__client-go#download",
    install = ["informers/events"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__events__v1",
        ":k8s.io__client-go__informers__events__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__events__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/events/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__events__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__events__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/events/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__events__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__extensions",
    download = ":_k8s.io__client-go#download",
    install = ["informers/extensions"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__extensions__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__extensions__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/extensions/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__extensions__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__flowcontrol",
    download = ":_k8s.io__client-go#download",
    install = ["informers/flowcontrol"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__flowcontrol__v1alpha1",
        ":k8s.io__client-go__informers__flowcontrol__v1beta1",
        ":k8s.io__client-go__informers__internalinterfaces",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__flowcontrol__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/flowcontrol/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__flowcontrol__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__flowcontrol__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/flowcontrol/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__flowcontrol__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__internalinterfaces",
    download = ":_k8s.io__client-go#download",
    install = ["informers/internalinterfaces"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__networking",
    download = ":_k8s.io__client-go#download",
    install = ["informers/networking"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__networking__v1",
        ":k8s.io__client-go__informers__networking__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__networking__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/networking/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__networking__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__networking__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/networking/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__networking__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__node",
    download = ":_k8s.io__client-go#download",
    install = ["informers/node"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__node__v1",
        ":k8s.io__client-go__informers__node__v1alpha1",
        ":k8s.io__client-go__informers__node__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__node__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/node/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__node__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__node__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/node/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__node__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__node__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/node/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__node__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__policy",
    download = ":_k8s.io__client-go#download",
    install = ["informers/policy"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__policy__v1",
        ":k8s.io__client-go__informers__policy__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__policy__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/policy/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__policy__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__policy__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/policy/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__policy__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__rbac",
    download = ":_k8s.io__client-go#download",
    install = ["informers/rbac"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__rbac__v1",
        ":k8s.io__client-go__informers__rbac__v1alpha1",
        ":k8s.io__client-go__informers__rbac__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__rbac__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/rbac/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__rbac__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__rbac__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/rbac/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__rbac__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__rbac__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/rbac/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__rbac__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__scheduling",
    download = ":_k8s.io__client-go#download",
    install = ["informers/scheduling"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__scheduling__v1",
        ":k8s.io__client-go__informers__scheduling__v1alpha1",
        ":k8s.io__client-go__informers__scheduling__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__scheduling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/scheduling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__scheduling__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__scheduling__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/scheduling/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__scheduling__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__scheduling__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/scheduling/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__scheduling__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__storage",
    download = ":_k8s.io__client-go#download",
    install = ["informers/storage"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__informers__storage__v1",
        ":k8s.io__client-go__informers__storage__v1alpha1",
        ":k8s.io__client-go__informers__storage__v1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__storage__v1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/storage/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__storage__v1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__storage__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/storage/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__storage__v1alpha1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__informers__storage__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["informers/storage/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__informers__internalinterfaces",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__listers__storage__v1beta1",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta2",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2",
        ":k8s.io__client-go__kubernetes__typed__batch__v1",
        ":k8s.io__client-go__kubernetes__typed__batch__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__events__v1",
        ":k8s.io__client-go__kubernetes__typed__events__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__extensions__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__node__v1",
        ":k8s.io__client-go__kubernetes__typed__node__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__node__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__util__flowcontrol",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__authentication__v1",
        ":k8s.io__api__authentication__v1beta1",
        ":k8s.io__api__authorization__v1",
        ":k8s.io__api__authorization__v1beta1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__api__certificates__v1",
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__api__coordination__v1",
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__discovery__v1",
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__api__events__v1",
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__api__networking__v1",
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__api__node__v1",
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__api__policy__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__discovery__fake",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__apps__v1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta2",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta2__fake",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2__fake",
        ":k8s.io__client-go__kubernetes__typed__batch__v1",
        ":k8s.io__client-go__kubernetes__typed__batch__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__batch__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__batch__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__kubernetes__typed__core__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__events__v1",
        ":k8s.io__client-go__kubernetes__typed__events__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__events__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__events__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__extensions__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__extensions__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__networking__v1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__networking__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__node__v1",
        ":k8s.io__client-go__kubernetes__typed__node__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__node__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__node__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__node__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__node__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__policy__v1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__policy__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1beta1__fake",
        ":k8s.io__client-go__kubernetes__typed__storage__v1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1__fake",
        ":k8s.io__client-go__kubernetes__typed__storage__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1alpha1__fake",
        ":k8s.io__client-go__kubernetes__typed__storage__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1beta1__fake",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__scheme",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/scheme"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__authentication__v1",
        ":k8s.io__api__authentication__v1beta1",
        ":k8s.io__api__authorization__v1",
        ":k8s.io__api__authorization__v1beta1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__api__certificates__v1",
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__api__coordination__v1",
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__discovery__v1",
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__api__events__v1",
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__api__networking__v1",
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__api__node__v1",
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__api__policy__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__admissionregistration__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/admissionregistration/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__admissionregistration__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__admissionregistration__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/admissionregistration/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__admissionregistration__v1",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/admissionregistration/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__admissionregistration__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/admissionregistration/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__admissionregistration__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__admissionregistration__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apiserverinternal/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apiserverinternal/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__apiserverinternal__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1beta2",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1beta2",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__apps__v1beta2__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/apps/v1beta2/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__apps__v1beta2",
        ":k8s.io__client-go__kubernetes__typed__apps__v1beta2",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authentication__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authentication/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authentication__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authentication/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authentication__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authentication/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authentication__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authentication/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__kubernetes__typed__authentication__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authorization__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authorization/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authorization__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authorization__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authorization/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authorization__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authorization__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authorization/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authorization__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__authorization__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/authorization/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authorization__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__kubernetes__typed__authorization__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v2beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v2beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v2beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v2beta1",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v2beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v2beta2",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/autoscaling/v2beta2/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__autoscaling__v2beta2",
        ":k8s.io__client-go__kubernetes__typed__autoscaling__v2beta2",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__batch__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/batch/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__batch__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__batch__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/batch/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__batch__v1",
        ":k8s.io__client-go__kubernetes__typed__batch__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__batch__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/batch/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__batch__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__batch__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/batch/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__batch__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__batch__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__certificates__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/certificates/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__certificates__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__certificates__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/certificates/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__certificates__v1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__certificates__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/certificates/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__certificates__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__certificates__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/certificates/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__certificates__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__certificates__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__coordination__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/coordination/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__coordination__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__coordination__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/coordination/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__coordination__v1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__coordination__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/coordination/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__coordination__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__coordination__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/coordination/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__coordination__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__core__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/core/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__reference",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__core__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/core/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__authentication__v1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__core__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__rest__fake",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__discovery__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/discovery/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__discovery__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__discovery__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/discovery/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__discovery__v1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__discovery__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/discovery/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__discovery__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__discovery__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/discovery/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__discovery__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__discovery__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__events__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/events/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__events__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__events__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/events/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__events__v1",
        ":k8s.io__client-go__kubernetes__typed__events__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__events__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/events/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__events__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__events__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/events/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__events__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__events__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__extensions__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/extensions/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__extensions__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__extensions__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/extensions/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__extensions__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__extensions__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/flowcontrol/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__flowcontrol__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/flowcontrol/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__flowcontrol__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/flowcontrol/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__flowcontrol__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/flowcontrol/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__flowcontrol__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__flowcontrol__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__networking__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/networking/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__networking__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__networking__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/networking/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__networking__v1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__networking__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/networking/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__networking__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__networking__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/networking/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__networking__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__networking__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1",
        ":k8s.io__client-go__kubernetes__typed__node__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__node__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__node__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/node/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__node__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__node__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__policy__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/policy/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__policy__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__policy__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/policy/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__policy__v1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__policy__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/policy/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__policy__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__policy__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/policy/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__policy__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__policy__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__rbac__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/rbac/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__rbac__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__rbac__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__scheduling__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/scheduling/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__scheduling__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__scheduling__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1alpha1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1alpha1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1alpha1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1alpha1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1alpha1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1beta1",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__kubernetes__typed__storage__v1beta1__fake",
    download = ":_k8s.io__client-go#download",
    install = ["kubernetes/typed/storage/v1beta1/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__applyconfigurations__storage__v1beta1",
        ":k8s.io__client-go__kubernetes__typed__storage__v1beta1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__testing",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__admissionregistration__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/admissionregistration/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__admissionregistration__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/admissionregistration/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__apiserverinternal__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/apiserverinternal/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apiserverinternal__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__apps__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/apps/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__apps__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/apps/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__apps__v1beta2",
    download = ":_k8s.io__client-go#download",
    install = ["listers/apps/v1beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__autoscaling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/autoscaling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__autoscaling__v2beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/autoscaling/v2beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__autoscaling__v2beta2",
    download = ":_k8s.io__client-go#download",
    install = ["listers/autoscaling/v2beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v2beta2",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__batch__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/batch/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__batch__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/batch/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__certificates__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/certificates/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__certificates__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/certificates/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__coordination__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/coordination/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__coordination__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/coordination/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__core__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/core/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__discovery__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/discovery/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__discovery__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/discovery/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__discovery__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__events__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/events/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__events__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/events/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__events__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__extensions__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/extensions/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__flowcontrol__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/flowcontrol/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__flowcontrol__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/flowcontrol/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__flowcontrol__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__networking__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/networking/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__networking__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/networking/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__networking__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__node__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/node/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__node__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/node/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__node__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/node/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__node__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__policy__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/policy/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__policy__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/policy/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__rbac__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/rbac/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__rbac__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/rbac/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__rbac__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/rbac/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__scheduling__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/scheduling/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__scheduling__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/scheduling/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__scheduling__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/scheduling/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__scheduling__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__storage__v1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/storage/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__storage__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/storage/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1alpha1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__listers__storage__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["listers/storage/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__client-go__tools__cache",
    ],
)

go_module(
    name = "k8s.io__client-go__metadata",
    download = ":_k8s.io__client-go#download",
    install = ["metadata"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__internalversion__scheme",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__pkg__apis__clientauthentication",
    download = ":_k8s.io__client-go#download",
    install = ["pkg/apis/clientauthentication"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__client-go__pkg__apis__clientauthentication__v1alpha1",
    download = ":_k8s.io__client-go#download",
    install = ["pkg/apis/clientauthentication/v1alpha1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__pkg__apis__clientauthentication",
    ],
)

go_module(
    name = "k8s.io__client-go__pkg__apis__clientauthentication__v1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["pkg/apis/clientauthentication/v1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__pkg__apis__clientauthentication",
    ],
)

go_module(
    name = "k8s.io__client-go__pkg__version",
    download = ":_k8s.io__client-go#download",
    install = ["pkg/version"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__version"],
)

go_module(
    name = "k8s.io__client-go__plugin__pkg__client__auth__azure",
    download = ":_k8s.io__client-go#download",
    install = ["plugin/pkg/client/auth/azure"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__Azure__go-autorest__autorest",
        ":github.com__Azure__go-autorest__autorest__adal",
        ":github.com__Azure__go-autorest__autorest__azure",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__client-go__rest",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__plugin__pkg__client__auth__exec",
    download = ":_k8s.io__client-go#download",
    install = ["plugin/pkg/client/auth/exec"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":golang.org__x__term",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__pkg__apis__clientauthentication",
        ":k8s.io__client-go__pkg__apis__clientauthentication__v1alpha1",
        ":k8s.io__client-go__pkg__apis__clientauthentication__v1beta1",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":k8s.io__client-go__tools__metrics",
        ":k8s.io__client-go__transport",
        ":k8s.io__client-go__util__connrotation",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__plugin__pkg__client__auth__gcp",
    download = ":_k8s.io__client-go#download",
    install = ["plugin/pkg/client/auth/gcp"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":golang.org__x__oauth2__google",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__util__jsonpath",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__plugin__pkg__client__auth__oidc",
    download = ":_k8s.io__client-go#download",
    install = ["plugin/pkg/client/auth/oidc"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__client-go__rest",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__rest",
    download = ":_k8s.io__client-go#download",
    install = ["rest"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__net__http2",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__streaming",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__pkg__apis__clientauthentication",
        ":k8s.io__client-go__pkg__version",
        ":k8s.io__client-go__plugin__pkg__client__auth__exec",
        ":k8s.io__client-go__rest__watch",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":k8s.io__client-go__tools__metrics",
        ":k8s.io__client-go__transport",
        ":k8s.io__client-go__util__cert",
        ":k8s.io__client-go__util__flowcontrol",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__rest__fake",
    download = ":_k8s.io__client-go#download",
    install = ["rest/fake"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__util__flowcontrol",
    ],
)

go_module(
    name = "k8s.io__client-go__rest__watch",
    download = ":_k8s.io__client-go#download",
    install = ["rest/watch"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__serializer__streaming",
        ":k8s.io__apimachinery__pkg__watch",
    ],
)

go_module(
    name = "k8s.io__client-go__restmapper",
    download = ":_k8s.io__client-go#download",
    install = ["restmapper"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__discovery",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__scale",
    download = ":_k8s.io__client-go#download",
    install = ["scale"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__scale__scheme",
        ":k8s.io__client-go__scale__scheme__appsint",
        ":k8s.io__client-go__scale__scheme__appsv1beta1",
        ":k8s.io__client-go__scale__scheme__appsv1beta2",
        ":k8s.io__client-go__scale__scheme__autoscalingv1",
        ":k8s.io__client-go__scale__scheme__extensionsint",
        ":k8s.io__client-go__scale__scheme__extensionsv1beta1",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__appsint",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/appsint"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__appsv1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/appsv1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__appsv1beta2",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/appsv1beta2"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__autoscalingv1",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/autoscalingv1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__extensionsint",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/extensionsint"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__scale__scheme__extensionsv1beta1",
    download = ":_k8s.io__client-go#download",
    install = ["scale/scheme/extensionsv1beta1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__scale__scheme",
    ],
)

go_module(
    name = "k8s.io__client-go__testing",
    download = ":_k8s.io__client-go#download",
    install = ["testing"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__third_party__forked__golang__template",
    download = ":_k8s.io__client-go#download",
    install = ["third_party/forked/golang/template"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__tools__auth",
    download = ":_k8s.io__client-go#download",
    install = ["tools/auth"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__client-go__rest"],
)

go_module(
    name = "k8s.io__client-go__tools__cache",
    download = ":_k8s.io__client-go#download",
    install = ["tools/cache"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__cache",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__diff",
        ":k8s.io__apimachinery__pkg__util__naming",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__pager",
        ":k8s.io__klog__v2",
        ":k8s.io__utils__buffer",
        ":k8s.io__utils__trace",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__clientcmd",
    download = ":_k8s.io__client-go#download",
    install = ["tools/clientcmd"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__imdario__mergo",
        ":github.com__spf13__pflag",
        ":golang.org__x__term",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__auth",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":k8s.io__client-go__tools__clientcmd__api__latest",
        ":k8s.io__client-go__util__homedir",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__clientcmd__api",
    download = ":_k8s.io__client-go#download",
    install = ["tools/clientcmd/api"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__clientcmd__api__latest",
    download = ":_k8s.io__client-go#download",
    install = ["tools/clientcmd/api/latest"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer__json",
        ":k8s.io__apimachinery__pkg__runtime__serializer__versioning",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":k8s.io__client-go__tools__clientcmd__api__v1",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__clientcmd__api__v1",
    download = ":_k8s.io__client-go#download",
    install = ["tools/clientcmd/api/v1"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__tools__clientcmd__api",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__events",
    download = ":_k8s.io__client-go#download",
    install = ["tools/events"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__api__events__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__kubernetes__typed__events__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__record",
        ":k8s.io__client-go__tools__record__util",
        ":k8s.io__client-go__tools__reference",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__leaderelection",
    download = ":_k8s.io__client-go#download",
    install = ["tools/leaderelection"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__client-go__tools__leaderelection__resourcelock",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__leaderelection__resourcelock",
    download = ":_k8s.io__client-go#download",
    install = ["tools/leaderelection/resourcelock"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__coordination__v1",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__typed__coordination__v1",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__metrics",
    download = ":_k8s.io__client-go#download",
    install = ["tools/metrics"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__tools__pager",
    download = ":_k8s.io__client-go#download",
    install = ["tools/pager"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__internalversion",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__portforward",
    download = ":_k8s.io__client-go#download",
    install = ["tools/portforward"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__util__httpstream",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__record",
    download = ":_k8s.io__client-go#download",
    install = ["tools/record"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__golang__groupcache__lru",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__record__util",
        ":k8s.io__client-go__tools__reference",
        ":k8s.io__client-go__util__flowcontrol",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__record__util",
    download = ":_k8s.io__client-go#download",
    install = ["tools/record/util"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__reference",
    download = ":_k8s.io__client-go#download",
    install = ["tools/reference"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__remotecommand",
    download = ":_k8s.io__client-go#download",
    install = ["tools/remotecommand"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__util__httpstream",
        ":k8s.io__apimachinery__pkg__util__remotecommand",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__transport__spdy",
        ":k8s.io__client-go__util__exec",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__tools__watch",
    download = ":_k8s.io__client-go#download",
    install = ["tools/watch"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__transport",
    download = ":_k8s.io__client-go#download",
    install = ["transport"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__oauth2",
        ":k8s.io__apimachinery__pkg__util__net",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apimachinery__pkg__util__wait",
        ":k8s.io__client-go__util__connrotation",
        ":k8s.io__client-go__util__workqueue",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__client-go__transport__spdy",
    download = ":_k8s.io__client-go#download",
    install = ["transport/spdy"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__httpstream",
        ":k8s.io__apimachinery__pkg__util__httpstream__spdy",
        ":k8s.io__client-go__rest",
    ],
)

go_module(
    name = "k8s.io__client-go__util__cert",
    download = ":_k8s.io__client-go#download",
    install = ["util/cert"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__client-go__util__keyutil"],
)

go_module(
    name = "k8s.io__client-go__util__connrotation",
    download = ":_k8s.io__client-go#download",
    install = ["util/connrotation"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__util__exec",
    download = ":_k8s.io__client-go#download",
    install = ["util/exec"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__util__flowcontrol",
    download = ":_k8s.io__client-go#download",
    install = ["util/flowcontrol"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__time__rate",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__utils__integer",
    ],
)

go_module(
    name = "k8s.io__client-go__util__homedir",
    download = ":_k8s.io__client-go#download",
    install = ["util/homedir"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__util__jsonpath",
    download = ":_k8s.io__client-go#download",
    install = ["util/jsonpath"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__client-go__third_party__forked__golang__template"],
)

go_module(
    name = "k8s.io__client-go__util__keyutil",
    download = ":_k8s.io__client-go#download",
    install = ["util/keyutil"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__client-go__util__workqueue",
    download = ":_k8s.io__client-go#download",
    install = ["util/workqueue"],
    module = "k8s.io/client-go",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__time__rate",
        ":k8s.io__apimachinery__pkg__util__clock",
        ":k8s.io__apimachinery__pkg__util__runtime",
    ],
)

go_mod_download(
    name = "k8s.io__cluster-bootstrap",
    _tag = "download",
    module = "k8s.io/cluster-bootstrap",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__cluster-bootstrap__token__api",
    download = ":_k8s.io__cluster-bootstrap#download",
    install = ["token/api"],
    module = "k8s.io/cluster-bootstrap",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__api__core__v1"],
)

go_module(
    name = "k8s.io__cluster-bootstrap__token__util",
    download = ":_k8s.io__cluster-bootstrap#download",
    install = ["token/util"],
    module = "k8s.io/cluster-bootstrap",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__cluster-bootstrap__token__api",
    ],
)

go_module(
    name = "k8s.io__cluster-bootstrap__util__secrets",
    download = ":_k8s.io__cluster-bootstrap#download",
    install = ["util/secrets"],
    module = "k8s.io/cluster-bootstrap",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__cluster-bootstrap__token__api",
        ":k8s.io__cluster-bootstrap__token__util",
        ":k8s.io__klog__v2",
    ],
)

go_mod_download(
    name = "k8s.io__component-base",
    _tag = "download",
    module = "k8s.io/component-base",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__component-base__config",
    download = ":_k8s.io__component-base#download",
    install = ["config"],
    module = "k8s.io/component-base",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__apis__meta__v1"],
)

go_module(
    name = "k8s.io__component-base__config__v1alpha1",
    download = ":_k8s.io__component-base#download",
    install = ["config/v1alpha1"],
    module = "k8s.io/component-base",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__component-base__config",
        ":k8s.io__utils__pointer",
    ],
)

go_module(
    name = "k8s.io__component-base__featuregate",
    download = ":_k8s.io__component-base#download",
    install = ["featuregate"],
    module = "k8s.io/component-base",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__spf13__pflag",
        ":k8s.io__apimachinery__pkg__util__naming",
        ":k8s.io__klog__v2",
    ],
)

go_module(
    name = "k8s.io__component-base__version",
    download = ":_k8s.io__component-base#download",
    install = ["version"],
    module = "k8s.io/component-base",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__version"],
)

go_mod_download(
    name = "k8s.io__component-helpers",
    _tag = "download",
    module = "k8s.io/component-helpers",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__component-helpers__scheduling__corev1",
    download = ":_k8s.io__component-helpers#download",
    install = ["scheduling/corev1"],
    module = "k8s.io/component-helpers",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__component-helpers__scheduling__corev1__nodeaffinity",
    ],
)

go_module(
    name = "k8s.io__component-helpers__scheduling__corev1__nodeaffinity",
    download = ":_k8s.io__component-helpers#download",
    install = ["scheduling/corev1/nodeaffinity"],
    module = "k8s.io/component-helpers",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__validation__field",
    ],
)

go_mod_download(
    name = "k8s.io__klog",
    _tag = "download",
    module = "k8s.io/klog",
    version = "v1.0.0",
)

go_module(
    name = "k8s.io__klog",
    download = ":_k8s.io__klog#download",
    install = ["."],
    module = "k8s.io/klog",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "k8s.io__klog__v2",
    _tag = "download",
    module = "k8s.io/klog/v2",
    version = "v2.9.0",
)

go_module(
    name = "k8s.io__klog__v2",
    download = ":_k8s.io__klog__v2#download",
    install = ["."],
    module = "k8s.io/klog/v2",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-logr__logr"],
)

go_mod_download(
    name = "k8s.io__kube-openapi",
    _tag = "download",
    module = "k8s.io/kube-openapi",
    version = "v0.0.0-20211110012726-3cc51fd1e909",
)

go_module(
    name = "k8s.io__kube-openapi__pkg__util__proto",
    download = ":_k8s.io__kube-openapi#download",
    install = ["pkg/util/proto"],
    module = "k8s.io/kube-openapi",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__googleapis__gnostic__openapiv2",
        ":gopkg.in__yaml.v2",
    ],
)

go_module(
    name = "k8s.io__kube-openapi__pkg__util__proto__validation",
    download = ":_k8s.io__kube-openapi#download",
    install = ["pkg/util/proto/validation"],
    module = "k8s.io/kube-openapi",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__kube-openapi__pkg__util__proto"],
)

go_mod_download(
    name = "k8s.io__kube-scheduler",
    _tag = "download",
    module = "k8s.io/kube-scheduler",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__kube-scheduler__extender__v1",
    download = ":_k8s.io__kube-scheduler#download",
    install = ["extender/v1"],
    module = "k8s.io/kube-scheduler",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__types",
    ],
)

go_mod_download(
    name = "k8s.io__kubectl",
    _tag = "download",
    module = "k8s.io/kubectl",
    version = "v0.21.9",
)

go_module(
    name = "k8s.io__kubectl__pkg__cmd__util",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/cmd/util"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__cli-runtime__pkg__genericclioptions",
        ":k8s.io__cli-runtime__pkg__resource",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__scale",
        ":k8s.io__client-go__tools__clientcmd",
        ":k8s.io__component-base__version",
        ":k8s.io__klog__v2",
        ":k8s.io__kubectl__pkg__scheme",
        ":k8s.io__kubectl__pkg__util__openapi",
        ":k8s.io__kubectl__pkg__util__openapi__validation",
        ":k8s.io__kubectl__pkg__util__templates",
        ":k8s.io__kubectl__pkg__validation",
        ":k8s.io__utils__exec",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__scheme",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/scheme"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__admission__v1",
        ":k8s.io__api__admission__v1beta1",
        ":k8s.io__api__admissionregistration__v1",
        ":k8s.io__api__admissionregistration__v1beta1",
        ":k8s.io__api__apps__v1",
        ":k8s.io__api__apps__v1beta1",
        ":k8s.io__api__apps__v1beta2",
        ":k8s.io__api__authentication__v1",
        ":k8s.io__api__authentication__v1beta1",
        ":k8s.io__api__authorization__v1",
        ":k8s.io__api__authorization__v1beta1",
        ":k8s.io__api__autoscaling__v1",
        ":k8s.io__api__autoscaling__v2beta1",
        ":k8s.io__api__batch__v1",
        ":k8s.io__api__batch__v1beta1",
        ":k8s.io__api__certificates__v1",
        ":k8s.io__api__certificates__v1beta1",
        ":k8s.io__api__core__v1",
        ":k8s.io__api__extensions__v1beta1",
        ":k8s.io__api__imagepolicy__v1alpha1",
        ":k8s.io__api__networking__v1",
        ":k8s.io__api__policy__v1",
        ":k8s.io__api__policy__v1beta1",
        ":k8s.io__api__rbac__v1",
        ":k8s.io__api__rbac__v1alpha1",
        ":k8s.io__api__rbac__v1beta1",
        ":k8s.io__api__scheduling__v1alpha1",
        ":k8s.io__api__storage__v1",
        ":k8s.io__api__storage__v1beta1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__apis__meta__v1beta1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__kubernetes__scheme",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__util__interrupt",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/util/interrupt"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__kubectl__pkg__util__openapi",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/util/openapi"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__spec",
        ":github.com__googleapis__gnostic__openapiv2",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__discovery",
        ":k8s.io__kube-openapi__pkg__util__proto",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__util__openapi__validation",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/util/openapi/validation"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__yaml",
        ":k8s.io__kube-openapi__pkg__util__proto__validation",
        ":k8s.io__kubectl__pkg__util__openapi",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__util__templates",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/util/templates"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__MakeNowJust__heredoc",
        ":github.com__russross__blackfriday",
        ":github.com__spf13__cobra",
        ":github.com__spf13__pflag",
        ":k8s.io__kubectl__pkg__util__term",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__util__term",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/util/term"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__mitchellh__go-wordwrap",
        ":github.com__moby__term",
        ":golang.org__x__sys__unix",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__tools__remotecommand",
        ":k8s.io__kubectl__pkg__util__interrupt",
    ],
)

go_module(
    name = "k8s.io__kubectl__pkg__validation",
    download = ":_k8s.io__kubectl#download",
    install = ["pkg/validation"],
    module = "k8s.io/kubectl",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__exponent-io__jsonpath",
        ":k8s.io__apimachinery__pkg__util__errors",
    ],
)

go_mod_download(
    name = "k8s.io__kubernetes",
    _tag = "download",
    module = "k8s.io/kubernetes",
    version = "v1.21.9",
)

go_module(
    name = "k8s.io__kubernetes__cmd__kubeadm__app__apis__kubeadm",
    download = ":_k8s.io__kubernetes#download",
    install = ["cmd/kubeadm/app/apis/kubeadm"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__cluster-bootstrap__token__api",
        ":k8s.io__cluster-bootstrap__token__util",
        ":k8s.io__cluster-bootstrap__util__secrets",
        ":k8s.io__kubernetes__cmd__kubeadm__app__features",
    ],
)

go_module(
    name = "k8s.io__kubernetes__cmd__kubeadm__app__features",
    download = ":_k8s.io__kubernetes#download",
    install = ["cmd/kubeadm/app/features"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":k8s.io__apimachinery__pkg__util__version",
        ":k8s.io__component-base__featuregate",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__api__v1__resource",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/api/v1/resource"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__kubernetes__pkg__features",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__apis__core",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/apis/core"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__internalversion",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__intstr",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__apis__core__helper",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/apis/core/helper"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__conversion",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__kubernetes__pkg__apis__core",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__apis__core__v1__helper",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/apis/core/v1/helper"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__util__validation",
        ":k8s.io__kubernetes__pkg__apis__core__helper",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__apis__storage",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/apis/storage"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__kubernetes__pkg__apis__core",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__apis__storage__util",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/apis/storage/util"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__kubernetes__pkg__apis__storage",
        ":k8s.io__kubernetes__pkg__features",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__features",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/features"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__apiserver__pkg__features",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__component-base__featuregate",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__scheduler__apis__config",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/scheduler/apis/config"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__component-base__config",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__scheduler__framework",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/scheduler/framework"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__go-cmp__cmp",
        ":github.com__google__go-cmp__cmp__cmpopts",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__resource",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__sets",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__client-go__informers",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__tools__events",
        ":k8s.io__klog__v2",
        ":k8s.io__kube-scheduler__extender__v1",
        ":k8s.io__kubernetes__pkg__apis__core__v1__helper",
        ":k8s.io__kubernetes__pkg__features",
        ":k8s.io__kubernetes__pkg__scheduler__apis__config",
        ":k8s.io__kubernetes__pkg__scheduler__internal__parallelize",
        ":k8s.io__kubernetes__pkg__scheduler__util",
    ],
)

go_module(
    name = "k8s.io__kubernetes__pkg__scheduler__internal__parallelize",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/scheduler/internal/parallelize"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__client-go__util__workqueue"],
)

go_module(
    name = "k8s.io__kubernetes__pkg__scheduler__util",
    download = ":_k8s.io__kubernetes#download",
    install = ["pkg/scheduler/util"],
    module = "k8s.io/kubernetes",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apiserver__pkg__util__feature",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__component-helpers__scheduling__corev1",
        ":k8s.io__klog__v2",
        ":k8s.io__kube-scheduler__extender__v1",
        ":k8s.io__kubernetes__pkg__apis__core__v1__helper",
        ":k8s.io__kubernetes__pkg__features",
    ],
)

go_mod_download(
    name = "k8s.io__utils",
    _tag = "download",
    module = "k8s.io/utils",
    version = "v0.0.0-20210722164352-7f3ee0f31471",
)

go_module(
    name = "k8s.io__utils__buffer",
    download = ":_k8s.io__utils#download",
    install = ["buffer"],
    module = "k8s.io/utils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__utils__exec",
    download = ":_k8s.io__utils#download",
    install = ["exec"],
    module = "k8s.io/utils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__utils__integer",
    download = ":_k8s.io__utils#download",
    install = ["integer"],
    module = "k8s.io/utils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__utils__pointer",
    download = ":_k8s.io__utils#download",
    install = ["pointer"],
    module = "k8s.io/utils",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "k8s.io__utils__trace",
    download = ":_k8s.io__utils#download",
    install = ["trace"],
    module = "k8s.io/utils",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__klog__v2"],
)

go_mod_download(
    name = "logur.dev__adapter__logrus",
    _tag = "download",
    module = "logur.dev/adapter/logrus",
    version = "v0.4.1",
)

go_module(
    name = "logur.dev__adapter__logrus",
    download = ":_logur.dev__adapter__logrus#download",
    install = ["."],
    module = "logur.dev/adapter/logrus",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__sirupsen__logrus",
        ":logur.dev__logur",
    ],
)

go_mod_download(
    name = "logur.dev__adapter__zap",
    _tag = "download",
    module = "logur.dev/adapter/zap",
    version = "v0.4.1",
)

go_module(
    name = "logur.dev__adapter__zap",
    download = ":_logur.dev__adapter__zap#download",
    install = ["."],
    module = "logur.dev/adapter/zap",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
        ":logur.dev__adapter__zap__internal__keyvals",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__adapter__zap__internal__keyvals",
    download = ":_logur.dev__adapter__zap#download",
    install = ["internal/keyvals"],
    module = "logur.dev/adapter/zap",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "logur.dev__integration__logr",
    _tag = "download",
    module = "logur.dev/integration/logr",
    version = "v0.4.0",
)

go_module(
    name = "logur.dev__integration__logr",
    download = ":_logur.dev__integration__logr#download",
    install = ["."],
    module = "logur.dev/integration/logr",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":logur.dev__integration__logr__internal__keyvals",
        ":logur.dev__logur",
    ],
)

go_module(
    name = "logur.dev__integration__logr__internal__keyvals",
    download = ":_logur.dev__integration__logr#download",
    install = ["internal/keyvals"],
    module = "logur.dev/integration/logr",
    visibility = ["PUBLIC"],
    deps = [],
)

go_mod_download(
    name = "logur.dev__integration__watermill",
    _tag = "download",
    module = "logur.dev/integration/watermill",
    version = "v0.4.2",
)

go_module(
    name = "logur.dev__integration__watermill",
    download = ":_logur.dev__integration__watermill#download",
    install = ["."],
    module = "logur.dev/integration/watermill",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__ThreeDotsLabs__watermill",
        ":logur.dev__logur",
    ],
)

go_mod_download(
    name = "logur.dev__integration__zap",
    _tag = "download",
    module = "logur.dev/integration/zap",
    version = "v0.3.2",
)

go_module(
    name = "logur.dev__integration__zap",
    download = ":_logur.dev__integration__zap#download",
    install = ["."],
    module = "logur.dev/integration/zap",
    visibility = ["PUBLIC"],
    deps = [
        ":go.uber.org__zap",
        ":go.uber.org__zap__zapcore",
        ":logur.dev__logur",
    ],
)

go_mod_download(
    name = "logur.dev__logur",
    _tag = "download",
    module = "logur.dev/logur",
    version = "v0.17.0",
)

go_module(
    name = "logur.dev__logur",
    download = ":_logur.dev__logur#download",
    install = ["."],
    module = "logur.dev/logur",
    visibility = ["PUBLIC"],
    deps = [":logur.dev__logur__internal__keyvals"],
)

go_module(
    name = "logur.dev__logur__conformance",
    download = ":_logur.dev__logur#download",
    install = ["conformance"],
    module = "logur.dev/logur",
    visibility = ["PUBLIC"],
    deps = [":logur.dev__logur"],
)

go_module(
    name = "logur.dev__logur__internal__keyvals",
    download = ":_logur.dev__logur#download",
    install = ["internal/keyvals"],
    module = "logur.dev/logur",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "logur.dev__logur__logtesting",
    download = ":_logur.dev__logur#download",
    install = ["logtesting"],
    module = "logur.dev/logur",
    visibility = ["PUBLIC"],
    deps = [
        ":logur.dev__logur",
        ":logur.dev__logur__conformance",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__controller-runtime",
    _tag = "download",
    module = "sigs.k8s.io/controller-runtime",
    version = "v0.9.5",
)

go_module(
    name = "sigs.k8s.io__controller-runtime",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["."],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":sigs.k8s.io__controller-runtime__pkg__builder",
        ":sigs.k8s.io__controller-runtime__pkg__client__config",
        ":sigs.k8s.io__controller-runtime__pkg__config",
        ":sigs.k8s.io__controller-runtime__pkg__controller__controllerutil",
        ":sigs.k8s.io__controller-runtime__pkg__log",
        ":sigs.k8s.io__controller-runtime__pkg__manager",
        ":sigs.k8s.io__controller-runtime__pkg__manager__signals",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
        ":sigs.k8s.io__controller-runtime__pkg__scheme",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__builder",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/builder"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__rest",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
        ":sigs.k8s.io__controller-runtime__pkg__controller",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__manager",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
        ":sigs.k8s.io__controller-runtime__pkg__source",
        ":sigs.k8s.io__controller-runtime__pkg__webhook__admission",
        ":sigs.k8s.io__controller-runtime__pkg__webhook__conversion",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__cache",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/cache"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__cache",
        ":sigs.k8s.io__controller-runtime__pkg__cache__internal",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__internal__objectutil",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__cache__internal",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/cache/internal"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__metadata",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__certwatcher",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/certwatcher"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__fsnotify__fsnotify",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__client",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/client"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__conversion__queryparams",
        ":k8s.io__apimachinery__pkg__fields",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__selection",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__strategicpatch",
        ":k8s.io__apimachinery__pkg__watch",
        ":k8s.io__client-go__dynamic",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__metadata",
        ":k8s.io__client-go__rest",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
        ":sigs.k8s.io__controller-runtime__pkg__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__client__apiutil",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/client/apiutil"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":golang.org__x__time__rate",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__client-go__discovery",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__restmapper",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__client__config",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/client/config"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__clientcmd",
        ":k8s.io__client-go__tools__clientcmd__api",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__cluster",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/cluster"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes__scheme",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__record",
        ":sigs.k8s.io__controller-runtime__pkg__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__internal__recorder",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__config",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/config"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":sigs.k8s.io__controller-runtime__pkg__config__v1alpha1",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__config__v1alpha1",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/config/v1alpha1"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__component-base__config__v1alpha1",
        ":sigs.k8s.io__controller-runtime__pkg__scheme",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__controller",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/controller"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__internal__controller",
        ":sigs.k8s.io__controller-runtime__pkg__manager",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
        ":sigs.k8s.io__controller-runtime__pkg__ratelimiter",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
        ":sigs.k8s.io__controller-runtime__pkg__source",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__controller__controllerutil",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/controller/controllerutil"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__equality",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__utils__pointer",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__conversion",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/conversion"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__runtime"],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__event",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/event"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__controller-runtime__pkg__client"],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__handler",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/handler"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__types",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__event",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__healthz",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/healthz"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__sets",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__internal__controller",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/internal/controller"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__internal__controller__metrics",
        ":sigs.k8s.io__controller-runtime__pkg__log",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
        ":sigs.k8s.io__controller-runtime__pkg__reconcile",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
        ":sigs.k8s.io__controller-runtime__pkg__source",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__internal__controller__metrics",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/internal/controller/metrics"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__collectors",
        ":sigs.k8s.io__controller-runtime__pkg__metrics",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__internal__log",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/internal/log"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":sigs.k8s.io__controller-runtime__pkg__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__internal__objectutil",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/internal/objectutil"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__labels",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":sigs.k8s.io__controller-runtime__pkg__client__apiutil",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__internal__recorder",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/internal/recorder"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__api__core__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__kubernetes__typed__core__v1",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__record",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__leaderelection",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/leaderelection"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__util__uuid",
        ":k8s.io__client-go__kubernetes",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__leaderelection__resourcelock",
        ":sigs.k8s.io__controller-runtime__pkg__recorder",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__log",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/log"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-logr__logr"],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__manager",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/manager"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":github.com__prometheus__client_golang__prometheus__promhttp",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__util__errors",
        ":k8s.io__client-go__rest",
        ":k8s.io__client-go__tools__leaderelection",
        ":k8s.io__client-go__tools__leaderelection__resourcelock",
        ":k8s.io__client-go__tools__record",
        ":sigs.k8s.io__controller-runtime__pkg__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__cluster",
        ":sigs.k8s.io__controller-runtime__pkg__config",
        ":sigs.k8s.io__controller-runtime__pkg__config__v1alpha1",
        ":sigs.k8s.io__controller-runtime__pkg__healthz",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__internal__recorder",
        ":sigs.k8s.io__controller-runtime__pkg__leaderelection",
        ":sigs.k8s.io__controller-runtime__pkg__metrics",
        ":sigs.k8s.io__controller-runtime__pkg__recorder",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
        ":sigs.k8s.io__controller-runtime__pkg__webhook",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__manager__signals",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/manager/signals"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__metrics",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/metrics"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__client-go__tools__metrics",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__predicate",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/predicate"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__labels",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__event",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__ratelimiter",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/ratelimiter"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__reconcile",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/reconcile"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__apimachinery__pkg__types"],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__recorder",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/recorder"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [":k8s.io__client-go__tools__record"],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__runtime__inject",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/runtime/inject"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__rest",
        ":sigs.k8s.io__controller-runtime__pkg__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__scheme",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/scheme"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__source",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/source"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__cache",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__event",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
        ":sigs.k8s.io__controller-runtime__pkg__source__internal",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__source__internal",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/source/internal"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__client-go__tools__cache",
        ":k8s.io__client-go__util__workqueue",
        ":sigs.k8s.io__controller-runtime__pkg__client",
        ":sigs.k8s.io__controller-runtime__pkg__event",
        ":sigs.k8s.io__controller-runtime__pkg__handler",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__predicate",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__webhook",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/webhook"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":gomodules.xyz__jsonpatch__v2",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__client-go__kubernetes__scheme",
        ":sigs.k8s.io__controller-runtime__pkg__certwatcher",
        ":sigs.k8s.io__controller-runtime__pkg__healthz",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
        ":sigs.k8s.io__controller-runtime__pkg__webhook__admission",
        ":sigs.k8s.io__controller-runtime__pkg__webhook__internal__metrics",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__webhook__admission",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/webhook/admission"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-logr__logr",
        ":gomodules.xyz__jsonpatch__v2",
        ":k8s.io__api__admission__v1",
        ":k8s.io__api__admission__v1beta1",
        ":k8s.io__apimachinery__pkg__api__errors",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__apis__meta__v1__unstructured",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":k8s.io__apimachinery__pkg__util__json",
        ":k8s.io__apimachinery__pkg__util__runtime",
        ":k8s.io__client-go__kubernetes__scheme",
        ":sigs.k8s.io__controller-runtime__pkg__internal__log",
        ":sigs.k8s.io__controller-runtime__pkg__runtime__inject",
        ":sigs.k8s.io__controller-runtime__pkg__webhook__internal__metrics",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__webhook__conversion",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/webhook/conversion"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":k8s.io__apiextensions-apiserver__pkg__apis__apiextensions__v1beta1",
        ":k8s.io__apimachinery__pkg__api__meta",
        ":k8s.io__apimachinery__pkg__apis__meta__v1",
        ":k8s.io__apimachinery__pkg__runtime",
        ":k8s.io__apimachinery__pkg__runtime__schema",
        ":k8s.io__apimachinery__pkg__runtime__serializer",
        ":sigs.k8s.io__controller-runtime__pkg__conversion",
        ":sigs.k8s.io__controller-runtime__pkg__log",
    ],
)

go_module(
    name = "sigs.k8s.io__controller-runtime__pkg__webhook__internal__metrics",
    download = ":_sigs.k8s.io__controller-runtime#download",
    install = ["pkg/webhook/internal/metrics"],
    module = "sigs.k8s.io/controller-runtime",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__prometheus__client_golang__prometheus",
        ":github.com__prometheus__client_golang__prometheus__promhttp",
        ":sigs.k8s.io__controller-runtime__pkg__metrics",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__kustomize__api",
    _tag = "download",
    module = "sigs.k8s.io/kustomize/api",
    version = "v0.8.8",
)

go_module(
    name = "sigs.k8s.io__kustomize__api__builtins",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["builtins"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":github.com__imdario__mergo",
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__filters__annotations",
        ":sigs.k8s.io__kustomize__api__filters__imagetag",
        ":sigs.k8s.io__kustomize__api__filters__labels",
        ":sigs.k8s.io__kustomize__api__filters__namespace",
        ":sigs.k8s.io__kustomize__api__filters__patchjson6902",
        ":sigs.k8s.io__kustomize__api__filters__prefixsuffix",
        ":sigs.k8s.io__kustomize__api__filters__replicacount",
        ":sigs.k8s.io__kustomize__api__filters__valueadd",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__kv",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filesys",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filesys"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__annotations",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/annotations"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__filters__fsslice",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__fieldspec",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/fieldspec"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__internal__utils",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__filtersutil",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/filtersutil"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__kyaml__yaml"],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__fsslice",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/fsslice"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__imagetag",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/imagetag"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__filters__fsslice",
        ":sigs.k8s.io__kustomize__api__image",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__labels",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/labels"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__filters__fsslice",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__nameref",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/nameref"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__namespace",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/namespace"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__filters__fsslice",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__patchjson6902",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/patchjson6902"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__evanphx__json-patch",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__patchstrategicmerge",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/patchstrategicmerge"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__merge2",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__prefixsuffix",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/prefixsuffix"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__refvar",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/refvar"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__replicacount",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/replicacount"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__fieldspec",
        ":sigs.k8s.io__kustomize__api__filters__filtersutil",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__filters__valueadd",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["filters/valueadd"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__hasher",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["hasher"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__kyaml__yaml"],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__ifc",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["ifc"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__image",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["image"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__accumulator",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/accumulator"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__spec",
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__filters__nameref",
        ":sigs.k8s.io__kustomize__api__filters__refvar",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__plugins__builtinconfig",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__generators",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/generators"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-errors__errors",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__git",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/git"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__internal__utils",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__kusterr",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/kusterr"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__builtinconfig",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/builtinconfig"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__konfig__builtinpluginconsts",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__builtinhelpers",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/builtinhelpers"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__builtins",
        ":sigs.k8s.io__kustomize__api__resmap",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__execplugin",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/execplugin"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__google__shlex",
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__internal__plugins__utils",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__fnplugin",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/fnplugin"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__internal__plugins__utils",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
        ":sigs.k8s.io__kustomize__kyaml__runfn",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__loader",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/loader"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__plugins__builtinhelpers",
        ":sigs.k8s.io__kustomize__api__internal__plugins__execplugin",
        ":sigs.k8s.io__kustomize__api__internal__plugins__fnplugin",
        ":sigs.k8s.io__kustomize__api__internal__plugins__utils",
        ":sigs.k8s.io__kustomize__api__konfig",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__plugins__utils",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/plugins/utils"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__konfig",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__target",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/target"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__builtins",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__accumulator",
        ":sigs.k8s.io__kustomize__api__internal__plugins__builtinconfig",
        ":sigs.k8s.io__kustomize__api__internal__plugins__builtinhelpers",
        ":sigs.k8s.io__kustomize__api__internal__plugins__loader",
        ":sigs.k8s.io__kustomize__api__konfig",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__utils",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/utils"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [":github.com__pkg__errors"],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__internal__validate",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["internal/validate"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__api__ifc"],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__konfig",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["konfig"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__types",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__konfig__builtinpluginconsts",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["konfig/builtinpluginconsts"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__krusty",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["krusty"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__builtins",
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__internal__plugins__builtinhelpers",
        ":sigs.k8s.io__kustomize__api__internal__plugins__loader",
        ":sigs.k8s.io__kustomize__api__internal__target",
        ":sigs.k8s.io__kustomize__api__konfig",
        ":sigs.k8s.io__kustomize__api__loader",
        ":sigs.k8s.io__kustomize__api__provenance",
        ":sigs.k8s.io__kustomize__api__provider",
        ":sigs.k8s.io__kustomize__api__resmap",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__kv",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["kv"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__types",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__loader",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["loader"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filesys",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__git",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__provenance",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["provenance"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__provider",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["provider"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__hasher",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__validate",
        ":sigs.k8s.io__kustomize__api__resource",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__resid",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["resid"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__resmap",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["resmap"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__kusterr",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__resource",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__resource",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["resource"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__api__filters__patchstrategicmerge",
        ":sigs.k8s.io__kustomize__api__ifc",
        ":sigs.k8s.io__kustomize__api__internal__generators",
        ":sigs.k8s.io__kustomize__api__internal__kusterr",
        ":sigs.k8s.io__kustomize__api__konfig",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__kustomize__api__types",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__api__types",
    download = ":_sigs.k8s.io__kustomize__api#download",
    install = ["types"],
    module = "sigs.k8s.io/kustomize/api",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":sigs.k8s.io__kustomize__api__resid",
        ":sigs.k8s.io__yaml",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__kustomize__kyaml",
    _tag = "download",
    module = "sigs.k8s.io/kustomize/kyaml",
    version = "v0.10.17",
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__comments",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["comments"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__walk",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__errors",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["errors"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [":github.com__go-errors__errors"],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__ext",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["ext"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__fieldmeta",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["fieldmeta"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__spec",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__fn__runtime__container",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["fn/runtime/container"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__exec",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__fn__runtime__exec",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["fn/runtime/exec"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["fn/runtime/runtimeutil"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__comments",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__kio__kioutil",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__fn__runtime__starlark",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["fn/runtime/starlark"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":go.starlark.net__starlark",
        ":go.starlark.net__starlarkstruct",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
        ":sigs.k8s.io__kustomize__kyaml__internal__forked__github.com__qri-io__starlib__util",
        ":sigs.k8s.io__kustomize__kyaml__kio__filters",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__internal__forked__github.com__qri-io__starlib__util",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["internal/forked/github.com/qri-io/starlib/util"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__pkg__errors",
        ":go.starlark.net__starlark",
        ":go.starlark.net__starlarkstruct",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__kio",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["kio"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__monochromegane__go-gitignore",
        ":github.com__stretchr__testify__assert",
        ":github.com__xlab__treeprint",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__ext",
        ":sigs.k8s.io__kustomize__kyaml__kio__kioutil",
        ":sigs.k8s.io__kustomize__kyaml__sets",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__kio__filters",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["kio/filters"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__kio__kioutil",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__merge2",
        ":sigs.k8s.io__kustomize__kyaml__yaml__merge3",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__kio__kioutil",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["kio/kioutil"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__openapi",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["openapi"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-openapi__spec",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__openapi__kubernetesapi",
        ":sigs.k8s.io__kustomize__kyaml__openapi__kustomizationapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__openapi__kubernetesapi",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["openapi/kubernetesapi"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__kyaml__openapi__kubernetesapi__v1204"],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__openapi__kubernetesapi__v1204",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["openapi/kubernetesapi/v1204"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__openapi__kustomizationapi",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["openapi/kustomizationapi"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__runfn",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["runfn"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__container",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__exec",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__runtimeutil",
        ":sigs.k8s.io__kustomize__kyaml__fn__runtime__starlark",
        ":sigs.k8s.io__kustomize__kyaml__kio",
        ":sigs.k8s.io__kustomize__kyaml__kio__kioutil",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__sets",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["sets"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__davecgh__go-spew__spew",
        ":github.com__go-openapi__spec",
        ":gopkg.in__yaml.v2",
        ":gopkg.in__yaml.v3",
        ":sigs.k8s.io__kustomize__kyaml__errors",
        ":sigs.k8s.io__kustomize__kyaml__sets",
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__labels",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__labels",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/labels"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__selection",
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__sets",
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__validation",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__selection",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/selection"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__errors",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/util/errors"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__sets"],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__sets",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/util/sets"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__validation",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/util/validation"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__validation__field"],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__validation__field",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/internal/k8sgen/pkg/util/validation/field"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__errors",
        ":sigs.k8s.io__kustomize__kyaml__yaml__internal__k8sgen__pkg__util__sets",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__merge2",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/merge2"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__walk",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__merge3",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/merge3"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__walk",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__schema",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/schema"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
    ],
)

go_module(
    name = "sigs.k8s.io__kustomize__kyaml__yaml__walk",
    download = ":_sigs.k8s.io__kustomize__kyaml#download",
    install = ["yaml/walk"],
    module = "sigs.k8s.io/kustomize/kyaml",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__go-errors__errors",
        ":sigs.k8s.io__kustomize__kyaml__fieldmeta",
        ":sigs.k8s.io__kustomize__kyaml__openapi",
        ":sigs.k8s.io__kustomize__kyaml__sets",
        ":sigs.k8s.io__kustomize__kyaml__yaml",
        ":sigs.k8s.io__kustomize__kyaml__yaml__schema",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__structured-merge-diff__v4",
    _tag = "download",
    module = "sigs.k8s.io/structured-merge-diff/v4",
    version = "v4.2.1",
)

go_module(
    name = "sigs.k8s.io__structured-merge-diff__v4__fieldpath",
    download = ":_sigs.k8s.io__structured-merge-diff__v4#download",
    install = ["fieldpath"],
    module = "sigs.k8s.io/structured-merge-diff/v4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__json-iterator__go",
        ":sigs.k8s.io__structured-merge-diff__v4__schema",
        ":sigs.k8s.io__structured-merge-diff__v4__value",
    ],
)

go_module(
    name = "sigs.k8s.io__structured-merge-diff__v4__schema",
    download = ":_sigs.k8s.io__structured-merge-diff__v4#download",
    install = ["schema"],
    module = "sigs.k8s.io/structured-merge-diff/v4",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__structured-merge-diff__v4__typed",
    download = ":_sigs.k8s.io__structured-merge-diff__v4#download",
    install = ["typed"],
    module = "sigs.k8s.io/structured-merge-diff/v4",
    visibility = ["PUBLIC"],
    deps = [
        ":gopkg.in__yaml.v2",
        ":sigs.k8s.io__structured-merge-diff__v4__fieldpath",
        ":sigs.k8s.io__structured-merge-diff__v4__schema",
        ":sigs.k8s.io__structured-merge-diff__v4__value",
    ],
)

go_module(
    name = "sigs.k8s.io__structured-merge-diff__v4__value",
    download = ":_sigs.k8s.io__structured-merge-diff__v4#download",
    install = ["value"],
    module = "sigs.k8s.io/structured-merge-diff/v4",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__json-iterator__go",
        ":gopkg.in__yaml.v2",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__testing_frameworks",
    _tag = "download",
    module = "sigs.k8s.io/testing_frameworks",
    version = "v0.1.2",
)

go_module(
    name = "sigs.k8s.io__testing_frameworks__integration",
    download = ":_sigs.k8s.io__testing_frameworks#download",
    install = ["integration"],
    module = "sigs.k8s.io/testing_frameworks",
    visibility = ["PUBLIC"],
    deps = [
        ":sigs.k8s.io__testing_frameworks__integration__addr",
        ":sigs.k8s.io__testing_frameworks__integration__internal",
    ],
)

go_module(
    name = "sigs.k8s.io__testing_frameworks__integration__addr",
    download = ":_sigs.k8s.io__testing_frameworks#download",
    install = ["integration/addr"],
    module = "sigs.k8s.io/testing_frameworks",
    visibility = ["PUBLIC"],
    deps = [],
)

go_module(
    name = "sigs.k8s.io__testing_frameworks__integration__internal",
    download = ":_sigs.k8s.io__testing_frameworks#download",
    install = ["integration/internal"],
    module = "sigs.k8s.io/testing_frameworks",
    visibility = ["PUBLIC"],
    deps = [
        ":github.com__onsi__gomega__gbytes",
        ":github.com__onsi__gomega__gexec",
        ":sigs.k8s.io__testing_frameworks__integration__addr",
    ],
)

go_mod_download(
    name = "sigs.k8s.io__yaml",
    _tag = "download",
    module = "sigs.k8s.io/yaml",
    version = "v1.2.0",
)

go_module(
    name = "sigs.k8s.io__yaml",
    download = ":_sigs.k8s.io__yaml#download",
    install = ["."],
    module = "sigs.k8s.io/yaml",
    visibility = ["PUBLIC"],
    deps = [":gopkg.in__yaml.v2"],
)
