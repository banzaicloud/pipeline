go_binary(
    name = "worker",
    srcs = glob(
        ["*.go"],
        exclude = ["*_test.go"],
    ),
    visibility = ["PUBLIC"],
    deps = [
        "//.gen/cloudinfo",
        "//internal/anchore",
        "//internal/app/pipeline/process",
        "//internal/app/pipeline/process/processadapter",
        "//internal/cluster",
        "//internal/cluster/auth",
        "//internal/cluster/clusteradapter",
        "//internal/cluster/clustersecret",
        "//internal/cluster/clustersecret/clustersecretadapter",
        "//internal/cluster/clustersetup",
        "//internal/cluster/clustersetup/autoscaler",
        "//internal/cluster/clustersetup/velero",
        "//internal/cluster/clusterworkflow",
        "//internal/cluster/distribution/eks",
        "//internal/cluster/distribution/eks/eksadapter",
        "//internal/cluster/distribution/eks/eksprovider/adapter",
        "//internal/cluster/distribution/eks/eksprovider/driver",
        "//internal/cluster/distribution/eks/eksprovider/workflow",
        "//internal/cluster/distribution/eks/eksworkflow",
        "//internal/cluster/distribution/pke",
        "//internal/cluster/distribution/pke/pkeaws",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsadapter",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsprovider/workflow",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsworkflow",
        "//internal/cluster/dns",
        "//internal/cluster/endpoints",
        "//internal/cluster/infrastructure/aws/awsworkflow",
        "//internal/cluster/kubernetes",
        "//internal/cluster/workflow",
        "//internal/clustergroup",
        "//internal/clustergroup/adapter",
        "//internal/clustergroup/deployment",
        "//internal/cmd",
        "//internal/common/commonadapter",
        "//internal/global",
        "//internal/helm",
        "//internal/helm/helmadapter",
        "//internal/integratedservices",
        "//internal/integratedservices/integratedserviceadapter",
        "//internal/integratedservices/integratedserviceadapter/workflow",
        "//internal/integratedservices/operator",
        "//internal/integratedservices/services",
        "//internal/integratedservices/services/backup",
        "//internal/integratedservices/services/dns",
        "//internal/integratedservices/services/dns/dnsadapter",
        "//internal/integratedservices/services/expiry",
        "//internal/integratedservices/services/expiry/adapter",
        "//internal/integratedservices/services/expiry/adapter/workflow",
        "//internal/integratedservices/services/ingress",
        "//internal/integratedservices/services/ingress/ingressadapter",
        "//internal/integratedservices/services/logging",
        "//internal/integratedservices/services/monitoring",
        "//internal/integratedservices/services/securityscan",
        "//internal/integratedservices/services/securityscan/securityscanadapter",
        "//internal/integratedservices/services/vault",
        "//internal/kubernetes",
        "//internal/kubernetes/kubernetesadapter",
        "//internal/pke/workflow",
        "//internal/pke/workflow/adapter",
        "//internal/platform/appkit",
        "//internal/platform/buildinfo",
        "//internal/platform/cadence",
        "//internal/platform/database",
        "//internal/platform/errorhandler",
        "//internal/platform/log",
        "//internal/providers/azure/pke",
        "//internal/providers/azure/pke/adapter",
        "//internal/providers/azure/pke/driver",
        "//internal/providers/azure/pke/workflow",
        "//internal/providers/pke/pkeworkflow",
        "//internal/providers/pke/pkeworkflow/pkeworkflowadapter",
        "//internal/providers/vsphere/pke",
        "//internal/providers/vsphere/pke/adapter",
        "//internal/providers/vsphere/pke/driver",
        "//internal/providers/vsphere/pke/workflow",
        "//internal/secret/kubesecret",
        "//internal/secret/pkesecret",
        "//internal/secret/restricted",
        "//internal/secret/secretadapter",
        "//internal/secret/types",
        "//internal/security",
        "//pkg/auth",
        "//pkg/cadence/awssdk",
        "//pkg/cluster",
        "//pkg/hook",
        "//pkg/sdk/cadence",
        "//pkg/sdk/cadence/lib/pipeline/processlog",
        "//src/auth",
        "//src/auth/authdriver",
        "//src/auth/workflow",
        "//src/cluster",
        "//src/cluster/clusteradapter",
        "//src/dns",
        "//src/secret",
        "//third_party/go:emperror.dev__emperror",
        "//third_party/go:emperror.dev__errors",
        "//third_party/go:emperror.dev__errors__match",
        "//third_party/go:github.com__aws__aws-sdk-go__aws__session",
        "//third_party/go:github.com__banzaicloud__bank-vaults__pkg__sdk__auth",
        "//third_party/go:github.com__banzaicloud__bank-vaults__pkg__sdk__vault",
        "//third_party/go:github.com__banzaicloud__cadence-aws-sdk__activities__ec2",
        "//third_party/go:github.com__banzaicloud__cadence-aws-sdk__clients__ec2stub",
        "//third_party/go:github.com__jinzhu__gorm",
        "//third_party/go:github.com__mitchellh__mapstructure",
        "//third_party/go:github.com__oklog__run",
        "//third_party/go:github.com__sagikazarmark__appkit__run",
        "//third_party/go:github.com__spf13__pflag",
        "//third_party/go:github.com__spf13__viper",
        "//third_party/go:go.uber.org__cadence__activity",
        "//third_party/go:go.uber.org__cadence__worker",
        "//third_party/go:go.uber.org__cadence__workflow",
        "//third_party/go:logur.dev__integration__zap",
        "//third_party/go:logur.dev__logur",
    ],
)

go_test(
    name = "test",
    srcs = glob(["*.go"]),
    data = [
        "//config:config.dev.yaml",  # wollemi:keep
    ],
    deps = [
        "//.gen/cloudinfo",
        "//internal/anchore",
        "//internal/app/pipeline/process",
        "//internal/app/pipeline/process/processadapter",
        "//internal/cluster",
        "//internal/cluster/auth",
        "//internal/cluster/clusteradapter",
        "//internal/cluster/clustersecret",
        "//internal/cluster/clustersecret/clustersecretadapter",
        "//internal/cluster/clustersetup",
        "//internal/cluster/clustersetup/autoscaler",
        "//internal/cluster/clustersetup/velero",
        "//internal/cluster/clusterworkflow",
        "//internal/cluster/distribution/eks",
        "//internal/cluster/distribution/eks/eksadapter",
        "//internal/cluster/distribution/eks/eksprovider/adapter",
        "//internal/cluster/distribution/eks/eksprovider/driver",
        "//internal/cluster/distribution/eks/eksprovider/workflow",
        "//internal/cluster/distribution/eks/eksworkflow",
        "//internal/cluster/distribution/pke",
        "//internal/cluster/distribution/pke/pkeaws",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsadapter",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsprovider/workflow",
        "//internal/cluster/distribution/pke/pkeaws/pkeawsworkflow",
        "//internal/cluster/dns",
        "//internal/cluster/endpoints",
        "//internal/cluster/infrastructure/aws/awsworkflow",
        "//internal/cluster/kubernetes",
        "//internal/cluster/workflow",
        "//internal/clustergroup",
        "//internal/clustergroup/adapter",
        "//internal/clustergroup/deployment",
        "//internal/cmd",
        "//internal/common/commonadapter",
        "//internal/global",
        "//internal/helm",
        "//internal/helm/helmadapter",
        "//internal/integratedservices",
        "//internal/integratedservices/integratedserviceadapter",
        "//internal/integratedservices/integratedserviceadapter/workflow",
        "//internal/integratedservices/operator",
        "//internal/integratedservices/services",
        "//internal/integratedservices/services/backup",
        "//internal/integratedservices/services/dns",
        "//internal/integratedservices/services/dns/dnsadapter",
        "//internal/integratedservices/services/expiry",
        "//internal/integratedservices/services/expiry/adapter",
        "//internal/integratedservices/services/expiry/adapter/workflow",
        "//internal/integratedservices/services/ingress",
        "//internal/integratedservices/services/ingress/ingressadapter",
        "//internal/integratedservices/services/logging",
        "//internal/integratedservices/services/monitoring",
        "//internal/integratedservices/services/securityscan",
        "//internal/integratedservices/services/securityscan/securityscanadapter",
        "//internal/integratedservices/services/vault",
        "//internal/kubernetes",
        "//internal/kubernetes/kubernetesadapter",
        "//internal/pke/workflow",
        "//internal/pke/workflow/adapter",
        "//internal/platform/appkit",
        "//internal/platform/buildinfo",
        "//internal/platform/cadence",
        "//internal/platform/database",
        "//internal/platform/errorhandler",
        "//internal/platform/log",
        "//internal/providers/azure/pke",
        "//internal/providers/azure/pke/adapter",
        "//internal/providers/azure/pke/driver",
        "//internal/providers/azure/pke/workflow",
        "//internal/providers/pke/pkeworkflow",
        "//internal/providers/pke/pkeworkflow/pkeworkflowadapter",
        "//internal/providers/vsphere/pke",
        "//internal/providers/vsphere/pke/adapter",
        "//internal/providers/vsphere/pke/driver",
        "//internal/providers/vsphere/pke/workflow",
        "//internal/secret/kubesecret",
        "//internal/secret/pkesecret",
        "//internal/secret/restricted",
        "//internal/secret/secretadapter",
        "//internal/secret/types",
        "//internal/security",
        "//pkg/auth",
        "//pkg/cadence/awssdk",
        "//pkg/cluster",
        "//pkg/hook",
        "//pkg/mirror",
        "//pkg/sdk/cadence",
        "//pkg/sdk/cadence/lib/pipeline/processlog",
        "//src/auth",
        "//src/auth/authdriver",
        "//src/auth/workflow",
        "//src/cluster",
        "//src/cluster/clusteradapter",
        "//src/dns",
        "//src/secret",
        "//third_party/go:emperror.dev__emperror",
        "//third_party/go:emperror.dev__errors",
        "//third_party/go:emperror.dev__errors__match",
        "//third_party/go:github.com__aws__aws-sdk-go__aws__session",
        "//third_party/go:github.com__banzaicloud__bank-vaults__pkg__sdk__auth",
        "//third_party/go:github.com__banzaicloud__bank-vaults__pkg__sdk__vault",
        "//third_party/go:github.com__banzaicloud__cadence-aws-sdk__activities__ec2",
        "//third_party/go:github.com__banzaicloud__cadence-aws-sdk__clients__ec2stub",
        "//third_party/go:github.com__jinzhu__gorm",
        "//third_party/go:github.com__mitchellh__mapstructure",
        "//third_party/go:github.com__oklog__run",
        "//third_party/go:github.com__sagikazarmark__appkit__run",
        "//third_party/go:github.com__spf13__pflag",
        "//third_party/go:github.com__spf13__viper",
        "//third_party/go:github.com__stretchr__testify__require",
        "//third_party/go:go.uber.org__cadence__activity",
        "//third_party/go:go.uber.org__cadence__worker",
        "//third_party/go:go.uber.org__cadence__workflow",
        "//third_party/go:logur.dev__integration__zap",
        "//third_party/go:logur.dev__logur",
    ],
)
