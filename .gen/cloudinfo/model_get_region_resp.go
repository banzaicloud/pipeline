/*
Product Info.

The product info application uses the cloud provider APIs to asynchronously fetch and parse instance type attributes and prices, while storing the results in an in memory cache and making it available as structured data through a REST API.

API version: 0.9.5
Contact: info@banzaicloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudinfo

import (
	"encoding/json"
)

// GetRegionResp GetRegionResp holds the detailed description of a specific region of a cloud provider
type GetRegionResp struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Zones []string `json:"zones,omitempty"`
}

// NewGetRegionResp instantiates a new GetRegionResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRegionResp() *GetRegionResp {
	this := GetRegionResp{}
	return &this
}

// NewGetRegionRespWithDefaults instantiates a new GetRegionResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRegionRespWithDefaults() *GetRegionResp {
	this := GetRegionResp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRegionResp) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionResp) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRegionResp) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetRegionResp) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRegionResp) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionResp) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRegionResp) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRegionResp) SetName(v string) {
	o.Name = &v
}

// GetZones returns the Zones field value if set, zero value otherwise.
func (o *GetRegionResp) GetZones() []string {
	if o == nil || o.Zones == nil {
		var ret []string
		return ret
	}
	return o.Zones
}

// GetZonesOk returns a tuple with the Zones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionResp) GetZonesOk() ([]string, bool) {
	if o == nil || o.Zones == nil {
		return nil, false
	}
	return o.Zones, true
}

// HasZones returns a boolean if a field has been set.
func (o *GetRegionResp) HasZones() bool {
	if o != nil && o.Zones != nil {
		return true
	}

	return false
}

// SetZones gets a reference to the given []string and assigns it to the Zones field.
func (o *GetRegionResp) SetZones(v []string) {
	o.Zones = v
}

func (o GetRegionResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Zones != nil {
		toSerialize["zones"] = o.Zones
	}
	return json.Marshal(toSerialize)
}

type NullableGetRegionResp struct {
	value *GetRegionResp
	isSet bool
}

func (v NullableGetRegionResp) Get() *GetRegionResp {
	return v.value
}

func (v *NullableGetRegionResp) Set(val *GetRegionResp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRegionResp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRegionResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRegionResp(val *GetRegionResp) *NullableGetRegionResp {
	return &NullableGetRegionResp{value: val, isSet: true}
}

func (v NullableGetRegionResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRegionResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


