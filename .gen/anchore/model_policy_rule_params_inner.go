/*
Anchore Engine API Server

This is the Anchore Engine API. Provides the primary external API for users of the service.

API version: 0.1.20
Contact: nurmi@anchore.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package anchore

import (
	"encoding/json"
)

// PolicyRuleParamsInner struct for PolicyRuleParamsInner
type PolicyRuleParamsInner struct {
	Name string `json:"name"`
	Value string `json:"value"`
}

// NewPolicyRuleParamsInner instantiates a new PolicyRuleParamsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyRuleParamsInner(name string, value string) *PolicyRuleParamsInner {
	this := PolicyRuleParamsInner{}
	this.Name = name
	this.Value = value
	return &this
}

// NewPolicyRuleParamsInnerWithDefaults instantiates a new PolicyRuleParamsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyRuleParamsInnerWithDefaults() *PolicyRuleParamsInner {
	this := PolicyRuleParamsInner{}
	return &this
}

// GetName returns the Name field value
func (o *PolicyRuleParamsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PolicyRuleParamsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PolicyRuleParamsInner) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *PolicyRuleParamsInner) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PolicyRuleParamsInner) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PolicyRuleParamsInner) SetValue(v string) {
	o.Value = v
}

func (o PolicyRuleParamsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyRuleParamsInner struct {
	value *PolicyRuleParamsInner
	isSet bool
}

func (v NullablePolicyRuleParamsInner) Get() *PolicyRuleParamsInner {
	return v.value
}

func (v *NullablePolicyRuleParamsInner) Set(val *PolicyRuleParamsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyRuleParamsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyRuleParamsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyRuleParamsInner(val *PolicyRuleParamsInner) *NullablePolicyRuleParamsInner {
	return &NullablePolicyRuleParamsInner{value: val, isSet: true}
}

func (v NullablePolicyRuleParamsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyRuleParamsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


