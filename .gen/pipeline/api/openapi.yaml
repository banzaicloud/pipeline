openapi: 3.0.0
info:
  contact:
    email: info@banzaicloud.com
  description: |
    Pipeline is a feature rich application platform,
    built for containers on top of Kubernetes to automate the DevOps experience,
    continuous application development and the lifecycle of deployments.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Pipeline API
  version: latest
servers:
- url: http://localhost:9090
tags:
- description: Clusters related functions
  name: clusters
- description: Deployment related functions for a cluster
  name: deployments
- description: Auth related functions
  name: auth
- description: Secrets related functions
  name: secrets
- description: Organizations related functions
  name: organizations
- description: Common API functions
  name: common
- description: Users related functions
  name: users
- description: Cloud config related functions
  name: info
- description: Storage related functions
  name: storage
- description: Horizontal Pod Autoscaling related functions
  name: hpa
- description: Google projects related operations
  name: projects
- description: ARK service related functions
  name: ark
- description: 'ARK: buckets related functions'
  name: ark-buckets
- description: 'ARK: backups related functions'
  name: ark-backups
- description: 'ARK: schedules related functions'
  name: ark-schedules
- description: 'ARK: restores related functions'
  name: ark-restores
paths:
  /api/version:
    get:
      description: Return Pipeline build and deployment info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: Version info
      tags:
      - common
  /api/v1/orgs/{orgId}/clusters:
    get:
      description: Listing all the K8S clusters from the cloud
      operationId: ListClusters
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GetClusterStatusResponse'
                type: array
          description: All cluster listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List clusters
      tags:
      - clusters
    post:
      description: Create a new K8S cluster in the cloud
      operationId: CreateCluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              AKS:
                value:
                  name: azcluster-pipelineuser-123
                  location: westeurope
                  cloud: azure
                  instanceType: Standard_D2_v2
                  properties:
                    aks:
                      $ref: '#/components/schemas/CreateAKSProperties'
              GKE:
                value:
                  name: gkecluster-pipelineuser-123
                  location: us-central1-a
                  cloud: google
                  instanceType: n1-standard-1
                  properties:
                    gke:
                      $ref: '#/components/schemas/CreateGKEProperties'
            schema:
              type: object
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClusterResponse_202'
          description: Cluster created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}:
    delete:
      description: Deleting a K8S cluster
      operationId: DeleteCluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Ignore errors during deletion
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "202":
          description: Cluster delete in progress
        "204":
          description: Cluster deleted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete cluster
      tags:
      - clusters
    get:
      description: Getting cluster status
      operationId: GetCluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterStatusResponse'
          description: Getting cluster succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get cluster status
      tags:
      - clusters
    head:
      description: Getting the K8S cluster status
      operationId: GetClusterStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Cluster exists
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get cluster status
      tags:
      - clusters
    put:
      description: Updating an existing K8S cluster
      operationId: UpdateClusterDeprecated
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "202":
          description: Cluster update accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/pods:
    get:
      description: Getting pod details
      operationId: GetPodDetails
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodDetailsResponse'
          description: Getting cluster succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get pod details
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/posthooks:
    put:
      description: Run posthook functions
      operationId: ClusterPostHooks
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReRunPostHook'
        required: true
      responses:
        "200":
          description: Posthooks started
      security:
      - bearerAuth: []
      summary: Run posthook functions
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/config:
    get:
      description: Getting a K8S cluster config file
      operationId: GetClusterConfig
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfig'
          description: Getting config file succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get a cluster config
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/oidcconfig:
    get:
      description: Getting a K8S cluster config file with OIDC credentials
      operationId: GetOIDCClusterConfig
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterConfig'
          description: Getting config file succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get a cluster config with OIDC login
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/endpoints:
    get:
      description: List service public endpoints
      operationId: ListClusterEndpoints
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Selected deployment release name
        explode: true
        in: query
        name: releaseName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndpointsResponse'
          description: Endpoints listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List service public endpoints
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/nodes:
    get:
      description: List cluster nodes
      operationId: ListNodes
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodesResponse'
          description: Nodes listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List cluster nodes
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/secrets:
    get:
      description: List secrets which belongs to cluster
      operationId: ListClusterSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Selected deployment release name
        explode: true
        in: query
        name: releaseName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecretItem'
                type: array
          description: Secrets listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List secrets which belongs to cluster
      tags:
      - clusters
    post:
      description: Install secrets into cluster
      operationId: InstallSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallSecretsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InstallSecretResponse'
                type: array
          description: Secrets are installed into cluster
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Install secrets into cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/secrets/{secretName}:
    patch:
      description: Merge a particular secret with an existing one
      operationId: MergeSecret
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret name as it will be seen in the cluster
        explode: false
        in: path
        name: secretName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallSecretRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallSecretResponse'
          description: secret is installed into the cluster
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Merge a particular secret with an existing one with optional remapping
      tags:
      - clusters
    post:
      description: Install a particular secret into a cluster
      operationId: InstallSecret
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret name as it will be seen in the cluster
        explode: false
        in: path
        name: secretName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallSecretRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallSecretResponse'
          description: secret is installed into the cluster
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Install a particular secret into a cluster with optional remapping
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/bootstrap:
    get:
      description: Get cluster bootstrap info
      operationId: GetClusterBootstrap
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClusterBootstrapResponse'
          description: Getting bootstrap succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get cluster bootstrap info
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/scanlog:
    get:
      description: List scans
      operationId: ListScans
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanLogList'
          description: Scan listing
      security:
      - bearerAuth: []
      summary: List scans
      tags:
      - scanlog
  /api/v1/orgs/{orgId}/clusters/{id}/scanlog/{releaseName}:
    get:
      description: List scans by release
      operationId: ListScansByRelease
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: release name identification
        explode: false
        in: path
        name: releaseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanLogList'
          description: Scan listing
      security:
      - bearerAuth: []
      summary: List scans by release
      tags:
      - scanlog
  /api/v1/orgs/{orgId}/helm/repos:
    get:
      description: Listing Helm repositories in the cluster
      operationId: HelmListRepos
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReposListResponse'
          description: Repositories listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List repositories
      tags:
      - helm
    post:
      description: Add new Helm repository
      operationId: HelmReposAdd
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmReposAddRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmRepoListItem'
          description: resource successfully added.
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Add Repo
      tags:
      - helm
  /api/v1/orgs/{orgId}/helm/repos/{repoName}:
    delete:
      description: Delete  Helm repository
      operationId: HelmReposDelete
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Helm repo name
        explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReposDeleteResponse'
          description: resource deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete Repo
      tags:
      - helm
    put:
      description: Modify Helm repository
      operationId: HelmReposModify
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Helm repo name
        explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HelmReposModifyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReposUpdateResponse'
          description: resource modified successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Modify Repo
      tags:
      - helm
  /api/v1/orgs/{orgId}/helm/repos/{repoName}/update:
    put:
      description: Modify Helm repository
      operationId: HelmReposUpdate
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Helm repo name
        explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmReposUpdateResponse'
          description: resource modified successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update Repo
      tags:
      - helm
  /api/v1/orgs/{orgId}/helm/charts:
    get:
      description: Get available Helm chart's list
      operationId: HelmChartList
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Chart Name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Repo Name
        explode: true
        in: query
        name: repo
        required: false
        schema:
          type: string
        style: form
      - description: Chart version (latest)
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmChartsListResponse'
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Chart List
      tags:
      - helm
  /api/v1/orgs/{orgId}/helm/chart/{repoName}/{chartName}:
    get:
      description: Get helm chart details
      operationId: HelmChartDetails
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Chart repository name
        explode: false
        in: path
        name: repoName
        required: true
        schema:
          type: string
        style: simple
      - description: Chart Name
        explode: false
        in: path
        name: chartName
        required: true
        schema:
          type: string
        style: simple
      - description: Chart version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelmChartDetailsResponse'
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Chart details
      tags:
      - helm
  /api/v1/orgs/{orgId}/clusters/{id}/deployments:
    get:
      description: Listing Helm deployments
      operationId: ListDeployments
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment tag to filter for
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
          description: Deployments listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List deployments
      tags:
      - deployments
    head:
      description: Checking if tiller ready to accept deployments
      operationId: GetTillerStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Tiller is available
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get tiller status
      tags:
      - deployments
    post:
      description: Creating a Helm deployment
      operationId: CreateDeployment
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateDeploymentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'
          description: Deployment created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create a Helm deployment
      tags:
      - deployments
  /api/v1/orgs/{orgId}/clusters/{id}/whitelists:
    get:
      description: List Whitelisted deployments
      operationId: ListWhitelists
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseWhiteList'
          description: List Whitelists
      security:
      - bearerAuth: []
      summary: List Whitelisted deployments
      tags:
      - whitelist
    post:
      description: Create Whitelisted deployment
      operationId: CreateWhitelists
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReleaseWhiteListItem'
        required: true
      responses:
        "200":
          description: Whitelist created
      security:
      - bearerAuth: []
      summary: Create Whitelisted deployment
      tags:
      - whitelist
  /api/v1/orgs/{orgId}/clusters/{id}/whitelists/{name}:
    delete:
      description: Delete Whitelisted deployment
      operationId: DeleteWhitelist
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Selected whitelist identification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Whitelist deleted
      security:
      - bearerAuth: []
      summary: Delete Whitelisted deployment
      tags:
      - whitelist
  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}:
    delete:
      description: Deleting a Helm deployment
      operationId: DeleteDeployment
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeploymentResponse'
          description: Deployment deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete deployment
      tags:
      - deployments
    get:
      description: Retrieves the details of a deployment
      operationId: GetDeployment
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Deployment tag
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentResponse'
          description: Deployment details
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get deployment details
      tags:
      - deployments
    head:
      description: Checking the status of a deployment through the Helm client API
      operationId: HelmDeploymentStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Deployment status is OK
        "400":
          description: Error during checking deployment status
        "401":
          description: Unauthorized
        "404":
          description: Deployment not found
      security:
      - bearerAuth: []
      summary: Check deployment status
      tags:
      - deployments
    put:
      description: Updating a Helm deployment
      operationId: UpdateDeployment
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateDeploymentRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'
          description: Deployment updated successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update deployment
      tags:
      - deployments
  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/resources:
    get:
      description: Retrieves the K8s resources of a deployment
      operationId: GetDeploymentResource
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: K8s resource type
        explode: true
        in: query
        name: resourceTypes
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentResourcesResponse'
          description: Deployment resources
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get deployment K8s resources
      tags:
      - deployments
  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/images:
    get:
      description: Retrieves the K8s images of a deployment
      operationId: GetDeploymentImages
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentImageList'
          description: Deployment images
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get deployment K8s images
      tags:
      - deployments
  /api/v1/orgs/{orgId}/clusters/{id}/hpa:
    delete:
      description: Delete scaling info for a Helm deployment
      operationId: DeleteDeploymentAutoscaling
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment or StatefulSet name
        explode: true
        in: query
        name: scaleTarget
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: Deployment autoscaling updated successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete Deployment Scaling
      tags:
      - hpa
    get:
      description: Get scaling info for a Helm deployment
      operationId: GetDeploymentAutoscaling
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Deployment or StatefulSet name
        explode: true
        in: query
        name: scaleTarget
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScalingResponse'
          description: Deployment autoscaling info
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get Deployment Scaling Info
      tags:
      - hpa
    put:
      description: Create / update scaling info for a Helm deployment
      operationId: UpdateDeploymentAutoscaling
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentScalingRequest'
        required: true
      responses:
        "201":
          description: Deployment autoscaling updated successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create / Update Deployment Scaling
      tags:
      - hpa
  /api/v1/tokens:
    get:
      description: List all API tokens
      operationId: ListTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenListResponseItem'
                type: array
          description: Tokens listed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List all API tokens
      tags:
      - auth
    post:
      description: Create token
      operationId: CreateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreateResponse'
          description: Token created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create token
      tags:
      - auth
  /api/v1/tokens/{tokenId}:
    delete:
      description: Delete an API token
      operationId: DeleteToken
      parameters:
      - description: Token identification
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          example: a4358708-c525-4c78-89c2-c1cbe0f3f76c
          type: string
        style: simple
      responses:
        "204":
          description: Token deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete an API token
      tags:
      - auth
  /api/v1/orgs/{orgId}/secrets:
    get:
      description: Listing secrets
      operationId: GetSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret's type to filter with
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - amazon
          - azure
          - google
          - kubernetes
          - generic
          - tls
          - ssh
          type: string
        style: form
      - description: The selected tag to filter with
        explode: true
        in: query
        name: tags
        required: false
        schema:
          example:
          - release:pipeline-monitoring
          items:
            type: string
          type: array
        style: form
      - description: Marks if to present secret values or just the keys
        explode: true
        in: query
        name: values
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecretItem'
                type: array
          description: Secrets listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List secrets
      tags:
      - secrets
    post:
      description: Adding secrets
      operationId: AddSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: validation is skipped or not
        explode: true
        in: query
        name: validate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecretResponse'
          description: Secret saved successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Add secrets
      tags:
      - secrets
  /api/v1/secret-types:
    get:
      description: List secret types definitions
      operationId: ListSecretTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/SecretTypeResponse'
                example:
                  tls:
                    fields:
                    - name: hosts
                      required: true
                    - name: validity
                      required: false
                type: object
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List secret types
      tags:
      - secrets
  /api/v1/secret-types/{type}:
    get:
      description: Get a specific secret type and describe it's fields
      operationId: GetSecretType
      parameters:
      - description: Secret type
        explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretTypeResponse'
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get a specific secret type
      tags:
      - secrets
  /api/v1/orgs/{orgId}/secrets/{secretId}:
    delete:
      description: Deleting secrets
      operationId: DeleteSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Secret deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete secrets
      tags:
      - secrets
    get:
      description: Get secret
      operationId: GetSecret
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretItem'
          description: Secret returned successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get secret
      tags:
      - secrets
    put:
      description: Update secrets
      operationId: UpdateSecrets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: validation is skipped or not
        explode: true
        in: query
        name: validate
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecretResponse'
          description: Secret updated successfully
        "409":
          content:
            application/json:
              examples:
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret with this name already exists
                    error: check-and-set parameter did not match the current version
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Conflict
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update secrets
      tags:
      - secrets
  /api/v1/orgs/{orgId}/secrets/{secretId}/validate:
    get:
      description: Validate secret
      operationId: ValidateSecret
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Valid secret
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Validate secret
      tags:
      - secrets
  /api/v1/orgs/{orgId}/secrets/{secretId}/tags:
    get:
      description: Get the tags of a secret
      operationId: GetSecretTags
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretTags'
          description: Secret tags returned successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get the tags of a secret
      tags:
      - secrets
  /api/v1/orgs/{orgId}/secrets/{secretId}/tags/{tag}:
    delete:
      description: Delete a tag from a secret
      operationId: DeleteSecretTag
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Secret tag deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete a tag from a secret
      tags:
      - secrets
    put:
      description: Add a tag to a secret
      operationId: AddSecretTag
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: path
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Tag
        explode: false
        in: path
        name: tag
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretTags'
          description: Secret tags returned successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Add a tag to a secret
      tags:
      - secrets
  /api/v1/orgs/{orgId}:
    get:
      description: Getting organization
      operationId: GetOrg
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListItemResponse'
          description: Organization getting successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get organization
      tags:
      - organizations
  /api/v1/orgs:
    get:
      description: Listing organizations
      operationId: ListOrgs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationListItemResponse'
                type: array
          description: Organizations listed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List organizations
      tags:
      - organizations
    put:
      operationId: SyncOrgs
      responses:
        "200":
          description: Organizations synchronized successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Synchronize organizations
      tags:
      - organizations
  /api:
    get:
      description: Listing Pipeline API endpoint
      operationId: ListEndpoints
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - /api/v1/orgs
                - /api/v1/orgs/:orgId
                items:
                  type: string
                type: array
          description: Endpoints listed
      summary: List Pipeline API endpoints
      tags:
      - common
  /api/v1/orgs/{orgId}/users:
    get:
      description: Listing users
      operationId: ListUsers
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserResponse'
          description: Users listed
      security:
      - bearerAuth: []
      summary: List users
      tags:
      - users
  /api/v1/orgs/{orgId}/users/{userId}:
    get:
      description: Getting user
      operationId: GetUsers
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: User identification
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Getting user succeeded
      security:
      - bearerAuth: []
      summary: Get user
      tags:
      - users
  /api/v1/me:
    get:
      description: Get current user
      operationId: GetCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Getting current user succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get current user
      tags:
      - users
  /api/v1/capabilities:
    get:
      description: Retrieve Pipeline capabilities
      operationId: ListCapabilities
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                example:
                  features:
                    monitoring:
                      enabled: true
                    securityScan:
                      enabled: true
                      managed: true
                    vault:
                      enabled: true
                      managed: false
                type: object
          description: capabilities successfully returned
      summary: Lists configured Pipeline capabilities
      tags:
      - pipeline
  /api/v1/orgs/{orgId}/azure/resourcegroups:
    get:
      description: Get all resource groups
      operationId: GetResourceGroups
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identifier
        explode: false
        in: header
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - resourceGroup1
                - resourceGroup2
                items:
                  type: string
                type: array
          description: Azure resource groups listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get all resource groups
      tags:
      - info
    post:
      description: Create resource groups
      operationId: CreateResourceGroup
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceGroup'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupCreated'
          description: Azure resource group created
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create resource groups
      tags:
      - info
  /api/v1/orgs/{orgId}/buckets:
    get:
      description: List object store buckets accessible by the credentials referenced
        by the given secret. If no credentials provided all managed buckets are returned
        for all cloud types.
      operationId: ListObjectStoreBuckets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification. If not provided only the managed buckets
          (those created via pipeline) are listed
        explode: false
        in: header
        name: secretId
        required: false
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider - mandatory if secretId header
          is provided
        explode: true
        in: query
        name: cloudType
        required: false
        schema:
          enum:
          - amazon
          - google
          - azure
          type: string
        style: form
      - description: Signals whether the secret name is to be returned
        explode: true
        in: query
        name: include
        required: false
        schema:
          enum:
          - secret
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStorageBucketsResponse'
          description: Storage buckets listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List object storage buckets
      tags:
      - storage
    post:
      description: Creates a new object store bucket on the Cloud provider referenced
        by the given secret. The credentials for creating the bucket is taken from
        the provided secret.
      operationId: CreateObjectStoreBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateObjectStoreBucketRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateObjectStoreBucketResponse'
          description: Storage bucket creation request accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Creates a new object store bucket with the given params
      tags:
      - storage
  /api/v1/orgs/{orgId}/buckets/{name}:
    delete:
      description: Deletes the object store bucket identified by the given name. The
        credentials for deleting the bucket is taken from the provided secret.
      operationId: DeleteObjectStoreBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Bucket identification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Is the operation forced
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Azure resource group the storage account that holds the bucket
          (storage container) to be deleted
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      - description: Azure storage account to delete the bucket (storage container)
          from
        explode: true
        in: query
        name: storageAccount
        required: false
        schema:
          type: string
        style: form
      - description: The region to delete the bucket from. Required on Amazon, Oracle
          and Alibaba cloud providers.
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Storage bucket deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Deletes the object store bucket with the given name
      tags:
      - storage
    get:
      description: Retrieves the details of the object store bucket given its name
      operationId: GetBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Bucket identification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: false
        schema:
          type: string
        style: simple
      - description: Secret identification by name
        explode: false
        in: header
        name: secretName
        required: false
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Azure resource group to lookup the bucket(storage container)
          under. Required only on Azure cloud provider.
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      - description: Azure storage account to lookup the bucket(storage container)
          under. Required only on Azure cloud provider.
        explode: true
        in: query
        name: storageAccount
        required: false
        schema:
          type: string
        style: form
      - description: The region to lookup the bucket under. Required on Amazon, Oracle
          and Alibaba cloud providers.
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketInfo'
          description: Object store bucket details
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get object store bucket details
      tags:
      - storage
    head:
      description: Retrieves the status of the object store bucket given its name
      operationId: GetObjectStoreBucketStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Bucket identification
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: false
        schema:
          type: string
        style: simple
      - description: Secret identification by name
        explode: false
        in: header
        name: secretName
        required: false
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Azure resource group to lookup the bucket(storage container)
          under. Required only on Azure cloud provider.
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      - description: Azure storage account to lookup the bucket(storage container)
          under. Required only on Azure cloud provider.
        explode: true
        in: query
        name: storageAccount
        required: false
        schema:
          type: string
        style: form
      - description: The region to lookup the bucket under. Required on Amazon, Oracle
          and Alibaba cloud providers.
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Object store buckets exists
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get object store bucket status
      tags:
      - storage
  /api/v1/orgs/{orgId}/networks:
    get:
      description: List VPC networks accessible by the organization.
      operationId: ListVPCNetworks
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Identifies the region of the VPC network (required when cloudType
          != azure)
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      - description: Identifies the resource group of the Azure virtual network (required
          when cloudType == azure)
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVPCNetworksResponse'
          description: List of VPC networks
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List VPC networks
      tags:
      - network
  /api/v1/orgs/{orgId}/networks/{networkId}/subnets:
    get:
      description: List subnetworks of the given VPC network
      operationId: ListVPCSubnets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: VPC network identification
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Identifies the region of the VPC network (required when cloudType
          != azure)
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      - description: Identifies the resource group of the Azure virtual network (required
          when cloudType == azure)
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVPCSubnetsResponse'
          description: List of VPC network subnets
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List VPC subnetworks
      tags:
      - network
  /api/v1/orgs/{orgId}/networks/{networkId}/routeTables:
    get:
      description: List route tables of the given VPC network
      operationId: ListRouteTables
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: VPC network identification
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: string
        style: simple
      - description: Secret identification
        explode: false
        in: header
        name: secretId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifies the cloud provider
        explode: true
        in: query
        name: cloudType
        required: true
        schema:
          enum:
          - amazon
          - google
          - azure
          - oracle
          - alibaba
          type: string
        style: form
      - description: Identifies the region of the VPC network (required when cloudType
          != azure)
        explode: true
        in: query
        name: region
        required: false
        schema:
          type: string
        style: form
      - description: Identifies the resource group of the Azure virtual network (required
          when cloudType == azure)
        explode: true
        in: query
        name: resourceGroup
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRouteTablesResponse'
          description: List of VPC network route tables
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List VPC route tables
      tags:
      - network
  /api/v1/orgs/{orgId}/clusters/{id}/images:
    get:
      description: List Images used in cluster
      operationId: ListImages
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterImageList'
          description: List Images
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List Images used in cluster
      tags:
      - images
  /api/v1/orgs/{orgId}/clusters/{id}/images/{imageDigest}/deployments:
    get:
      description: List Deployments by Image
      operationId: ListDeploymentsByImage
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Image digest
        explode: false
        in: path
        name: imageDigest
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
          description: List Images
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List Deployments by Image
      tags:
      - images
  /api/v1/orgs/{orgId}/clusters/{id}/pke/leader:
    delete:
      operationId: DeleteLeaderElection
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Leader deletion successful
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete cluster leader
      tags:
      - clusters
    get:
      operationId: GetLeaderElection
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLeaderElectionResponse'
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Query cluster leader
      tags:
      - clusters
    post:
      operationId: PostLeaderElection
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLeaderElectionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLeaderElectionResponse'
          description: Application successful
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostLeaderElectionResponse'
          description: Leader already elected
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Apply as new cluster leader
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/pke/ready:
    get:
      operationId: GetReadyPKENode
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKEClusterReadinessResponse'
          description: Readiness information
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Query reported node readiness information
      tags:
      - clusters
    post:
      operationId: PostReadyPKENode
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReadyPKENodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Report to Pipeline that a new node is ready (to be called by PKE installer)
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/pke/status:
    post:
      operationId: ReportPKENodeStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPKENodeStatusRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportPKENodeStatusResponse'
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Report to Pipeline the progress of the bootstrapping of a new node
        (to be called by PKE installer)
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/pke/commands:
    get:
      description: Get the commands to use for bootstrapping nodes of a PKE cluster
        in each nodepool
      operationId: GetPKECommands
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPKECommandsResponse'
          description: Map of nodepool names to commands to use
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List bootstrap commands for namespaces
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/namespaces:
    get:
      description: Lists namespaces for a cluster
      operationId: ListNamespaces
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResponse'
          description: Namespaces listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Lists namespaces for a cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/namespaces/{namespace}:
    delete:
      description: Delete namespace from a cluster
      operationId: DeleteNamespace
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Kubernetes namespace
        explode: false
        in: path
        name: namespace
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Namespace deletion started
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete namespace from a cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/cloud/google/projects:
    get:
      description: Retrieves projects visible by the user represented by the secretId
        header from the google cloud
      operationId: ListProjects
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Secret identification.
        explode: true
        in: query
        name: secretId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProjects'
          description: List of projects visible for the user
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Retrieves projects visible for the user identified by the secret id
      tags:
      - google
  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/enable:
    post:
      description: Enable ARK service
      operationId: EnableARK
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnableARKRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnableARKResponse'
          description: ARK service deployed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Enable ARK service
      tags:
      - ark
  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/disable:
    post:
      description: Disable ARK service
      operationId: DisableARK
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableARKResponse'
          description: ARK service removed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Disable ARK service
      tags:
      - ark
  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/status:
    get:
      description: Check ARK service status
      operationId: CheckARKStatusGET
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupServiceStatusResponse'
          description: ARK service running
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Check ARK service status
      tags:
      - ark
    head:
      description: Check ARK service status
      operationId: CheckARKStatus
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: ARK service running
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Check ARK service status
      tags:
      - ark
  /api/v1/orgs/{orgId}/backupbuckets:
    get:
      description: List backup buckets
      operationId: ListBackupBuckets
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupBucketsResponse'
          description: All buckets listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List backup buckets
      tags:
      - ark-buckets
    post:
      description: Create backup bucket
      operationId: CreateBackupBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupBucketRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupBucketResponse'
          description: Backup bucket added successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create backup bucket
      tags:
      - ark-buckets
  /api/v1/orgs/{orgId}/backupbuckets/{bucketId}:
    delete:
      description: Delete backup bucket by ID
      operationId: DeleteBackupBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the bucket
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackupBucketResponse'
          description: Deleting backup succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete backup bucket by ID
      tags:
      - ark-buckets
    get:
      description: Get backup bucket by ID
      operationId: GetBackupBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the bucket
        explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupBucketResponse'
          description: Getting backup succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get backup bucket by ID
      tags:
      - ark-buckets
  /api/v1/orgs/{orgId}/backupbuckets/sync:
    put:
      description: Sync backup buckets
      operationId: SyncBackupBucket
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Backup buckets synced successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Sync backup buckets
      tags:
      - ark-buckets
  /api/v1/orgs/{orgId}/backups:
    get:
      description: List ARK backups of an Organization
      operationId: ListARKBackupsForOrganization
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
          description: All backups listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List ARK backups of an Organization
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/backups/sync:
    put:
      description: Sync ARK backups of an Organization
      operationId: SyncOrgBackups
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Backups synced successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Sync ARK backups of an Organization
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/clusters/{id}/update:
    put:
      description: |
        Update the settings of an existing cluster.
        Changing some settings (like Kubernetes version) might trigger a rolling update.
      operationId: UpdateCluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "202":
          description: Accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update an existing cluster
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/backups:
    get:
      description: List ARK backups of a cluster
      operationId: ListARKBackupsOfACluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupsResponse'
          description: All backups listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List ARK backups of a cluster
      tags:
      - ark-backups
    post:
      description: Create ARK backup of a cluster
      operationId: CreateARKBackupOfACluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupResponse'
          description: Backup created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create ARK backup
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/backups/{id}/sync:
    put:
      description: Sync ARK backups of a cluster
      operationId: SyncARKBackupsOfACluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Backups synced successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Sync ARK backups of a cluster
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}:
    delete:
      description: Delete ARK backup
      operationId: DeleteARKBackup
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the backup
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackupResponse'
          description: Backup removed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete ARK backup
      tags:
      - ark-backups
    get:
      description: Get ARK backup
      operationId: GetARKBackup
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the backup
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupResponse'
          description: Getting backup succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get ARK backup
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/logs:
    get:
      description: Get ARK backup logs
      operationId: GetARKBackupLogs
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the backup
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: |
                  time="2018-09-10T00:23:33Z" level=info msg="Not including resource" groupResource=events logSource="pkg/restore/restore.go:124"
                  time="2018-09-10T00:23:33Z" level=info msg="Not including resource" groupResource=nodes logSource="pkg/restore/restore.go:124"
                  time="2018-09-10T00:23:33Z" level=info msg="Not including resource"
                type: string
          description: Getting backup logs succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get ARK backup logs
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/download:
    get:
      description: Download ARK backup contents
      operationId: DownloadARKBackupContents
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the backup
        explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/x-gzip:
              schema:
                format: file
                type: string
          description: Getting backup contents succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Download ARK backup contents
      tags:
      - ark-backups
  /api/v1/orgs/{orgId}/clusters/{id}/schedules:
    get:
      description: List ARK schedules
      operationId: ListARKSchedules
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSchedulesResponse'
          description: Schedules listed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List ARK schedules
      tags:
      - ark-schedules
    post:
      description: Create ARK schedule
      operationId: CreateARKSchedule
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateScheduleResponse'
          description: Schedule created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create ARK schedule
      tags:
      - ark-schedules
  /api/v1/orgs/{orgId}/clusters/{id}/schedules/{scheduleName}:
    delete:
      description: Delete ARK schedule
      operationId: DeleteARKSchedule
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the schedule
        explode: false
        in: path
        name: scheduleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleResponse'
          description: Schedule delete succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete ARK schedule
      tags:
      - ark-schedules
    get:
      description: Get ARK schedule
      operationId: GetARKSchedule
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the schedule
        explode: false
        in: path
        name: scheduleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
          description: Schedule retrieved succeeded
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get ARK schedule
      tags:
      - ark-schedules
  /api/v1/orgs/{orgId}/clusters/{id}/restores:
    get:
      description: List ARK restores
      operationId: ListARKRestores
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoresResponse'
          description: Restores listed successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List ARK restores
      tags:
      - ark-restores
    post:
      description: Create ARK restore
      operationId: CreateARKRestore
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRestoreRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRestoreResponse'
          description: Restore created successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create ARK restore
      tags:
      - ark-restores
  /api/v1/orgs/{orgId}/restores/{id}/sync:
    put:
      description: Sync ARK restores of a cluster
      operationId: SyncARKRestoresOfACluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: Restores synced successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Sync ARK restores of a cluster
      tags:
      - ark-restores
  /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}:
    delete:
      description: Delete ARK restore
      operationId: DeleteARKRestore
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the restore
        explode: false
        in: path
        name: restoreId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRestoreResponse'
          description: Restore deleted successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete ARK restore
      tags:
      - ark-restores
    get:
      description: Get ARK restore
      operationId: GetARKRestore
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the restore
        explode: false
        in: path
        name: restoreId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRestoreResponse'
          description: Restore retrieved successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get ARK restore
      tags:
      - ark-restores
  /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}/results:
    get:
      description: Get ARK restore results
      operationId: GetARKRestoreResuts
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: ID of the restore
        explode: false
        in: path
        name: restoreId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRestoreResultsResponse'
          description: Restore retrieved successfully
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get ARK restore results
      tags:
      - ark-restores
  /api/v1/orgs/{orgid}/clustergroups:
    get:
      description: retrieve list of cluster groups of an organization
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.ClusterGroup'
                type: array
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List Cluster Groups of an Organization
      tags:
      - clustergroups
    post:
      description: create a group of clusters, joining clusters together with a name
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.CreateRequest'
        description: Create Cluster Group Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.CreateResponse'
          description: Created
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create Cluster Group
      tags:
      - clustergroups
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}:
    delete:
      description: delete a cluster group, disable all enabled features, delete related
        deployments
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete Cluster Group
      tags:
      - clustergroups
    get:
      description: retrieve info about a cluster group, members, status of member
        clusters, features
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.ClusterGroup'
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get Cluster Group
      tags:
      - clustergroups
    put:
      description: update name & member clusters for a cluster group
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api.UpdateRequest'
        description: Update Cluster Group Request
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.UpdateResponse'
          description: Accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update Cluster Group
      tags:
      - clustergroups
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments:
    get:
      description: retrieve all deployments from a cluster group
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/deployment.ListDeploymentResponse'
                type: array
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get All Deployments of a Cluster Group
      tags:
      - clustergroup deployments
    post:
      description: creates a new cluster group deployment, installs or upgrades deployment
        on each member cluster accordingly
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployment.ClusterGroupDeployment'
        description: Deployment Create Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment.CreateUpdateDeploymentResponse'
          description: Multi-cluster deployment has been created successfully. All
            install / upgrade operations on all targeted clusters returned with no
            errors.
        "207":
          content:
            application/json:
              examples:
                PartialFailure:
                  value:
                    code: 207
                    message: Partial failure
                    error: there was as least one failure on one of the target clusters
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Partial failure
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create Cluster Group Deployment
      tags:
      - clustergroup deployments
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}:
    delete:
      description: deletes a cluster group deployment, also deleting deployments from
        member clusters
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: release name of a cluster group deployment
        explode: false
        in: path
        name: deploymentName
        required: true
        schema:
          type: string
        style: simple
      - description: if true cluster group deployment gets deleted even if some deployments
          can not be deleted from each target cluster
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment.TargetClusterStatus'
          description: Multi-cluster deployment has been deleted successfully. All
            delete operations on all targeted clusters returned with no errors.
        "207":
          content:
            application/json:
              examples:
                PartialFailure:
                  value:
                    code: 207
                    message: Partial failure
                    error: there was as least one failure on one of the target clusters
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Partial failure
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete Cluster Group Deployment
      tags:
      - clustergroup deployments
    get:
      description: retrieve info about a cluster group deployment and it's status
        on each member cluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: release name of a cluster group deployment
        explode: false
        in: path
        name: deploymentName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment.DeploymentInfo'
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get Cluster Group Deployment
      tags:
      - clustergroup deployments
    put:
      description: updates a cluster group deployment, installs or upgrades deployment
        on each member cluster accordingly
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: release name of a cluster group deployment
        explode: false
        in: path
        name: deploymentName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployment.ClusterGroupDeployment'
        description: Deployment Update Request
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment.CreateUpdateDeploymentResponse'
          description: Multi-cluster deployment has been updated successfully. All
            upgrade / install operations on all targeted clusters returned with no
            errors.
        "207":
          content:
            application/json:
              examples:
                PartialFailure:
                  value:
                    code: 207
                    message: Partial failure
                    error: there was as least one failure on one of the target clusters
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Partial failure
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update Cluster Group Deployment
      tags:
      - clustergroup deployments
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}/sync:
    put:
      description: install / upgrade deployment to target clusters where deployment
        is not found or has wrong
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: release name of a cluster group deployment
        explode: false
        in: path
        name: deploymentName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment.TargetClusterStatus'
          description: Multi-cluster deployment has been synced successfully. All
            upgrade / install operations on all targeted clusters returned with no
            errors.
        "207":
          content:
            application/json:
              examples:
                PartialFailure:
                  value:
                    code: 207
                    message: Partial failure
                    error: there was as least one failure on one of the target clusters
              schema:
                $ref: '#/components/schemas/CommonError'
          description: Partial failure
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Synchronize Cluster Group Deployment
      tags:
      - clustergroup deployments
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features:
    get:
      description: retrieve info about a cluster group feature and it's status on
        each member cluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/api.FeatureResponse'
                type: array
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get All Features of Cluster Group
      tags:
      - clustergroup features
  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features/{featureName}:
    delete:
      description: disable feature on all members of a cluster group
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Disable Feature of Cluster Group
      tags:
      - clustergroup features
    get:
      description: retrieve info about a cluster group feature and it's status on
        each member cluster
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api.FeatureResponse'
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get Feature of Cluster Group
      tags:
      - clustergroup features
    post:
      description: enable feature on all members of a cluster group
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/api.FeatureRequest'
      responses:
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Enable Feature of Cluster Group
      tags:
      - clustergroup features
    put:
      description: update properties of a feature
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster Group ID
        explode: false
        in: path
        name: clusterGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Name of the feature
        explode: false
        in: path
        name: featureName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/api.FeatureRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update Feature of Cluster Group
      tags:
      - clustergroup features
  /api/v1/orgs/{orgId}/clusters/{id}/services:
    get:
      operationId: ListIntegratedServices
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedServiceList'
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List enabled integrated services of a cluster
      tags:
      - integrated services
  /api/v1/orgs/{orgId}/clusters/{id}/services/{serviceName}:
    delete:
      operationId: DeactivateIntegratedService
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: service name
        explode: false
        in: path
        name: serviceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Deactivate an integrated service
      tags:
      - integrated services
    get:
      operationId: IntegratedServiceDetails
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: service name
        explode: false
        in: path
        name: serviceName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegratedServiceDetails'
          description: Success
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get details of an integrated service
      tags:
      - integrated services
    post:
      operationId: ActivateIntegratedService
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: service name
        explode: false
        in: path
        name: serviceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateIntegratedServiceRequest'
        required: true
      responses:
        "202":
          description: Accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Activate an integrated service
      tags:
      - integrated services
    put:
      operationId: UpdateIntegratedService
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: service name
        explode: false
        in: path
        name: serviceName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegratedServiceRequest'
        required: true
      responses:
        "202":
          description: Accepted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update an integrated service
      tags:
      - integrated services
  /api/v1/orgs/{orgId}/clusters/{id}/nodepools:
    get:
      operationId: ListNodePools
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodePoolsResponse'
          description: Node pool list
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List node pools
      tags:
      - clusters
    post:
      description: Add new node pool to a cluster
      operationId: CreateNodePool
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodePool'
        required: true
      responses:
        "202":
          description: Node pool creation in progress
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Create new node pool
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}:
    delete:
      description: Delete a node pool from a cluster.
      operationId: DeleteNodePool
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Node pool name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Node pool delete in progress
        "204":
          description: Node pool deleted
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Delete a node pool
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/update:
    post:
      operationId: UpdateNodePool
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Node pool name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodePoolRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNodePoolResponse'
          description: Node pool update in progress
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Update an existing node pool
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/cancel-update/{processId}:
    post:
      operationId: CancelNodePoolUpdate
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Node pool name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Node pool update process ID
        explode: false
        in: path
        name: processId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Node pool update is cancelled
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Cancel a running node pool update process
      tags:
      - clusters
  /api/v1/orgs/{orgId}/clusters/{id}/nodepool-labels:
    get:
      description: List cluster nodepool labels
      operationId: ListNodepoolLabels
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Cluster identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodepoolLabelsResponse'
          description: Nodepool labels listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List cluster nodepool labels
      tags:
      - clusters
  /api/v1/orgs/{orgId}/processes:
    get:
      description: List processes in Pipeline
      operationId: ListProcesses
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Type of processes to query
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - cluster-upgrade
          type: string
        style: form
      - description: The id of the resource to list processes for
        explode: true
        in: query
        name: resourceId
        required: false
        schema:
          type: string
        style: form
      - description: The id of the parent process
        explode: true
        in: query
        name: parentId
        required: false
        schema:
          type: string
        style: form
      - description: The status of processes to query
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/ProcessStatus'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessesResponse'
          description: Processes listed
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: List processes in Pipeline
      tags:
      - processes
  /api/v1/orgs/{orgId}/processes/{id}:
    get:
      description: Get a process in Pipeline
      operationId: GetProcess
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Process id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: The process
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Get a process in Pipeline
      tags:
      - processes
  /api/v1/orgs/{orgId}/processes/{id}/cancel:
    post:
      description: Cancel a process in Pipeline
      operationId: CancelProcess
      parameters:
      - description: Organization identifier
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: integer
        style: simple
      - description: Process id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: The process is being canceled
        default:
          content:
            application/json:
              examples:
                BadRequest:
                  value:
                    code: 400
                    message: Invalid request
                    error: Failed to parse request.
                Unauthorized:
                  value:
                    code: 401
                    message: Unauthorized
                    error: Unauthorized
                OrganizationNotFound:
                  value:
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    code: 500
                    message: Something went wrong
                    error: Something went wrong
              schema:
                $ref: '#/components/schemas/CommonError'
            application/problem+json:
              examples:
                BadRequest:
                  value:
                    type: about:blank
                    title: Invalid request
                    status: 400
                    detail: Failed to parse request.
                    instance: ""
                    code: 400
                    message: Failed to parse request.
                    error: Invalid request
                Unauthorized:
                  value:
                    type: about:blank
                    title: Unauthorized
                    status: 401
                    detail: You are unauthorized to access this resource.
                    instance: ""
                    code: 401
                    message: You are unauthorized to access this resource.
                    error: Unauthorized
                AccessDenied:
                  value:
                    type: about:blank
                    title: Access denied
                    status: 403
                    detail: You are unauthorized to perform this action access this
                      resource.
                    instance: ""
                    code: 403
                    message: You are unauthorized to perform this action access this
                      resource.
                    error: Access denied
                OrganizationNotFound:
                  value:
                    type: about:blank
                    title: Organization not found
                    status: 404
                    detail: Organization not found
                    instance: ""
                    code: 404
                    message: Organization not found
                    error: Organization not found
                SecretAlreadyExists:
                  value:
                    type: about:blank
                    title: Secret already exists
                    status: 409
                    detail: Secret already exists
                    instance: ""
                    code: 409
                    message: Secret already exists
                    error: Secret already exists
                InternalServerError:
                  value:
                    type: about:blank
                    title: Internal server error
                    status: 500
                    detail: Something went wrong
                    instance: ""
                    code: 500
                    message: Something went wrong
                    error: Internal server error
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      security:
      - bearerAuth: []
      summary: Cancel a process in Pipeline
      tags:
      - processes
components:
  parameters:
    orgId:
      description: Organization identifier
      explode: false
      in: path
      name: orgId
      required: true
      schema:
        type: integer
      style: simple
    clusterId:
      description: Cluster identifier
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: integer
      style: simple
  requestBodies:
    api.FeatureRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/api.FeatureRequest'
      description: Feature properties
      required: true
  responses:
    PartialFailure:
      content:
        application/json:
          examples:
            PartialFailure:
              value:
                code: 207
                message: Partial failure
                error: there was as least one failure on one of the target clusters
          schema:
            $ref: '#/components/schemas/CommonError'
      description: Partial failure
    Error:
      content:
        application/json:
          examples:
            BadRequest:
              value:
                code: 400
                message: Invalid request
                error: Failed to parse request.
            Unauthorized:
              value:
                code: 401
                message: Unauthorized
                error: Unauthorized
            OrganizationNotFound:
              value:
                code: 404
                message: Organization not found
                error: Organization not found
            SecretAlreadyExists:
              value:
                code: 409
                message: Secret already exists
                error: Secret already exists
            InternalServerError:
              value:
                code: 500
                message: Something went wrong
                error: Something went wrong
          schema:
            $ref: '#/components/schemas/CommonError'
        application/problem+json:
          examples:
            BadRequest:
              value:
                type: about:blank
                title: Invalid request
                status: 400
                detail: Failed to parse request.
                instance: ""
                code: 400
                message: Failed to parse request.
                error: Invalid request
            Unauthorized:
              value:
                type: about:blank
                title: Unauthorized
                status: 401
                detail: You are unauthorized to access this resource.
                instance: ""
                code: 401
                message: You are unauthorized to access this resource.
                error: Unauthorized
            AccessDenied:
              value:
                type: about:blank
                title: Access denied
                status: 403
                detail: You are unauthorized to perform this action access this resource.
                instance: ""
                code: 403
                message: You are unauthorized to perform this action access this resource.
                error: Access denied
            OrganizationNotFound:
              value:
                type: about:blank
                title: Organization not found
                status: 404
                detail: Organization not found
                instance: ""
                code: 404
                message: Organization not found
                error: Organization not found
            SecretAlreadyExists:
              value:
                type: about:blank
                title: Secret already exists
                status: 409
                detail: Secret already exists
                instance: ""
                code: 409
                message: Secret already exists
                error: Secret already exists
            InternalServerError:
              value:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Something went wrong
                instance: ""
                code: 500
                message: Something went wrong
                error: Internal server error
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
  schemas:
    Error:
      description: Generic error object.
      properties:
        type:
          description: A URI reference [RFC3986] that identifies the problem type.
          example: about:blank
          format: uri
          type: string
        title:
          description: A short, human-readable summary of the problem type.
          example: Not found
          type: string
        status:
          description: The HTTP status code ([RFC7231], Section 6) generated by the
            origin server for this occurrence of the problem.
          example: 404
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          example: The requested resource cannot be found
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          example: /path/to/resource
          format: uri
          type: string
        code:
          deprecated: true
          description: 'HTTP status code. Deprecated: use status instead.'
          type: integer
        message:
          deprecated: true
          description: 'Error message. Deprecated: use detail instead.'
          type: string
        error:
          deprecated: true
          description: 'Error message. Deprecated: use title instead.'
          type: string
      type: object
    CommonError:
      deprecated: true
      description: 'Generic error object. Deprecated: use Error schema instead.'
      properties:
        code:
          description: HTTP status code
          type: integer
        message:
          description: Error message
          type: string
        error:
          description: Error message
          type: string
      type: object
    VersionResponse:
      description: Pipeline build and deployment info
      example:
        build_date: build_date
        os: os
        arch: arch
        go_version: go_version
        compiler: compiler
        instance_uuid: instance_uuid
        version: version
        commit_hash: commit_hash
      properties:
        version:
          type: string
        commit_hash:
          type: string
        build_date:
          type: string
        go_version:
          type: string
        os:
          type: string
        arch:
          type: string
        compiler:
          type: string
        instance_uuid:
          type: string
      type: object
    RequestedResources:
      properties:
        sumCpu:
          description: Total CPU requested for the cluster
          example: 8
          type: integer
        sumMem:
          description: Total memory requested for the cluster (GB)
          example: 32
          type: integer
        filters:
          items:
            type: string
          type: array
        sameSize:
          description: If true, recommended instance types will have a similar size
          example: true
          type: boolean
        onDemandPct:
          description: Percentage of regular (on-demand) nodes in the recommended
            cluster
          example: 10
          type: integer
        minNodes:
          description: Minimum number of nodes in the recommended cluster
          example: 1
          type: integer
        maxNodes:
          description: Maximum number of nodes in the recommended cluster
          example: 3
          type: integer
      type: object
    CreateClusterRequest:
      properties:
        name:
          example: gkecluster-pipelineuser-123
          type: string
        location:
          example: us-central1-a
          type: string
        cloud:
          example: google
          type: string
        secretId:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        secretIds:
          example:
          - 62bc3c75-91fb-4670-bad4-24b401a9deac
          - 4378ae32-2355-12ed-b984-1234567804ed
          items:
            type: string
          type: array
        secretName:
          example: my-aws-secret
          type: string
        postHooks:
          example:
            InstallIngressController: null
          type: object
        scaleOptions:
          $ref: '#/components/schemas/ScaleOptions'
        properties:
          example:
            gke:
              master:
                version: 1.8.7-gke.1
              nodePools:
                pool1:
                  count: 1
                  instanceType: n1-standard-2
              nodeVersion: 1.8.7-gke.1
          type: object
      required:
      - cloud
      - location
      - name
      - properties
      type: object
    CreateClusterRequestBase:
      properties:
        name:
          example: my-azure-cluster-123
          type: string
        secretId:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        secretName:
          example: my-aws-secret
          type: string
        sshSecretId:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        scaleOptions:
          $ref: '#/components/schemas/ScaleOptions'
        type:
          type: string
      required:
      - name
      - type
      type: object
    ScaleOptions:
      properties:
        enabled:
          type: boolean
        desiredCpu:
          format: double
          minimum: 1
          type: number
        desiredMem:
          format: double
          minimum: 1
          type: number
        desiredGpu:
          minimum: 0
          type: integer
        onDemandPct:
          maximum: 100
          minimum: 0
          type: integer
        excludes:
          items:
            type: string
          type: array
        keepDesiredCapacity:
          type: boolean
      required:
      - enabled
      type: object
    CreatePKEClusterKubernetes:
      properties:
        version:
          example: v1.12.2
          type: string
        rbac:
          example: true
          type: boolean
        oidc:
          $ref: '#/components/schemas/CreatePKEClusterKubernetes_oidc'
        cri:
          $ref: '#/components/schemas/CreatePKEClusterKubernetes_cri'
        network:
          $ref: '#/components/schemas/CreatePKEClusterKubernetesNetwork'
      required:
      - version
      type: object
    CreatePKEClusterKubernetesNetwork:
      properties:
        serviceCIDR:
          example: 10.32.0.0/24
          type: string
        podCIDR:
          example: 10.200.0.0/16
          type: string
        provider:
          enum:
          - weave
          - calico
          - cilium
          type: string
        providerConfig:
          type: object
      type: object
    CreatePKEClusterRequestBase:
      allOf:
      - $ref: '#/components/schemas/CreateClusterRequestBase'
      - $ref: '#/components/schemas/CreatePKEClusterRequestBase_allOf'
    PKEClusterHTTPProxy:
      properties:
        http:
          $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'
        https:
          $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'
        exceptions:
          items:
            example: .example.org
            type: string
          type: array
      type: object
    PKEClusterHTTPProxyOptions:
      properties:
        host:
          description: host of the proxy
          example: proxy.example.org
          type: string
        port:
          description: port the proxy is available on
          example: 12345
          maximum: 65535
          minimum: 0
          type: integer
        secretId:
          description: ID of the secret containing the username and password for the
            proxy
          type: string
        scheme:
          description: Scheme of the proxy
          type: string
      required:
      - host
      type: object
    CreatePKEOnAzureClusterRequest:
      allOf:
      - $ref: '#/components/schemas/CreatePKEClusterRequestBase'
      - $ref: '#/components/schemas/CreatePKEOnAzureClusterRequest_allOf'
    PKEOnAzureClusterNetwork:
      properties:
        name:
          example: my-azure-virtual-network
          type: string
        cidr:
          description: When referencing an already existing virtual network this field
            does not need to be specified.
          example: 10.0.0.0/16
          type: string
      type: object
    PKEOnAzureNodePool:
      properties:
        name:
          type: string
        roles:
          items:
            enum:
            - master
            - system
            - worker
            type: string
          type: array
        labels:
          additionalProperties:
            type: string
          type: object
        subnet:
          $ref: '#/components/schemas/PKEOnAzureNodePool_subnet'
        zones:
          example:
          - "1"
          - "3"
          items:
            enum:
            - "1"
            - "2"
            - "3"
            type: string
          type: array
        autoscaling:
          type: boolean
        minCount:
          minimum: 1
          type: integer
        maxCount:
          minimum: 1
          type: integer
        count:
          minimum: 1
          type: integer
        instanceType:
          example: Standard_B2ms
          type: string
      required:
      - instanceType
      - name
      - roles
      type: object
    CreatePKEOnVsphereClusterRequest:
      allOf:
      - $ref: '#/components/schemas/CreatePKEClusterRequestBase'
      - $ref: '#/components/schemas/CreatePKEOnVsphereClusterRequest_allOf'
    PKEOnVsphereNodePool:
      properties:
        name:
          type: string
        roles:
          items:
            enum:
            - master
            - system
            - worker
            type: string
          type: array
        labels:
          additionalProperties:
            type: string
          type: object
        size:
          minimum: 1
          type: integer
        vcpu:
          description: Number of VCPUs to attach to each node.
          example: 2
          type: integer
        ram:
          description: MiBs of RAM to attach to each node.
          example: 2048
          type: integer
        template:
          description: Name of VM template available on vSphere to clone as the base
            of nodes. Overrides default value from the main cluster secret.
          example: '[{"simple":{"value":"centos-7-pke-201910021808","summary":"Name
            of template to use when it''s unambiguous."}},{"absolute":{"value":"/Datacenter/vm/centos-7-pke-201910021808"}}]'
          type: string
        adminUsername:
          description: Name of admin user to deploy the generated SSH public key for.
            No key will be deployed if omitted.
          example: root
          type: string
      required:
      - name
      - ram
      - roles
      - vcpu
      type: object
    CreateClusterRequestV2:
      allOf:
      - $ref: '#/components/schemas/CreateClusterRequestBase'
      - $ref: '#/components/schemas/CreateClusterRequestBase'
    NodePool:
      oneOf:
      - $ref: '#/components/schemas/EksNodePool'
      - $ref: '#/components/schemas/EksNodePool'
    GenericNodePool:
      description: Generic node pool object for all cluster distributions.
      properties:
        name:
          description: Node pool name.
          type: string
        size:
          description: Node pool size.
          type: integer
        labels:
          additionalProperties:
            type: string
          description: Node pool labels.
          example:
            example.io/label1: value1
          type: object
      required:
      - name
      - size
      type: object
    NodePoolAutoScaling:
      description: Node pool auto scaling settings.
      properties:
        enabled:
          description: Enable node pool autoscaling.
          type: boolean
        minSize:
          description: Minimum node pool size.
          example: 1
          minimum: 0
          type: integer
        maxSize:
          description: Maximum node pool size.
          example: 5
          type: integer
      required:
      - maxSize
      - minSize
      type: object
    EKSAuthConfig:
      properties:
        mapRoles:
          items:
            $ref: '#/components/schemas/EKSAuthConfigRoles'
          type: array
        mapUsers:
          items:
            $ref: '#/components/schemas/EKSAuthConfigUsers'
          type: array
        mapAccounts:
          items:
            type: string
          type: array
      type: object
    EKSAuthConfigUsers:
      properties:
        groups:
          items:
            type: string
          type: array
        username:
          type: string
        userarn:
          type: string
      type: object
    EKSAuthConfigRoles:
      properties:
        groups:
          items:
            type: string
          type: array
        username:
          type: string
        rolearn:
          type: string
      type: object
    EKSEncryptionConfig:
      description: EKS encryption configuration object describing an encryption provider
        and the corresponding resources to encrypt. More information can be found
        at https://docs.aws.amazon.com/eks/latest/APIReference/API_EncryptionConfig.html.
      example: |
        {
            "provider": {
                "keyARN": "arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000"
            },
            "resources": [
                "secrets"
            ]
        }
      properties:
        provider:
          $ref: '#/components/schemas/EKSEncryptionConfigProvider'
        resources:
          description: Resource kinds to encrypt with the corresponding encryption
            provider.
          example: |
            [
                "secrets"
            ]
          items:
            description: Resource kind to encrypt.
            example: secrets
            type: string
          type: array
      type: object
    EKSEncryptionConfigProvider:
      description: EKS encryption provider.
      example: |
        {
            "keyARN": "arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000"
        }
      properties:
        keyARN:
          description: A customer master key to use for encryption. More information
            can be found at https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html.
          example: arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000
          type: string
      type: object
    EksNodePool:
      allOf:
      - $ref: '#/components/schemas/GenericNodePool'
      - $ref: '#/components/schemas/EksNodePool_allOf'
      description: Node pool object for an EKS cluster.
      type: object
    UpdateNodePoolRequest:
      oneOf:
      - $ref: '#/components/schemas/EksUpdateNodePoolRequest'
      - $ref: '#/components/schemas/PkeAwsUpdateNodePoolRequest'
    UpdateNodePoolResponse:
      example:
        processId: processId
      properties:
        processId:
          description: Node pool update process ID.
          type: string
      type: object
    ListNodePoolsResponse:
      items:
        $ref: '#/components/schemas/NodePoolSummary'
      type: array
    ReportPKENodeStatusResponse:
      example:
        processId: processId
      properties:
        processId:
          description: ID of the registered process
          type: string
      type: object
    NodePoolSummary:
      allOf:
      - $ref: '#/components/schemas/NodePool'
      - $ref: '#/components/schemas/NodePoolStatusInformation'
      description: A summary of information about the node pool.
      type: object
    NodePoolStatusInformation:
      description: Current status and its reason of the node pool.
      properties:
        status:
          description: Current status of the node pool.
          example: ERROR
          type: string
        statusMessage:
          description: Details and reasoning about the status value.
          example: 'Creating node pool failed: the specified volume size is invalid.'
          type: string
      type: object
    BaseUpdateNodePoolRequest:
      description: Base node pool update request object for all cluster distributions.
      properties:
        size:
          description: Node pool size.
          type: integer
        labels:
          additionalProperties:
            type: string
          description: Node pool labels.
          example:
            example.io/label1: value1
          type: object
      required:
      - size
      type: object
    EksUpdateNodePoolRequest:
      allOf:
      - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'
      - $ref: '#/components/schemas/EksUpdateNodePoolRequest_allOf'
      description: Node pool update request object for an EKS cluster.
      type: object
    PkeAwsUpdateNodePoolRequest:
      allOf:
      - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'
      - $ref: '#/components/schemas/PkeAwsUpdateNodePoolRequest_allOf'
      description: Node pool update request object for an PKE AWS cluster.
      type: object
    BaseUpdateNodePoolOptions:
      description: Base node pool update options object for all cluster distributions.
      properties:
        maxSurge:
          default: 0
          description: Maximum number of extra nodes that can be created during the
            update.
          type: integer
        maxBatchSize:
          default: 2
          description: Maximum number of nodes that can be updated simultaneously.
          type: integer
        maxUnavailable:
          default: 0
          description: Maximum number of nodes that can be unavailable during the
            update.
          type: integer
        drain:
          $ref: '#/components/schemas/UpdateNodePoolDrainOptions'
      type: object
    UpdateNodePoolDrainOptions:
      description: Drain options for old nodes.
      properties:
        timeout:
          default: 0
          description: How long should drain wait for pod eviction (in seconds)
          type: integer
        failOnError:
          default: false
          description: Whether the process should fail if draining fails/times out.
          type: boolean
        podSelector:
          default: ""
          description: Only evict those pods that matches this selector.
          type: string
      type: object
    EKSNodePool:
      properties:
        instanceType:
          example: m4.xlarge
          type: string
        spotPrice:
          example: "0.2"
          type: string
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          type: object
        volumeSize:
          description: Size of the EBS volume in GBs of the nodes in the pool.
          example: 50
          type: integer
        image:
          example: ami-06d1667f
          type: string
        subnet:
          $ref: '#/components/schemas/EKSSubnet'
        securityGroups:
          description: List of additional custom security groups for all nodes in
            the pool.
          example:
          - sg-00000xxxx0000xxx1
          - sg-00000xxxx0000xxx2
          items:
            type: string
          type: array
      required:
      - instanceType
      - maxCount
      - minCount
      - spotPrice
      type: object
    CreateEKSProperties:
      properties:
        eks:
          $ref: '#/components/schemas/CreateEKSProperties_eks'
      required:
      - eks
      type: object
    CreateACKProperties:
      properties:
        ack:
          $ref: '#/components/schemas/CreateACKProperties_ack'
      required:
      - ack
      type: object
    NodePoolsACK:
      properties:
        instanceType:
          type: string
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 1
          type: integer
      required:
      - count
      - instanceType
      type: object
    CreateAKSProperties:
      properties:
        aks:
          $ref: '#/components/schemas/CreateAKSProperties_aks'
      required:
      - aks
      type: object
    NodePoolsAzure:
      properties:
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: Standard_B2ms
          type: string
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          type: object
      required:
      - count
      - instanceType
      type: object
    CreateGKEProperties:
      properties:
        gke:
          $ref: '#/components/schemas/CreateGKEProperties_gke'
      required:
      - gke
      type: object
    NodePoolsGoogle:
      properties:
        autoscaling:
          example: true
          type: boolean
        preemptible:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: n1-standard-2
          type: string
        labels:
          additionalProperties:
            $ref: '#/components/schemas/LabelsGoogle'
          type: object
      required:
      - count
      - instanceType
      type: object
    LabelsGoogle:
      example: labelValue
      type: string
    CreateUpdateOKEProperties:
      properties:
        oke:
          $ref: '#/components/schemas/CreateUpdateOKEProperties_oke'
      required:
      - oke
      type: object
    NodePoolsOracle:
      properties:
        version:
          example: v1.10.3
          type: string
        count:
          example: 1
          type: integer
        image:
          example: Oracle-Linux-7.5
          type: string
        shape:
          example: VM.Standard1.1
          type: string
        labels:
          additionalProperties:
            $ref: '#/components/schemas/LabelsOracle'
          type: object
        subnetIds:
          items:
            example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx
            type: string
          maxItems: 3
          type: array
      type: object
    LabelsOracle:
      example: labelValue
      type: string
    CreatePKEProperties:
      properties:
        network:
          $ref: '#/components/schemas/CreatePKEProperties_network'
        nodePools:
          items:
            $ref: '#/components/schemas/NodePoolsPKE'
          type: array
        kubernetes:
          $ref: '#/components/schemas/CreatePKEProperties_kubernetes'
        cri:
          $ref: '#/components/schemas/CreatePKEProperties_cri'
      required:
      - cri
      - kubernetes
      - network
      - nodePools
      type: object
    NodePoolsPKE:
      properties:
        name:
          example: distrMaster
          type: string
        roles:
          example:
          - master
          - pipeline-system
          items:
            type: string
          type: array
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          description: user provided custom node labels to be placed onto the nodes
            of the node pool
          type: object
        autoscaling:
          description: Enables/disables autoscaling of this node pool through Kubernetes
            cluster autoscaler.
          type: boolean
        provider:
          example: amazon
          type: string
        providerConfig:
          type: object
        hosts:
          items:
            $ref: '#/components/schemas/PKEHosts'
          type: array
      required:
      - autoscaling
      - name
      - provider
      - providerConfig
      - roles
      type: object
    AmazonProviderConfig:
      properties:
        autoScalingGroup:
          $ref: '#/components/schemas/AmazonAutoScalingGroup'
      required:
      - autoScalingGroup
      type: object
    PKEHosts:
      properties:
        name:
          example: ip-10-240-0-204.eu-central-1.compute.internal
          type: string
        privateIP:
          example: 10.240.0.204
          type: string
        roles:
          example:
          - master
          - pipeline-system
          items:
            type: string
          type: array
      required:
      - name
      - privateIP
      - roles
      type: object
    AmazonAutoScalingGroup:
      properties:
        name:
          example: distrMaster
          type: string
        image:
          example: ami-dd3c0f36
          type: string
        volumeSize:
          description: Size of root EBS volume to attach to the nodes in GBs. Zero
            means that the size is determined automatically.
          type: integer
        zones:
          example:
          - eu-central-1b
          items:
            type: string
          type: array
        instanceType:
          example: t2.medium
          type: string
        launchConfigurationName:
          example: distrMaster
          type: string
        launchTemplate:
          type: object
        vpcID:
          example: vpc-0deb755857f5ef79d
          type: string
        securityGroupID:
          example: sg-0b3ddd7bef209c1d0
          type: string
        subnets:
          example:
          - subnet-0d16a21e9655486af
          items:
            type: string
          type: array
        tags:
          additionalProperties: true
          type: object
        spotPrice:
          example: "0.2"
          type: string
        size:
          $ref: '#/components/schemas/AmazonAutoScalingGroup_size'
      required:
      - image
      - instanceType
      - launchConfigurationName
      - name
      - securityGroupID
      - size
      - spotPrice
      - subnets
      - tags
      - vpcID
      - zones
      type: object
    AmazonLaunchTemplate:
      type: object
    CreateClusterResponse_202:
      example:
        name: gkecluster-pipelineuser-123
        id: 1
      properties:
        name:
          example: gkecluster-pipelineuser-123
          type: string
        id:
          example: 1
          type: integer
      type: object
    ClusterConfig:
      example:
        data: |-
          apiVersion: v1
          clusters....
        status: 200
      properties:
        status:
          example: 200
          type: integer
        data:
          example: |-
            apiVersion: v1
            clusters....
          type: string
      type: object
    UpdateClusterRequestV2:
      oneOf:
      - $ref: '#/components/schemas/UpdatePKEOnAzureClusterRequest'
      - $ref: '#/components/schemas/UpdatePKEOnVsphereClusterRequest'
    UpdatePKEOnAzureClusterRequest:
      properties:
        nodepools:
          items:
            $ref: '#/components/schemas/PKEOnAzureNodePool'
          type: array
      type: object
    UpdatePKEOnVsphereClusterRequest:
      properties:
        nodepools:
          items:
            $ref: '#/components/schemas/PKEOnVsphereNodePool'
          type: array
      type: object
    UpdateClusterRequestDeprecated:
      properties:
        cloud:
          example: google
          type: string
        properties:
          example:
            google:
              master:
                version: "1.10"
              nodePools:
                pool1:
                  count: 2
                  instanceType: n1-standard-2
          type: object
      required:
      - cloud
      - properties
      type: object
    UpdateEksProperties:
      properties:
        eks:
          $ref: '#/components/schemas/UpdateEksProperties_eks'
      required:
      - eks
      type: object
    UpdateACKProperties:
      properties:
        ack:
          $ref: '#/components/schemas/UpdateACKProperties_ack'
      required:
      - ack
      type: object
    UpdateAzureProperties:
      properties:
        azure:
          $ref: '#/components/schemas/UpdateAzureProperties_azure'
      required:
      - azure
      type: object
    UpdateNodePoolsAzure:
      properties:
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: Standard_B2ms
          type: string
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          type: object
        vnetSubnetID:
          example: /subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name
          type: string
      required:
      - count
      type: object
    UpdateGoogleProperties:
      properties:
        master:
          $ref: '#/components/schemas/UpdateGoogleProperties_master'
        nodeVersion:
          example: "1.9"
          type: string
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/UpdateNodePoolsGoogle'
          type: object
      type: object
    UpdateNodePoolsGoogle:
      properties:
        autoscaling:
          example: true
          type: boolean
        count:
          example: 2
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: n1-standard-2
          type: string
      required:
      - count
      type: object
    UpdatePKEProperties:
      properties:
        pke:
          $ref: '#/components/schemas/UpdatePKEProperties_pke'
      required:
      - pke
      type: object
    UpdateNodePoolsPKE:
      properties:
        instanceType:
          description: Instance type for the nodes in the node pool. This field is
            ignored when existing node pool is updated as instance type can not be
            changed.
          example: c4.large
          type: string
        spotPrice:
          description: The spot price for a node in the node pool. Provide "" or "0"
            for on-demand nodes.
          example: "0.2"
          type: string
        autoscaling:
          description: Whether to enable Kubernetes cluster autoscaler for this node
            pool.
          type: boolean
        minCount:
          description: If cluster autoscaler is enabled for this node pool it sets
            the minimum node count the cluster autoscaler can downscale the node pool
            to.
          example: 1
          type: integer
        maxCount:
          description: If cluster autoscaler is enabled for this node pool it sets
            the maximum node count the cluster autoscaler can upscale the node pool
            to.
          example: 2
          type: integer
        count:
          description: If cluster autoscaler is not enabled this specifies the desired
            node count in the node pool. If cluster autoscaler is enabled this specifies
            the initial node count in the node pool.
          example: 1
          type: integer
        subnets:
          description: The subnet to create the node pool into. If this field is omitted
            than the subnet from the cluster level network configuration is used.
          example:
          - subnet-0d16a21e9655486af
          items:
            type: string
          type: array
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          description: user provided custom node labels to be placed onto the nodes
            of the node pool
          type: object
      type: object
    ListEndpointsResponse:
      example:
        endpoints:
        - urls:
          - servicename: serviceName
            url: url
          - servicename: serviceName
            url: url
          name: pipeline-traefik
          host: 11.11.11.111
        - urls:
          - servicename: serviceName
            url: url
          - servicename: serviceName
            url: url
          name: pipeline-traefik
          host: 11.11.11.111
      properties:
        endpoints:
          items:
            $ref: '#/components/schemas/EndpointItem'
          type: array
      type: object
    EndpointItem:
      example:
        urls:
        - servicename: serviceName
          url: url
        - servicename: serviceName
          url: url
        name: pipeline-traefik
        host: 11.11.11.111
      properties:
        name:
          example: pipeline-traefik
          type: string
        host:
          example: 11.11.11.111
          type: string
        urls:
          items:
            $ref: '#/components/schemas/URLItem'
          type: array
      type: object
    URLItem:
      example:
        servicename: serviceName
        url: url
      properties:
        servicename:
          example: serviceName
          type: string
        url:
          example: url
          type: string
      type: object
    ListNodesResponse:
      example:
        metadata:
          resourceVersion: "30123"
          selfLink: /api/v1/nodes
        items:
        - metadata:
            uid: f214d7fb-41ae-11e8-a4ea-42010a8001da
            resourceVersion: "30119"
            name: gke-gkecluster-feri-706-pool1-496eccb3-l25k
            creationTimestamp: 2018-04-16T19:47:07Z
            annotations:
              key: '{"node.alpha.kubernetes.io/ttl":"0"}'
            selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k
            labels:
              key: '{"beta.kubernetes.io/arch":"amd64"}'
          spec:
            providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k
            externalID: "5935724476937880453"
            podCIDR: 10.48.0.0/24
          status:
            daemonEndpoints:
              kubeletEndpoint: '{}'
            allocatable:
              memory: 5784712Ki
              cpu: 1930m
              pods: "110"
            addresses:
            - address: 10.128.0.2
              type: InternalIP
            - address: 10.128.0.2
              type: InternalIP
            images:
            - name:
              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
              sizeBytes: 286572743
            - name:
              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
              sizeBytes: 286572743
            nodeInfo:
              machineID: 10d8adda771410ca912a387cf7e5cb06
              bootID: decb64ff-e662-410a-b862-04cb490b4772
              kernelVersion: 4.4.111+
              containerRuntimeVersion: docker://17.3.2
              kubeletVersion: v1.10
              systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
              kubeProxyVersion: v1.10
              operatingSystem: linux
              osImage: Container-Optimized OS from Google
              architecture: amd64
            conditions:
            - reason: KernelHasNoDeadlock
              lastHeartbeatTime: 2018-04-17T09:02:45Z
              type: KernelDeadlock
              lastTransitionTime: 2018-04-16T19:46:26Z
              message: kernel has no deadlock
              status: "False"
            - reason: KernelHasNoDeadlock
              lastHeartbeatTime: 2018-04-17T09:02:45Z
              type: KernelDeadlock
              lastTransitionTime: 2018-04-16T19:46:26Z
              message: kernel has no deadlock
              status: "False"
            capacity:
              memory: 7664776Ki
              cpu: "2"
              pods: "110"
        - metadata:
            uid: f214d7fb-41ae-11e8-a4ea-42010a8001da
            resourceVersion: "30119"
            name: gke-gkecluster-feri-706-pool1-496eccb3-l25k
            creationTimestamp: 2018-04-16T19:47:07Z
            annotations:
              key: '{"node.alpha.kubernetes.io/ttl":"0"}'
            selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k
            labels:
              key: '{"beta.kubernetes.io/arch":"amd64"}'
          spec:
            providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k
            externalID: "5935724476937880453"
            podCIDR: 10.48.0.0/24
          status:
            daemonEndpoints:
              kubeletEndpoint: '{}'
            allocatable:
              memory: 5784712Ki
              cpu: 1930m
              pods: "110"
            addresses:
            - address: 10.128.0.2
              type: InternalIP
            - address: 10.128.0.2
              type: InternalIP
            images:
            - name:
              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
              sizeBytes: 286572743
            - name:
              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
              sizeBytes: 286572743
            nodeInfo:
              machineID: 10d8adda771410ca912a387cf7e5cb06
              bootID: decb64ff-e662-410a-b862-04cb490b4772
              kernelVersion: 4.4.111+
              containerRuntimeVersion: docker://17.3.2
              kubeletVersion: v1.10
              systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
              kubeProxyVersion: v1.10
              operatingSystem: linux
              osImage: Container-Optimized OS from Google
              architecture: amd64
            conditions:
            - reason: KernelHasNoDeadlock
              lastHeartbeatTime: 2018-04-17T09:02:45Z
              type: KernelDeadlock
              lastTransitionTime: 2018-04-16T19:46:26Z
              message: kernel has no deadlock
              status: "False"
            - reason: KernelHasNoDeadlock
              lastHeartbeatTime: 2018-04-17T09:02:45Z
              type: KernelDeadlock
              lastTransitionTime: 2018-04-16T19:46:26Z
              message: kernel has no deadlock
              status: "False"
            capacity:
              memory: 7664776Ki
              cpu: "2"
              pods: "110"
      properties:
        metadata:
          $ref: '#/components/schemas/ListNodesResponse_metadata'
        items:
          items:
            $ref: '#/components/schemas/NodeItem'
          type: array
      type: object
    NodeItem:
      example:
        metadata:
          uid: f214d7fb-41ae-11e8-a4ea-42010a8001da
          resourceVersion: "30119"
          name: gke-gkecluster-feri-706-pool1-496eccb3-l25k
          creationTimestamp: 2018-04-16T19:47:07Z
          annotations:
            key: '{"node.alpha.kubernetes.io/ttl":"0"}'
          selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k
          labels:
            key: '{"beta.kubernetes.io/arch":"amd64"}'
        spec:
          providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k
          externalID: "5935724476937880453"
          podCIDR: 10.48.0.0/24
        status:
          daemonEndpoints:
            kubeletEndpoint: '{}'
          allocatable:
            memory: 5784712Ki
            cpu: 1930m
            pods: "110"
          addresses:
          - address: 10.128.0.2
            type: InternalIP
          - address: 10.128.0.2
            type: InternalIP
          images:
          - name:
            - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
            - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
            sizeBytes: 286572743
          - name:
            - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
            - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
            sizeBytes: 286572743
          nodeInfo:
            machineID: 10d8adda771410ca912a387cf7e5cb06
            bootID: decb64ff-e662-410a-b862-04cb490b4772
            kernelVersion: 4.4.111+
            containerRuntimeVersion: docker://17.3.2
            kubeletVersion: v1.10
            systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
            kubeProxyVersion: v1.10
            operatingSystem: linux
            osImage: Container-Optimized OS from Google
            architecture: amd64
          conditions:
          - reason: KernelHasNoDeadlock
            lastHeartbeatTime: 2018-04-17T09:02:45Z
            type: KernelDeadlock
            lastTransitionTime: 2018-04-16T19:46:26Z
            message: kernel has no deadlock
            status: "False"
          - reason: KernelHasNoDeadlock
            lastHeartbeatTime: 2018-04-17T09:02:45Z
            type: KernelDeadlock
            lastTransitionTime: 2018-04-16T19:46:26Z
            message: kernel has no deadlock
            status: "False"
          capacity:
            memory: 7664776Ki
            cpu: "2"
            pods: "110"
      properties:
        metadata:
          $ref: '#/components/schemas/NodeItem_metadata'
        spec:
          $ref: '#/components/schemas/NodeItem_spec'
        status:
          $ref: '#/components/schemas/NodeItem_status'
      type: object
    ListDeploymentsResponse:
      items:
        $ref: '#/components/schemas/ListDeploymentsResponseItem'
      type: array
    ListDeploymentsResponseItem:
      example:
        createdAt: 2018-07-03T14:23:19+02:00
        chartName: pipeline-cluster-ingress
        chartVersion: 0.0.1
        releaseName: pipeline
        namespace: default
        chart: pipeline-cluster-ingress-0.0.1
        version: 1
        updatedAt: 2018-07-03T14:23:19+02:00
        status: DEPLOYED
        supported: true
      properties:
        releaseName:
          example: pipeline
          type: string
        chart:
          example: pipeline-cluster-ingress-0.0.1
          type: string
        chartName:
          example: pipeline-cluster-ingress
          type: string
        chartVersion:
          example: 0.0.1
          type: string
        version:
          example: 1
          type: integer
        updatedAt:
          example: 2018-07-03T14:23:19+02:00
          type: string
        status:
          example: DEPLOYED
          type: string
        namespace:
          example: default
          type: string
        createdAt:
          example: 2018-07-03T14:23:19+02:00
          type: string
        supported:
          example: true
          type: boolean
      type: object
    CreateUpdateDeploymentRequest:
      example:
        wait: false
        package: package
        dryRun: false
        releaseName: singed-bee
        odPcts:
          deployment.my-deployment: 40
        values:
          ingress:
            enabled: "true"
        name: banzaicloud-stable/pipeline
        namespace: default
        reuseValues: true
        version: 0.1.0
        timeout: 500
      properties:
        name:
          example: banzaicloud-stable/pipeline
          type: string
        version:
          description: Version of the deployment. If not specified, the latest version
            is used.
          example: 0.1.0
          type: string
        package:
          description: The chart content packaged by `helm package`. If specified
            chart version is ignored.
          format: byte
          type: string
        namespace:
          example: default
          type: string
        releaseName:
          example: singed-bee
          type: string
        dryRun:
          example: false
          type: boolean
        wait:
          description: if set, will wait until all Pods, PVCs, Services, and minimum
            number of Pods of a Deployment are in a ready state before marking the
            release as successful
          example: false
          type: boolean
        timeout:
          description: time in seconds to wait for any individual Kubernetes operation
            (default 300)
          example: 500
          format: int64
          type: integer
        odPcts:
          description: 'Map of resources in the template where replicas should have
            a minimum on-demand percentage. Format: <kind.resourceName: min-percentage>'
          example:
            deployment.my-deployment: 40
          type: object
        reuseValues:
          example: true
          type: boolean
        values:
          description: current values of the deployment
          example:
            ingress:
              enabled: "true"
          type: object
      required:
      - name
      type: object
    CreateUpdateDeploymentResponse:
      example:
        notes: notes
        releaseName: vigilant-mandrill
      properties:
        releaseName:
          example: vigilant-mandrill
          type: string
        notes:
          description: deployment notes in base64 encoded format
          format: base64
          type: string
      type: object
    DeleteDeploymentResponse:
      example:
        name: vigilant-mandrill
        message: Deployment deleted!
        status: 200
      properties:
        status:
          example: 200
          type: integer
        message:
          example: Deployment deleted!
          type: string
        name:
          example: vigilant-mandrill
          type: string
      type: object
    GetDeploymentResourcesResponse:
      items:
        properties:
          name:
            example: bumptious-dragon-zeppelin
            type: string
          kind:
            example: Deployment
            type: string
        type: object
      type: array
    GetDeploymentResponse:
      example:
        createdAt: 2018-07-03T14:23:19+02:00
        notes: notes
        chartName: mysql
        chartVersion: 0.7.0
        releaseName: vigilant-mandrill
        values:
          metrics:
            enabled: "true"
        namespace: default
        chart: mysql-0.7.0
        version: 1
        updatedAt: 2018-07-03T14:23:19+02:00
        status: DEPLOYED
      properties:
        releaseName:
          example: vigilant-mandrill
          type: string
        chart:
          example: mysql-0.7.0
          type: string
        chartName:
          example: mysql
          type: string
        chartVersion:
          example: 0.7.0
          type: string
        namespace:
          example: default
          type: string
        version:
          example: 1
          type: integer
        updatedAt:
          example: 2018-07-03T14:23:19+02:00
          type: string
        status:
          example: DEPLOYED
          type: string
        createdAt:
          example: 2018-07-03T14:23:19+02:00
          type: string
        notes:
          description: deployment notes in base64 encoded format
          format: base64
          type: string
        values:
          description: current values of the deployment
          example:
            metrics:
              enabled: "true"
          type: object
      type: object
    HelmReposListResponse:
      items:
        $ref: '#/components/schemas/HelmRepoListItem'
      type: array
    HelmRepoListItem:
      example:
        cache: statestore/<cluster_name>/helm/repository/cache/stable-index.yaml
        caFile: caFile
        passwordSecretRef: passwordSecretRef
        keyFile: keyFile
        certFile: certFile
        name: stable
        tlsSecretRef: tlsSecretRef
        url: https://charts.helm.sh/stable
      properties:
        name:
          example: stable
          type: string
        cache:
          example: statestore/<cluster_name>/helm/repository/cache/stable-index.yaml
          type: string
        url:
          example: https://charts.helm.sh/stable
          type: string
        certFile:
          type: string
        keyFile:
          type: string
        caFile:
          type: string
        passwordSecretRef:
          type: string
        tlsSecretRef:
          type: string
      type: object
    HelmReposModifyRequest:
      example:
        url: https://charts.helm.sh/stable
      properties:
        name:
          type: string
        url:
          type: string
        certFile:
          type: string
        keyFile:
          type: string
        caFile:
          type: string
        passwordSecretRef:
          type: string
        tlsSecretRef:
          type: string
      type: object
    HelmReposAddRequest:
      example:
        name: stable
        url: https://charts.helm.sh/stable
      properties:
        name:
          type: string
        url:
          type: string
        certFile:
          type: string
        keyFile:
          type: string
        caFile:
          type: string
        passwordSecretRef:
          type: string
        tlsSecretRef:
          type: string
      required:
      - name
      - url
      type: object
    HelmReposDeleteResponse:
      example:
        name: stable
        message: resource deleted successfully
        status: 200
      properties:
        status:
          example: 200
          type: integer
        message:
          example: resource deleted successfully
          type: string
        name:
          example: stable
          type: string
      type: object
    HelmReposUpdateResponse:
      example:
        name: stable
        message: resource modified successfully
        status: 200
      properties:
        status:
          example: 200
          type: integer
        message:
          example: resource modified successfully
          type: string
        name:
          example: stable
          type: string
      type: object
    HelmChartsListResponse:
      items:
        properties:
          name:
            example: stable
            type: string
          charts:
            items:
              items:
                properties:
                  name:
                    example: nginx-ingress
                    type: string
                  home:
                    example: https://github.com/kubernetes/ingress-nginx
                    type: string
                  sources:
                    example:
                    - https://github.com/kubernetes/ingress-nginx
                    items:
                      type: string
                    type: array
                  version:
                    example: 0.13.1
                    type: string
                  description:
                    example: An nginx Ingress controller that uses ConfigMap to store
                      the nginx configuration.
                    type: string
                  keywords:
                    example:
                    - ingress, nginx
                    items:
                      type: string
                    type: array
                  maintainers:
                    items:
                      properties:
                        name:
                          example: jackzampolin
                          type: string
                        email:
                          example: jack.zampolin@gmail.com
                          type: string
                      type: object
                    type: array
                  engine:
                    example: gotpl
                    type: string
                  icon:
                    example: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
                    type: string
                  appVersion:
                    example: 0.12.0
                    type: string
                  apiVersion:
                    example: v1
                    type: string
                  deprecated:
                    example: false
                    type: boolean
                  urls:
                    example:
                    - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
                    items:
                      type: string
                    type: array
                  created:
                    example: 2018-04-11T18:11:24.761440762Z
                    type: string
                  digest:
                    example: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
                    type: string
                type: object
              type: array
            type: array
        type: object
      type: array
    HelmChartDetailsResponse:
      example:
        versions:
        - values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==
          readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK
          chart:
            maintainers:
            - name: jackzampolin
              email: jack.zampolin@gmail.com
            - name: jackzampolin
              email: jack.zampolin@gmail.com
            appVersion: 0.12.0
            sources:
            - https://github.com/kubernetes/ingress-nginx
            keywords:
            - ingress, nginx
            created: 2018-04-11T18:11:24.761440762Z
            deprecated: false
            icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
            description: An nginx Ingress controller that uses ConfigMap to store
              the nginx configuration.
            version: 0.13.1
            home: https://github.com/kubernetes/ingress-nginx
            urls:
            - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
            apiVersion: v1
            engine: gotpl
            name: nginx-ingress
            digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
        - values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==
          readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK
          chart:
            maintainers:
            - name: jackzampolin
              email: jack.zampolin@gmail.com
            - name: jackzampolin
              email: jack.zampolin@gmail.com
            appVersion: 0.12.0
            sources:
            - https://github.com/kubernetes/ingress-nginx
            keywords:
            - ingress, nginx
            created: 2018-04-11T18:11:24.761440762Z
            deprecated: false
            icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
            description: An nginx Ingress controller that uses ConfigMap to store
              the nginx configuration.
            version: 0.13.1
            home: https://github.com/kubernetes/ingress-nginx
            urls:
            - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
            apiVersion: v1
            engine: gotpl
            name: nginx-ingress
            digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
        repo: banzaicloud-stable
        name: vault
      properties:
        name:
          example: vault
          type: string
        repo:
          example: banzaicloud-stable
          type: string
        versions:
          items:
            $ref: '#/components/schemas/HelmChartDetailsResponse_versions'
          type: array
    InstallSecretsRequest:
      example:
        query:
          ids:
          - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b
          type: amazon
          tags:
          - repo:pipeline
        namespace: default
      properties:
        namespace:
          example: default
          type: string
        query:
          $ref: '#/components/schemas/InstallSecretsRequest_query'
      required:
      - namespace
      type: object
    InstallSecretRequest:
      example:
        namespace: default
        sourceSecretName: my-secret
        spec:
          key:
            sourceMap:
              key: sourceMap
            source: source
            value: value
      properties:
        sourceSecretName:
          example: my-secret
          type: string
        namespace:
          example: default
          type: string
        spec:
          additionalProperties:
            $ref: '#/components/schemas/InstallSecretRequestSpecItem'
          type: object
      required:
      - namespace
      type: object
    InstallSecretRequestSpecItem:
      example:
        sourceMap:
          key: sourceMap
        source: source
        value: value
      properties:
        source:
          type: string
        sourceMap:
          additionalProperties:
            type: string
          type: object
        value:
          type: string
      type: object
    InstallSecretResponse:
      example:
        name: my-aws-secret
      properties:
        name:
          example: my-aws-secret
          type: string
      required:
      - name
      type: object
    TokenCreateRequest:
      example:
        virtualUser: banzaicloud/pipeline
        name: my API token
        expiresAt: 2018-03-09T13:24:49+01:00
      properties:
        name:
          example: my API token
          type: string
        virtualUser:
          example: banzaicloud/pipeline
          type: string
        expiresAt:
          example: 2018-03-09T13:24:49+01:00
          format: date-time
          nullable: true
          type: string
      type: object
    TokenCreateResponse:
      example:
        name: my API token
        id: f24c74d7-53f3-4d78-b3d4-f23f89e81bec
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6ImYyNGM3NGQ3LTUzZjMtNGQ3OC1iM2Q0LWYyM2Y4OWU4MWJlYyIsImlhdCI6MTUyNzg0NTQ1OCwiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.DMQcM0De3A_R1JOPDGqharh9NIjz-uBFeJgiq5JSej0
      properties:
        id:
          example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec
          type: string
        token:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6ImYyNGM3NGQ3LTUzZjMtNGQ3OC1iM2Q0LWYyM2Y4OWU4MWJlYyIsImlhdCI6MTUyNzg0NTQ1OCwiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.DMQcM0De3A_R1JOPDGqharh9NIjz-uBFeJgiq5JSej0
          type: string
        name:
          example: my API token
          type: string
      required:
      - id
      - name
      - token
      type: object
    TokenListResponseItem:
      example:
        createdAt: 2018-06-01T11:26:40.044297036+02:00
        name: my API token
        id: f24c74d7-53f3-4d78-b3d4-f23f89e81bec
      properties:
        id:
          example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec
          type: string
        createdAt:
          example: 2018-06-01T11:26:40.044297036+02:00
          type: string
        name:
          example: my API token
          type: string
      required:
      - createdAt
      - id
      - name
      type: object
    SecretItem:
      example:
        updatedBy: banzaiuser
        values:
          type: <hidden>
          project_id: <hidden>
          private_key_id: <hidden>
          private_key: <hidden>
          client_email: <hidden>
          client_id: <hidden>
          auth_uri: <hidden>
          token_uri: <hidden>
          auth_provider_x509_cert_url: <hidden>
          client_x509_cert_url: <hidden>
        name: my-google-secret
        id: 6fa2288c361becce3e30ba4c41be7d8ba01e3580566f7acc76a7f99994474c46
        type: google
        updatedAt: 2018-03-09T13:24:49+01:00
        tags:
        - tag1
        - tag2
      properties:
        id:
          example: 6fa2288c361becce3e30ba4c41be7d8ba01e3580566f7acc76a7f99994474c46
          type: string
        name:
          example: my-google-secret
          type: string
        type:
          example: google
          type: string
        updatedAt:
          example: 2018-03-09T13:24:49+01:00
          format: date-time
          type: string
        updatedBy:
          example: banzaiuser
          type: string
        tags:
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
        values:
          example:
            type: <hidden>
            project_id: <hidden>
            private_key_id: <hidden>
            private_key: <hidden>
            client_email: <hidden>
            client_id: <hidden>
            auth_uri: <hidden>
            token_uri: <hidden>
            auth_provider_x509_cert_url: <hidden>
            client_x509_cert_url: <hidden>
          type: object
      type: object
    SecretTags:
      example:
      - scope:tag1
      - scope:tag2
      items:
        type: string
      type: array
    CreateSecretResponse:
      example:
        updatedBy: username
        name: My-google-secret
        id: 62bc3c75-91fb-4670-bad4-24b401a9deac
        type: google
        error: Validation failed
        version: 1
        updatedAt: 2018-07-01T08:27:23.2636996Z
        tags:
        - repo:pipeline
        - tag2
      properties:
        name:
          example: My-google-secret
          type: string
        type:
          example: google
          type: string
        id:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        error:
          example: Validation failed
          type: string
        updatedAt:
          example: 2018-07-01T08:27:23.2636996Z
          format: date-time
          type: string
        updatedBy:
          example: username
          type: string
        version:
          example: 1
          type: integer
        tags:
          example:
          - repo:pipeline
          - tag2
          items:
            type: string
          type: array
      required:
      - id
      - name
      - type
      type: object
    CreateSecretRequest:
      example:
        values:
          type: string
          project_id: string
          private_key_id: string
          private_key: string
          client_email: string
          client_id: string
          auth_uri: string
          token_uri: string
          auth_provider_x509_cert_url: string
          client_x509_cert_url: string
        name: My google secret
        type: google
        tags:
        - repo:pipeline
        - tag2
      properties:
        name:
          example: My google secret
          type: string
        type:
          example: google
          type: string
        tags:
          example:
          - repo:pipeline
          - tag2
          items:
            type: string
          type: array
        values:
          example:
            type: string
            project_id: string
            private_key_id: string
            private_key: string
            client_email: string
            client_id: string
            auth_uri: string
            token_uri: string
            auth_provider_x509_cert_url: string
            client_x509_cert_url: string
          type: object
      required:
      - name
      - type
      - values
      type: object
    SecretKeyValueAmazon:
      properties:
        AWS_ACCESS_KEY_ID:
          type: string
        AWS_SECRET_ACCESS_KEY:
          type: string
      required:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      type: object
    SecretKeyValueAzure:
      properties:
        AZURE_CLIENT_ID:
          type: string
        AZURE_CLIENT_SECRET:
          type: string
        AZURE_TENANT_ID:
          type: string
        AZURE_SUBSCRIPTION_ID:
          type: string
      required:
      - AZURE_CLIENT_ID
      - AZURE_CLIENT_SECRET
      - AZURE_SUBSCRIPTION_ID
      - AZURE_TENANT_ID
      type: object
    SecretKeyValueGoogle:
      properties:
        type:
          type: string
        project_id:
          type: string
        private_key_id:
          type: string
        private_key:
          type: string
        client_email:
          type: string
        client_id:
          type: string
        auth_uri:
          type: string
        token_uri:
          type: string
        auth_provider_x509_cert_url:
          type: string
        client_x509_cert_url:
          type: string
      required:
      - auth_provider_x509_cert_url
      - auth_uri
      - client_email
      - client_id
      - client_x509_cert_url
      - private_key
      - private_key_id
      - project_id
      - token_uri
      - type
      type: object
    SecretKeyValueOracle:
      properties:
        user_ocid:
          type: string
        tenancy_ocid:
          type: string
        api_key:
          type: string
        api_key_fingerprint:
          type: string
        region:
          type: string
        client_id:
          type: string
      required:
      - api_key
      - api_key_fingerprint
      - compartment_ocid
      - region
      - tenancy_ocid
      - user_ocid
      type: object
    SecretKeyValueTLS:
      properties:
        hosts:
          type: string
        validity:
          type: string
        caCert:
          type: string
        caKey:
          type: string
        serverCert:
          type: string
        serverKey:
          type: string
        clientCert:
          type: string
        clientKey:
          type: string
      required:
      - hosts
      type: object
    SecretKeyValueKubernetes:
      properties:
        K8Sconfig:
          type: string
      type: object
    SecretKeyValueGeneric:
      properties:
        any:
          type: string
      type: object
    OrganizationListItemResponse:
      example:
        createdAt: 2018-03-09T13:24:49+01:00
        name: me@example.com
        id: 1
        normalizedName: me-example-com
        updatedAt: 2018-03-09T13:24:49+01:00
      properties:
        id:
          example: 1
          type: integer
        createdAt:
          example: 2018-03-09T13:24:49+01:00
          type: string
        updatedAt:
          example: 2018-03-09T13:24:49+01:00
          type: string
        name:
          example: me@example.com
          type: string
        normalizedName:
          example: me-example-com
          type: string
      type: object
    User:
      example:
        createdAt: 2018-03-09T13:24:49+01:00
        image: githubImageUrl.com/imageId/3
        name: myName
        organizations: '{}'
        id: 1
        login: username
        email: my@email.com
        updatedAt: 2018-03-09T13:24:49+01:00
      properties:
        id:
          example: 1
          type: integer
        createdAt:
          example: 2018-03-09T13:24:49+01:00
          type: string
        updatedAt:
          example: 2018-03-09T13:24:49+01:00
          type: string
        name:
          example: myName
          type: string
        email:
          example: my@email.com
          type: string
        login:
          example: username
          type: string
        image:
          example: githubImageUrl.com/imageId/3
          type: string
        organizations:
          type: object
      type: object
    SecretTypeResponse:
      example:
        fields:
        - name: name
          isSafeToDisplay: true
          description: description
          required: true
        - name: name
          isSafeToDisplay: true
          description: description
          required: true
      properties:
        fields:
          items:
            $ref: '#/components/schemas/SecretTypeResponse_fields'
          type: array
      type: object
    ListUserResponse:
      items:
        $ref: '#/components/schemas/User'
      type: array
    GetClusterStatusResponse:
      example:
        securityscan: false
        creatorName: userName
        creatorId: 1
        startedAt: 2018-07-03T14:23:29+02:00
        distribution: gke
        monitoring: false
        version: 1.12.6-gke.10
        oidc:
          clientId: clientId
          idpUrl: idpUrl
          clientSecret: clientSecret
          enabled: true
        statusMessage: Cluster is running
        cloud: google
        createdAt: 2018-07-03T14:23:19+02:00
        spot: false
        name: myClusterName
        logging: false
        totalSummary:
          memory:
            allocatable: "4"
            request: 380m
            limit: 100m
            capacity: "4"
          cpu:
            allocatable: "4"
            request: 380m
            limit: 100m
            capacity: "4"
          status: status
        location: us-central1-a
        id: 1
        nodePools:
          key:
            count: 1
            instanceType: n1-standard-1
        region: us-central1
        status: RUNNING
      properties:
        status:
          example: RUNNING
          type: string
        statusMessage:
          example: Cluster is running
          type: string
        name:
          example: myClusterName
          type: string
        cloud:
          example: google
          type: string
        distribution:
          example: gke
          type: string
        version:
          example: 1.12.6-gke.10
          type: string
        spot:
          example: false
          type: boolean
        location:
          example: us-central1-a
          type: string
        id:
          example: 1
          type: integer
        logging:
          example: false
          type: boolean
        monitoring:
          example: false
          type: boolean
        securityscan:
          example: false
          type: boolean
        createdAt:
          example: 2018-07-03T14:23:19+02:00
          type: string
        startedAt:
          example: 2018-07-03T14:23:29+02:00
          type: string
        creatorName:
          example: userName
          type: string
        creatorId:
          example: 1
          type: integer
        region:
          example: us-central1
          type: string
        oidc:
          $ref: '#/components/schemas/OIDCConfig'
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolStatus'
          type: object
        totalSummary:
          $ref: '#/components/schemas/ResourceSummary'
      type: object
    NodePoolStatus:
      example:
        count: 1
        instanceType: n1-standard-1
      oneOf:
      - $ref: '#/components/schemas/NodePoolStatusAmazon'
      - $ref: '#/components/schemas/NodePoolStatusAzure'
      - $ref: '#/components/schemas/NodePoolStatusGoogle'
      - $ref: '#/components/schemas/NodePoolStatusOracle'
      - $ref: '#/components/schemas/NodePoolStatusVSphere'
    NodePoolStatusAmazon:
      properties:
        instanceType:
          example: m4.xlarge
          type: string
        spotPrice:
          example: "0.2"
          type: string
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        image:
          example: ami-4d485ca7
          type: string
        labels:
          additionalProperties:
            example: '{"example.io/label1":"value1"}'
            type: string
          type: object
        resourceSummary:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSummary'
          type: object
      type: object
    NodePoolStatusAzure:
      properties:
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: Standard_D4_v2
          type: string
        resourceSummary:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSummary'
          type: object
      type: object
    NodePoolStatusGoogle:
      properties:
        autoscaling:
          example: true
          type: boolean
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: n1-standard-1
          type: string
        resourceSummary:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSummary'
          type: object
      type: object
    NodePoolStatusOracle:
      properties:
        count:
          example: 1
          type: integer
        minCount:
          example: 1
          type: integer
        maxCount:
          example: 2
          type: integer
        instanceType:
          example: VM.Standard1.1
          type: string
        image:
          example: ami-4d485ca7
          type: string
        autoscaling:
          example: false
          type: boolean
        resourceSummary:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSummary'
          type: object
      type: object
    NodePoolStatusVSphere:
      properties:
        count:
          example: 1
          type: integer
        ram:
          example: 4096
          type: integer
        vcpu:
          example: 2
          type: integer
        template:
          example: centos-7-pke-202001171452
          type: string
        resourceSummary:
          additionalProperties:
            $ref: '#/components/schemas/ResourceSummary'
          type: object
      type: object
    CreateObjectStoreBucketRequest:
      example:
        secretName: my-aws-secret
        name: mybucket
        secretId: secretId
        properties:
          amazon:
            location: eu-west-1
          alibaba:
            location: eu-central-1
          oracle:
            location: location
          google:
            location: europe
          azure:
            resourceGroup: resourceGroup
            location: westeurope
            storageAccount: mystorageaccount
      properties:
        secretId:
          type: string
        secretName:
          example: my-aws-secret
          type: string
        name:
          example: mybucket
          type: string
        properties:
          $ref: '#/components/schemas/CreateObjectStoreBucketProperties'
      required:
      - name
      - properties
      type: object
    CreateObjectStoreBucketProperties:
      example:
        amazon:
          location: eu-west-1
        alibaba:
          location: eu-central-1
        oracle:
          location: location
        google:
          location: europe
        azure:
          resourceGroup: resourceGroup
          location: westeurope
          storageAccount: mystorageaccount
      properties:
        alibaba:
          $ref: '#/components/schemas/CreateAlibabaObjectStoreBucketProperties'
        amazon:
          $ref: '#/components/schemas/CreateAmazonObjectStoreBucketProperties'
        azure:
          $ref: '#/components/schemas/CreateAzureObjectStoreBucketProperties'
        google:
          $ref: '#/components/schemas/CreateGoogleObjectStoreBucketProperties'
        oracle:
          $ref: '#/components/schemas/CreateOracleObjectStoreBucketProperties'
      type: object
    CreateAlibabaObjectStoreBucketProperties:
      example:
        location: eu-central-1
      nullable: true
      properties:
        location:
          example: eu-central-1
          type: string
      required:
      - location
      type: object
    CreateAmazonObjectStoreBucketProperties:
      example:
        location: eu-west-1
      nullable: true
      properties:
        location:
          example: eu-west-1
          type: string
      required:
      - location
      type: object
    CreateGoogleObjectStoreBucketProperties:
      example:
        location: europe
      nullable: true
      properties:
        location:
          example: europe
          type: string
      required:
      - location
      type: object
    CreateAzureObjectStoreBucketProperties:
      example:
        resourceGroup: resourceGroup
        location: westeurope
        storageAccount: mystorageaccount
      nullable: true
      properties:
        storageAccount:
          example: mystorageaccount
          type: string
        location:
          example: westeurope
          type: string
        resourceGroup:
          type: string
      required:
      - location
      - resourceGroup
      - storageAccount
      type: object
    CreateOracleObjectStoreBucketProperties:
      example:
        location: location
      nullable: true
      properties:
        location:
          type: string
      required:
      - location
      type: object
    CreateObjectStoreBucketResponse:
      example:
        cloud: amazon
        name: mybucket
      properties:
        name:
          example: mybucket
          type: string
        cloud:
          enum:
          - amazon
          - azure
          - google
          - oracle
          - alibaba
          example: amazon
          type: string
      required:
      - cloud
      - name
      type: object
    BucketInfo:
      example:
        cloud: amazon
        notes: There's no secret with this ID
        oracle:
          namespace: namespace
        managed: true
        name: mybucket
        aks:
          resourceGroup: resourceGroup
          storageAccount: storageAccount
        location: eu-west-1
        secret:
          accessId: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef
          accessName: myaccesssecretname
          name: mysecretname
          id: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1
        statusMessage: statusMessage
        status: CREATING
      properties:
        name:
          description: the name of the object storage / bucket
          example: mybucket
          type: string
        managed:
          description: true if the bucket has been created via pipeline
          example: true
          type: boolean
        cloud:
          description: cloud provider of the bucket
          example: amazon
          type: string
        location:
          description: location of the bucket
          example: eu-west-1
          type: string
        notes:
          description: notes for the bucket
          example: There's no secret with this ID
          type: string
        secret:
          $ref: '#/components/schemas/BucketInfo_secret'
        aks:
          $ref: '#/components/schemas/AzureBlobStorageProps'
        oracle:
          $ref: '#/components/schemas/OracleStorageProps'
        status:
          description: the status of the bucket
          enum:
          - CREATING
          - AVAILABLE
          - ERROR_CREATE
          - DELETING
          - ERROR_DELETE
          type: string
        statusMessage:
          description: the reason for the error status
          type: string
      required:
      - cloud
      - location
      - managed
      - name
      - status
      type: object
    ListStorageBucketsResponse:
      items:
        $ref: '#/components/schemas/BucketInfo'
      type: array
    SubnetInfo:
      example:
        name: MySubnet
        location: us-central1-a
        cidrs:
        - 10.0.1.0/24
        - 10.0.1.0/24
        id: subnet-9d4a7b6c
      properties:
        cidrs:
          description: The IPv4 CIDR blocks assigned to the subnet
          items:
            example: 10.0.1.0/24
            type: string
          type: array
        id:
          description: Identifier of the subnetwork
          example: subnet-9d4a7b6c
          type: string
        location:
          description: The location of the subnetwork.
          example: us-central1-a
          type: string
        name:
          description: Name of the subnetwork
          example: MySubnet
          type: string
      required:
      - cidrs
      - id
      type: object
    ListVPCSubnetsResponse:
      items:
        $ref: '#/components/schemas/SubnetInfo'
      type: array
    RouteTableInfo:
      example:
        name: My little route table
        id: rtb-12345678
      properties:
        id:
          description: Identifier of the route table
          example: rtb-12345678
          type: string
        name:
          description: Name of the route table
          example: My little route table
          type: string
      required:
      - id
      type: object
    ListRouteTablesResponse:
      items:
        $ref: '#/components/schemas/RouteTableInfo'
      type: array
    VPCNetworkInfo:
      example:
        name: MyVPC
        cidrs:
        - 10.50.0.0/16
        - 10.50.0.0/16
        id: vpc-a01106c2
      properties:
        cidrs:
          description: The IPv4 CIDR blocks assigned to the VPC network
          items:
            example: 10.50.0.0/16
            type: string
          type: array
        id:
          description: Identifier of the VPC network
          example: vpc-a01106c2
          type: string
        name:
          description: Name of the VPC network
          example: MyVPC
          type: string
      required:
      - cidrs
      - id
      type: object
    ListVPCNetworksResponse:
      items:
        $ref: '#/components/schemas/VPCNetworkInfo'
      type: array
    AzureBlobStorageProps:
      example:
        resourceGroup: resourceGroup
        storageAccount: storageAccount
      properties:
        resourceGroup:
          type: string
        storageAccount:
          type: string
      required:
      - resourceGroup
      - storageAccount
      type: object
    OracleStorageProps:
      example:
        namespace: namespace
      properties:
        namespace:
          type: string
      required:
      - namespace
      type: object
    PodDetailsResponse:
      items:
        $ref: '#/components/schemas/PodItem'
      type: array
    PodItem:
      example:
        createdAt: 2018-08-01T09:04:33+02:00
        resourceSummary:
          memory:
            allocatable: "4"
            request: 380m
            limit: 100m
            capacity: "4"
          cpu:
            allocatable: "4"
            request: 380m
            limit: 100m
            capacity: "4"
          status: status
        name: pipeline-traefik-7c47dc7bd7-twzpl
        namespace: default
        conditions:
        - type: Initialized
          lastTransitionTime: 2018-08-01T07:04:37Z
          status: "True"
          lastProbeTime: lastProbeTime
        - type: Initialized
          lastTransitionTime: 2018-08-01T07:04:37Z
          status: "True"
          lastProbeTime: lastProbeTime
        restartPolicy: Always
        labels:
          app: pipeline-traefik
          release: pipeline
          chart: traefik-1.14.2
      properties:
        name:
          example: pipeline-traefik-7c47dc7bd7-twzpl
          type: string
        namespace:
          example: default
          type: string
        createdAt:
          example: 2018-08-01T09:04:33+02:00
          type: string
        labels:
          $ref: '#/components/schemas/PodItem_labels'
        restartPolicy:
          example: Always
          type: string
        conditions:
          items:
            $ref: '#/components/schemas/PodCondition'
          type: array
        resourceSummary:
          $ref: '#/components/schemas/ResourceSummary'
      type: object
    PodCondition:
      example:
        type: Initialized
        lastTransitionTime: 2018-08-01T07:04:37Z
        status: "True"
        lastProbeTime: lastProbeTime
      properties:
        type:
          example: Initialized
          type: string
        status:
          example: "True"
          type: string
        lastProbeTime:
          type: string
        lastTransitionTime:
          example: 2018-08-01T07:04:37Z
          type: string
      type: object
    OIDCConfig:
      example:
        clientId: clientId
        idpUrl: idpUrl
        clientSecret: clientSecret
        enabled: true
      properties:
        enabled:
          type: boolean
        idpUrl:
          type: string
        clientId:
          type: string
        clientSecret:
          type: string
      type: object
    ResourceSummary:
      example:
        memory:
          allocatable: "4"
          request: 380m
          limit: 100m
          capacity: "4"
        cpu:
          allocatable: "4"
          request: 380m
          limit: 100m
          capacity: "4"
        status: status
      properties:
        cpu:
          $ref: '#/components/schemas/Resource'
        memory:
          $ref: '#/components/schemas/Resource'
        status:
          type: string
      type: object
    Resource:
      example:
        allocatable: "4"
        request: 380m
        limit: 100m
        capacity: "4"
      properties:
        capacity:
          example: "4"
          type: string
        allocatable:
          example: "4"
          type: string
        limit:
          example: 100m
          type: string
        request:
          example: 380m
          type: string
      type: object
    BasePostHook:
      properties:
        PostHookFunctionName:
          type: object
      type: object
    PostHooks:
      oneOf:
      - $ref: '#/components/schemas/BasePostHook'
      - $ref: '#/components/schemas/BasePostHook'
    ReRunPostHook:
      example:
        InstallIngressController: null
      type: object
    CreateResourceGroup:
      example:
        name: newResourceGroupName
        secretId: 62bc3c75-91fb-4670-bad4-24b401a9deac
        location: westeurope
      properties:
        name:
          example: newResourceGroupName
          type: string
        location:
          example: westeurope
          type: string
        secretId:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
      required:
      - location
      - name
      - secretId
      type: object
    ResourceGroupCreated:
      example:
        name: NewResourceGroupName
      properties:
        name:
          example: NewResourceGroupName
          type: string
      type: object
    DeploymentScalingRequest:
      example:
        scaleTarget: k8sDeploymentName
        minReplicas: 1
        maxReplicas: 3
        cpu:
          targetAverageUtilization: 70
        memory:
          targetAverageValue: 500Mi
        customMetrics:
          custom_metric_name:
            type: pod
            targetAverageValue: 700m
      properties:
        scaleTarget:
          example: k8sDeploymentName
          type: string
        minReplicas:
          example: 1
          format: int32
          type: integer
        maxReplicas:
          example: 3
          format: int32
          type: integer
        cpu:
          $ref: '#/components/schemas/ResourceMetric'
        memory:
          $ref: '#/components/schemas/ResourceMetric'
        customMetrics:
          additionalProperties:
            $ref: '#/components/schemas/CustomMetric'
          example:
            custom_metric_name:
              type: pod
              targetAverageValue: 700m
          type: object
      required:
      - maxReplicas
      - minReplicas
      - scaleTarget
      title: Create / Update Deployment Scaling Request
      type: object
    ResourceMetric:
      properties:
        targetAverageValue:
          example: 700m
          type: string
        targetAverageValueType:
          enum:
          - quantity
          - percentage
          type: string
      required:
      - targetAverageValue
      - targetAverageValueType
      title: ResourceMetric
      type: object
    CustomMetric:
      properties:
        type:
          example: pod
          type: string
        targetAverageValue:
          example: 700m
          type: string
      required:
      - targetValue
      - type
      title: CustomMetric
      type: object
    DeploymentScalingResponse:
      example:
      - scaleTarget: k8sDeploymentName
        kind: Deployment
        minReplicas: 1
        maxReplicas: 3
        cpu:
          targetAverageValueType: percentage
          targetAverageValue: 60
          currentAverageValue: 0
        memory:
          targetAverageValueType: quantity
          targetAverageValue: 1100Mi
          currentAverageUtilization: quantity
          currentAverageValue: 780013568
        customMetrics:
          custom_metric_name:
            type: pod
            targetAverageValue: 700m
            currentAverageValue: 300m
        status:
          currentReplicas: 1
          desiredReplicas: 1
          message: 'ScalingActive = true, lastTransitionTime: 2018-00-22T15:31:16Z,
            the HPA was able to successfully calculate a replica count from memory
            resource'
      items:
        properties:
          scaleTarget:
            example: k8sDeploymentName
            type: string
          kind:
            example: Deployment
            type: string
          minReplicas:
            example: 1
            format: int32
            type: integer
          maxReplicas:
            example: 3
            format: int32
            type: integer
          cpu:
            $ref: '#/components/schemas/ResourceMetricStatus'
          memory:
            $ref: '#/components/schemas/ResourceMetricStatus'
          customMetrics:
            additionalProperties:
              $ref: '#/components/schemas/CustomMetricStatus'
            example:
              custom_metric_name:
                type: pod
                targetAverageValue: 700m
                currentAverageValue: 300m
            type: object
          status:
            $ref: '#/components/schemas/DeploymentScaleStatus'
        type: object
      title: Get Deployment Scaling Response
      type: array
    ResourceMetricStatus:
      properties:
        allOf:
          $ref: '#/components/schemas/ResourceMetric'
        currentAverageValue:
          example: 100m
          type: string
        currentAverageValueType:
          enum:
          - quantity
          - percentage
          type: string
      type: object
    CustomMetricStatus:
      properties:
        allOf:
          $ref: '#/components/schemas/CustomMetric'
        currentAverageValue:
          example: 300m
          type: string
      type: object
    DeploymentScaleStatus:
      properties:
        currentReplicas:
          example: 1
          format: int32
          type: integer
        desiredReplicas:
          example: 1
          format: int32
          type: integer
        message:
          example: 'ScalingActive = true, lastTransitionTime: 2018-08-22T15:31:16Z,
            the HPA was able to successfully calculate a replica count from memory
            resource'
          type: string
      type: object
    ScanLogList:
      items:
        $ref: '#/components/schemas/ScanLogItem'
      type: array
    ScanLogItem:
      example:
        result:
        - nginx:latest policy check failed
        - busybox:latest policy check success
        image:
        - lastUpdated: 2018-11-11T14:35:38Z
          imageName: docker.io/redis
          imageTag: latest
          imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac
        - lastUpdated: 2018-11-11T14:35:38Z
          imageName: docker.io/redis
          imageTag: latest
          imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac
        resource: banzaicloud
        releaseName: flying-monkey
        action: allow
      properties:
        releaseName:
          example: flying-monkey
          type: string
        resource:
          example: banzaicloud
          type: string
        image:
          items:
            $ref: '#/components/schemas/ScanLogItemImage'
          type: array
        result:
          example:
          - nginx:latest policy check failed
          - busybox:latest policy check success
          items:
            type: string
          type: array
        action:
          enum:
          - allow
          - reject
          example: allow
          type: string
      type: object
    ScanLogItemImage:
      example:
        lastUpdated: 2018-11-11T14:35:38Z
        imageName: docker.io/redis
        imageTag: latest
        imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac
      properties:
        imageName:
          example: docker.io/redis
          type: string
        imageTag:
          example: latest
          type: string
        imageDigest:
          example: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac
          type: string
        lastUpdated:
          example: 2018-11-11T14:35:38Z
          type: string
      type: object
    ReleaseWhiteList:
      items:
        $ref: '#/components/schemas/ReleaseWhiteListItem'
      type: array
    ReleaseWhiteListItem:
      example:
        owner: banzaicloud
        reason: test release
        name: flying-monkey-wl
      properties:
        name:
          example: flying-monkey-wl
          type: string
        owner:
          example: banzaicloud
          type: string
        reason:
          example: test release
          type: string
      required:
      - name
      - owner
      type: object
    DeploymentImageList:
      items:
        $ref: '#/components/schemas/ClusterImage'
      type: array
    ClusterImageList:
      items:
        $ref: '#/components/schemas/ClusterImage'
      type: array
    ClusterImage:
      example:
        imageName: docker.io/alpine
        imageTag: latest
        imageDigest: imageDigest
      properties:
        imageName:
          example: docker.io/alpine
          type: string
        imageTag:
          example: latest
          type: string
        imageDigest:
          type: string
      type: object
    GoogleProjects:
      description: List of Google Cloud projects.
      example:
        projects:
        - lifecycleState: lifecycleState
          projectNumber: projectNumber
          name: name
          projectId: projectId
        - lifecycleState: lifecycleState
          projectNumber: projectNumber
          name: name
          projectId: projectId
      properties:
        projects:
          items:
            $ref: '#/components/schemas/GoogleProject'
          type: array
      type: object
    GoogleProject:
      description: Details of a Google Cloud project.
      example:
        lifecycleState: lifecycleState
        projectNumber: projectNumber
        name: name
        projectId: projectId
      properties:
        name:
          type: string
        projectId:
          type: string
        projectNumber:
          type: string
        lifecycleState:
          type: string
      type: object
    EKSVpc:
      properties:
        vpcId:
          description: The identifier of existing VPC to be used for creating the
            EKS cluster. If not provided a new VPC is created for the cluster.
          type: string
        cidr:
          default: 192.168.0.0/16
          description: The CIDR range for the VPC in case new VPC is created.
          type: string
      type: object
    EKSSubnet:
      properties:
        subnetId:
          description: Id of existing subnet to use for creating the EKS cluster.
            If not provided new subnet will be created.
          type: string
        cidr:
          description: The CIDR range for the subnet in case new Subnet is created.
          type: string
        availabilityZone:
          description: The AZ to create the subnet into.
          type: string
      type: object
    EKSIam:
      properties:
        clusterRoleId:
          description: The identifier of existing IAM role to be used for creating
            the EKS cluster. If not provided a new IAM role is created for the cluster
            (requires IAM Write Access).
          type: string
        nodeInstanceRoleId:
          description: The identifier of existing IAM role to be used for creating
            the EKS nodes. If not provided a new IAM role is created for the nodes
            (requires IAM Write Access).
          type: string
        defaultUser:
          default: false
          description: Marks if the userid associated with the clusters AWS secret
            has to be used in kubeconfig (bypasses IAM user creation).
          type: boolean
      type: object
    GetClusterBootstrapResponse:
      example:
        masterAddress: 8.9.10.11:443
        discoveryTokenCaCertHash: discoveryTokenCaCertHash
        token: r6pyrk.6n1wv3twavjcnevr
      properties:
        token:
          example: r6pyrk.6n1wv3twavjcnevr
          type: string
        discoveryTokenCaCertHash:
          type: string
        masterAddress:
          example: 8.9.10.11:443
          type: string
      type: object
    GetPKECommandsResponse:
      example:
        additionalProperties: pke-installer install --pipeline-url="http://127.0.0.1:9090"
          --pipeline-token=XXX --pipeline-org-id=3 --pipeline-cluster-id=19 --node-pool="distrMaster"
          --role=master
      properties:
        additionalProperties:
          example: pke-installer install --pipeline-url="http://127.0.0.1:9090" --pipeline-token=XXX
            --pipeline-org-id=3 --pipeline-cluster-id=19 --node-pool="distrMaster"
            --role=master
          type: string
      type: object
    PostReadyPKENodeRequest:
      properties:
        config:
          description: kubeconfig in base64 or empty if not a master
          example: c3ppYQo=
          type: string
        name:
          description: name of node
          example: my-node
          type: string
        nodePool:
          description: name of nodepool
          example: master
          type: string
        ip:
          description: ip address of node (where the other nodes can reach it)
          example: 127.0.0.1
          type: string
        master:
          description: if this node is a master node
          example: true
          type: boolean
        worker:
          description: if this node is a worker node
          example: false
          type: boolean
      type: object
    ReportPKENodeStatusRequest:
      properties:
        name:
          description: name of node
          example: my-node
          type: string
        nodePool:
          description: name of nodepool
          example: master
          type: string
        ip:
          description: ip address of node (where the other nodes can reach it)
          example: 127.0.0.1
          type: string
        message:
          description: detailed description about the current bootstrapping status
            (including the cause of the failure)
          example: installing docker daemon
          type: string
        phase:
          description: the current phase of the bootstrap process
          example: pre-flight
          type: string
        final:
          description: if this is the final status report, that describes the conclusion
            of the whole process
          type: boolean
        status:
          $ref: '#/components/schemas/ProcessStatus'
        timestamp:
          description: exact time of event
          format: date-time
          nullable: true
          type: string
        processId:
          description: ID of the process registered earlier (register new process
            if empty)
          type: string
      type: object
    PKEClusterReadinessResponse:
      example:
        master:
          ready: true
      properties:
        master:
          $ref: '#/components/schemas/PKEClusterReadinessResponse_master'
      type: object
    PostLeaderElectionRequest:
      example:
        hostname: node-0.my.cloud.com
        ip: 10.20.30.40
      properties:
        hostname:
          example: node-0.my.cloud.com
          type: string
        ip:
          example: 10.20.30.40
          type: string
      required:
      - hostname
      type: object
    UpdateClusterRequest:
      oneOf:
      - $ref: '#/components/schemas/EksUpdateClusterRequest'
      - $ref: '#/components/schemas/EksUpdateClusterRequest'
    EksUpdateClusterRequest:
      properties:
        version:
          example: "1.17"
          type: string
      type: object
    PostLeaderElectionResponse:
      example:
        hostname: node-0.my.cloud.com
        ip: 10.20.30.40
      properties:
        hostname:
          example: node-0.my.cloud.com
          type: string
        ip:
          example: 10.20.30.40
          type: string
      required:
      - hostname
      type: object
    GetRestoreResponse:
      $ref: '#/components/schemas/RestoreResponse'
    GetRestoreResultsResponse:
      $ref: '#/components/schemas/RestoreResultsResponse'
    ListRestoresResponse:
      items:
        $ref: '#/components/schemas/RestoreResponse'
      type: array
    ListSchedulesResponse:
      items:
        $ref: '#/components/schemas/ScheduleResponse'
      type: array
    ListBackupsResponse:
      items:
        $ref: '#/components/schemas/BackupResponse'
      type: array
    GetBackupResponse:
      $ref: '#/components/schemas/BackupResponse'
    CreateBackupBucketResponse:
      $ref: '#/components/schemas/BackupBucketResponse'
    BackupServiceStatusResponse:
      $ref: '#/components/schemas/BackupServiceResponse'
    ListBackupBucketsResponse:
      items:
        $ref: '#/components/schemas/BackupBucketResponse'
      type: array
    GetBackupBucketResponse:
      $ref: '#/components/schemas/DeployedBackupBucketResponse'
    RestoreResultARK:
      example: []
      items:
        type: string
      type: array
    RestoreResultCluster:
      example: []
      items:
        type: string
      type: array
    RestoreResultNamespaces:
      additionalProperties:
        items:
          example: '[]'
          type: string
        type: array
      type: object
    RestoreResultNamespacesWarnings:
      additionalProperties:
        items:
          description: warnings during restoration process
          example: '{"default":["not restored: services \"kubernetes\" already exists
            and is different from backed up version.","not restored: services \"pipeline-traefik-metrics-prometheus\"
            already exists and is different from backed up version.","not restored:
            services \"pipeline-traefik\" already exists and is different from backed
            up version."]}'
          type: string
        type: array
      type: object
    RestoreResultErrors:
      example:
        cluster: []
        ark: []
        namespaces:
          key:
          - '[]'
          - '[]'
      properties:
        ark:
          example: []
          items:
            type: string
          type: array
        cluster:
          example: []
          items:
            type: string
          type: array
        namespaces:
          additionalProperties:
            items:
              example: '[]'
              type: string
            type: array
          type: object
      type: object
    RestoreResultWarnings:
      example:
        cluster: []
        ark: []
        namespaces:
          key:
          - '{"default":["not restored: services \"kubernetes\" already exists and
            is different from backed up version.","not restored: services \"pipeline-traefik-metrics-prometheus\"
            already exists and is different from backed up version.","not restored:
            services \"pipeline-traefik\" already exists and is different from backed
            up version."]}'
          - '{"default":["not restored: services \"kubernetes\" already exists and
            is different from backed up version.","not restored: services \"pipeline-traefik-metrics-prometheus\"
            already exists and is different from backed up version.","not restored:
            services \"pipeline-traefik\" already exists and is different from backed
            up version."]}'
      properties:
        ark:
          example: []
          items:
            type: string
          type: array
        cluster:
          example: []
          items:
            type: string
          type: array
        namespaces:
          additionalProperties:
            items:
              description: warnings during restoration process
              example: '{"default":["not restored: services \"kubernetes\" already
                exists and is different from backed up version.","not restored: services
                \"pipeline-traefik-metrics-prometheus\" already exists and is different
                from backed up version.","not restored: services \"pipeline-traefik\"
                already exists and is different from backed up version."]}'
              type: string
            type: array
          type: object
      type: object
    RestoreResultsResponse:
      example:
        warnings:
          cluster: []
          ark: []
          namespaces:
            key:
            - '{"default":["not restored: services \"kubernetes\" already exists and
              is different from backed up version.","not restored: services \"pipeline-traefik-metrics-prometheus\"
              already exists and is different from backed up version.","not restored:
              services \"pipeline-traefik\" already exists and is different from backed
              up version."]}'
            - '{"default":["not restored: services \"kubernetes\" already exists and
              is different from backed up version.","not restored: services \"pipeline-traefik-metrics-prometheus\"
              already exists and is different from backed up version.","not restored:
              services \"pipeline-traefik\" already exists and is different from backed
              up version."]}'
        errors:
          cluster: []
          ark: []
          namespaces:
            key:
            - '[]'
            - '[]'
      properties:
        errors:
          $ref: '#/components/schemas/RestoreResultErrors'
        warnings:
          $ref: '#/components/schemas/RestoreResultWarnings'
      type: object
    RestoreResponse:
      example:
        uid: 494ec414-b6cb-11e8-9916-42010aa400f6
        warnings: 3
        name: full-backup-schedule-20180912223445
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        id: 1
        backupName: full-backup-schedule
        errors: 0
        status: InProgress
      properties:
        id:
          example: 1
          type: integer
        uid:
          example: 494ec414-b6cb-11e8-9916-42010aa400f6
          type: string
        name:
          example: full-backup-schedule-20180912223445
          type: string
        backupName:
          example: full-backup-schedule
          type: string
        options:
          $ref: '#/components/schemas/BackupOptions'
        status:
          example: InProgress
          type: string
        warnings:
          example: 3
          type: integer
        errors:
          example: 0
          type: integer
      type: object
    CreateRestoreRequest:
      example:
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        backupName: full-backup
      properties:
        backupName:
          example: full-backup
          type: string
        options:
          $ref: '#/components/schemas/BackupOptions'
      required:
      - backupName
      type: object
    CreateRestoreResponse:
      example:
        restore:
          uid: 494ec414-b6cb-11e8-9916-42010aa400f6
          warnings: 3
          name: full-backup-schedule-20180912223445
          options:
            includedNamespaces:
            - '*'
            includedResources:
            - '*'
            excludedNamespaces: []
            excludedResources: []
            snapshotVolumes: true
            includeClusterResources: true
          id: 1
          backupName: full-backup-schedule
          errors: 0
          status: InProgress
        status: 200
      properties:
        restore:
          $ref: '#/components/schemas/RestoreResponse'
        status:
          example: 200
          type: integer
      type: object
    DeleteRestoreResponse:
      example:
        id: 1
        status: 200
      properties:
        id:
          example: 1
          type: integer
        status:
          example: 200
          type: integer
      type: object
    CreateScheduleRequest:
      example:
        schedule: 0 */6 * * *
        name: full-backup-schedule
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        ttl: 720h0m0s
        labels:
          backup-type: full
      properties:
        name:
          example: full-backup-schedule
          type: string
        schedule:
          example: 0 */6 * * *
          type: string
        ttl:
          example: 720h0m0s
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
        options:
          $ref: '#/components/schemas/BackupOptions'
      required:
      - name
      - schedule
      - ttl
      type: object
    DeleteScheduleResponse:
      example:
        name: full-backup-schedule
        status: 200
      properties:
        name:
          example: full-backup-schedule
          type: string
        status:
          example: 200
          type: integer
      type: object
    CreateScheduleResponse:
      example:
        name: full-backup-schedule
        status: 200
      properties:
        name:
          example: full-backup-schedule
          type: string
        status:
          example: 200
          type: integer
      type: object
    ScheduleResponse:
      example:
        uid: 432d4d27-b48f-11e8-9916-42010aa400f6
        schedule: 0 */6 * * *
        lastBackup: 2018-09-13T11:59:11+02:00
        name: full-backup-schedule
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        ttl: 720h0m0s
        labels:
          backup-type: full
        status: Enabled
      properties:
        uid:
          example: 432d4d27-b48f-11e8-9916-42010aa400f6
          type: string
        name:
          example: full-backup-schedule
          type: string
        schedule:
          example: 0 */6 * * *
          type: string
        ttl:
          example: 720h0m0s
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
        options:
          $ref: '#/components/schemas/BackupOptions'
        status:
          example: Enabled
          type: string
        lastBackup:
          example: 2018-09-13T11:59:11+02:00
          type: string
      type: object
    CreateBackupRequest:
      example:
        name: full-backup
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        ttl: 30m
        labels:
          backup-type: full
      properties:
        name:
          example: full-backup
          type: string
        ttl:
          example: 30m
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
        options:
          $ref: '#/components/schemas/BackupOptions'
      required:
      - name
      - ttl
      type: object
    CreateBackupResponse:
      example:
        id: 1
        status: 200
      properties:
        id:
          example: 1
          type: integer
        status:
          example: 200
          type: integer
      type: object
    DeleteBackupResponse:
      example:
        id: 1
        status: 200
      properties:
        id:
          example: 1
          type: integer
        status:
          example: 200
          type: integer
      type: object
    BackupResponse:
      example:
        cloud: google
        uid: 432d4d27-b48f-11e8-9916-42010aa400f6
        name: full-backup
        options:
          includedNamespaces:
          - '*'
          includedResources:
          - '*'
          excludedNamespaces: []
          excludedResources: []
          snapshotVolumes: true
          includeClusterResources: true
        id: 1
        clusterId: 1
        distribution: gke
        expireAt: 2018-10-10T02:20:03+02:00
        ttl: 720h0m0s
        startAt: 2018-09-10T02:20:03+02:00
        labels:
          backup-type: full
        status: Completed
      properties:
        id:
          example: 1
          type: integer
        uid:
          example: 432d4d27-b48f-11e8-9916-42010aa400f6
          type: string
        name:
          example: full-backup
          type: string
        ttl:
          example: 720h0m0s
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
        options:
          $ref: '#/components/schemas/BackupOptions'
        cloud:
          example: google
          type: string
        distribution:
          example: gke
          type: string
        status:
          example: Completed
          type: string
        startAt:
          example: 2018-09-10T02:20:03+02:00
          type: string
        expireAt:
          example: 2018-10-10T02:20:03+02:00
          type: string
        clusterId:
          example: 1
          type: integer
      type: object
    CreateBackupBucketRequest:
      example:
        cloud: google
        bucketName: ark-backup-bucket-123
        resourceGroup: my-resource-group
        prefix: my-backup-prefix
        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
        location: us-east
        storageAccount: my-storage-account
      properties:
        cloud:
          example: google
          type: string
        bucketName:
          example: ark-backup-bucket-123
          type: string
        secretId:
          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
          type: string
        prefix:
          description: Optional, if not provided will be set to the name of the cluster
          example: my-backup-prefix
          type: string
        location:
          example: us-east
          type: string
        storageAccount:
          description: required only in case of Azure
          example: my-storage-account
          type: string
        resourceGroup:
          description: required only case of Azure
          example: my-resource-group
          type: string
      required:
      - bucketName
      - cloud
      - secretId
      type: object
    BackupBucketResponse:
      example:
        cloud: google
        name: ark-backup-bucket-123
        inUse: false
        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
        id: 5
        status: available
      properties:
        id:
          example: 5
          type: integer
        name:
          example: ark-backup-bucket-123
          type: string
        cloud:
          example: google
          type: string
        secretId:
          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
          type: string
        status:
          example: available
          type: string
        inUse:
          example: false
          type: boolean
      type: object
    DeployedBackupBucketResponse:
      example:
        cloud: google
        deploymentId: 1
        name: ark-backup-bucket-123
        inUse: false
        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
        id: 5
        clusterId: 1
        clusterCloud: google
        status: deployed
        clusterDistribution: gke
      properties:
        id:
          example: 5
          type: integer
        name:
          example: ark-backup-bucket-123
          type: string
        cloud:
          example: google
          type: string
        secretId:
          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717
          type: string
        status:
          example: deployed
          type: string
        inUse:
          example: false
          type: boolean
        deploymentId:
          example: 1
          type: integer
        clusterId:
          example: 1
          type: integer
        clusterCloud:
          example: google
          type: string
        clusterDistribution:
          example: gke
          type: string
      type: object
    DeleteBackupBucketResponse:
      example:
        id: 1
        status: 200
      properties:
        id:
          example: 1
          type: integer
        status:
          example: 200
          type: integer
      type: object
    DisableARKResponse:
      example:
        status: 200
      properties:
        status:
          example: 200
          type: integer
      type: object
    EnableARKResponse:
      example:
        status: 200
      properties:
        status:
          example: 200
          type: integer
      type: object
    EnableARKRequest:
      properties:
        cloud:
          example: google
          type: string
        bucketName:
          example: ark-backup-bucket-123
          type: string
        schedule:
          example: 0 */6 * * *
          type: string
        ttl:
          example: 1h
          type: string
        secretId:
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        location:
          example: us-east
          type: string
        useClusterSecret:
          description: relevant only in case of Amazon clusters. By default set to
            false in which case you must add snapshot permissions to your node instance
            role. Should you set to true Pipeline will deploy your cluster secret
            to the cluster.
          example: false
          type: boolean
        serviceAccountRoleARN:
          description: relevant only in case of Amazon clusters. This a third option
            to give permissions for volume snapshots to Velero, besides the default
            NodeInstance role or cluster secret deployment.
          example: arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME
          type: string
        storageAccount:
          description: required only case of Azure
          example: my-storage-account
          type: string
        resourceGroup:
          description: required only case of Azure
          example: my-resource-group
          type: string
        labels:
          $ref: '#/components/schemas/Labels'
        options:
          $ref: '#/components/schemas/BackupOptions'
      required:
      - bucketName
      - cloud
      - schedule
      - secretId
      - ttl
      type: object
    Labels:
      example:
        backup-type: full
      properties:
        backup-type:
          example: full
          type: string
      title: Labels
      type: object
    BackupOptions:
      example:
        includedNamespaces:
        - '*'
        includedResources:
        - '*'
        excludedNamespaces: []
        excludedResources: []
        snapshotVolumes: true
        includeClusterResources: true
      properties:
        includedNamespaces:
          example:
          - '*'
          items:
            type: string
          type: array
        includedResources:
          example:
          - '*'
          items:
            type: string
          type: array
        excludedNamespaces:
          example: []
          items:
            type: string
          type: array
        excludedResources:
          example: []
          items:
            type: string
          type: array
        snapshotVolumes:
          example: true
          type: boolean
        includeClusterResources:
          example: true
          type: boolean
      title: Backup Options
      type: object
    GetLeaderElectionResponse:
      example:
        hostname: node-0.my.cloud.com
        ip: 10.20.30.40
      properties:
        hostname:
          example: node-0.my.cloud.com
          type: string
        ip:
          example: 10.20.30.40
          type: string
      required:
      - hostname
      type: object
    api.ClusterGroup:
      example:
        organizationId: 0
        uid: uid
        enabledFeatures:
        - enabledFeatures
        - enabledFeatures
        members:
        - cloud: google
          name: clusterName
          id: 1001
          distribution: gke
          status: status
        - cloud: google
          name: clusterName
          id: 1001
          distribution: gke
          status: status
        name: name
        id: 10
      properties:
        enabledFeatures:
          items:
            type: string
          type: array
        id:
          example: 10
          type: integer
        members:
          items:
            $ref: '#/components/schemas/api.Member'
          type: array
        name:
          type: string
        organizationId:
          type: integer
        uid:
          type: string
      type: object
    api.CreateRequest:
      properties:
        members:
          items:
            type: integer
          type: array
        name:
          example: cluster_group_name
          type: string
      type: object
    api.CreateResponse:
      example:
        name: cluster_group_name
        id: 0
      properties:
        id:
          type: integer
        name:
          example: cluster_group_name
          type: string
      type: object
    api.FeatureRequest:
      type: object
    api.FeatureResponse:
      example:
        lastReconcileError: lastReconcileError
        clusterGroup:
          organizationId: 0
          uid: uid
          enabledFeatures:
          - enabledFeatures
          - enabledFeatures
          members:
          - cloud: google
            name: clusterName
            id: 1001
            distribution: gke
            status: status
          - cloud: google
            name: clusterName
            id: 1001
            distribution: gke
            status: status
          name: name
          id: 10
        reconcileState: reconcileState
        name: name
        enabled: true
        properties: '{}'
        status: '{}'
      properties:
        clusterGroup:
          $ref: '#/components/schemas/api.ClusterGroup'
        enabled:
          type: boolean
        lastReconcileError:
          type: string
        name:
          type: string
        properties:
          type: object
        reconcileState:
          type: string
        status:
          type: object
      type: object
    api.Member:
      example:
        cloud: google
        name: clusterName
        id: 1001
        distribution: gke
        status: status
      properties:
        cloud:
          example: google
          type: string
        distribution:
          example: gke
          type: string
        id:
          example: 1001
          type: integer
        name:
          example: clusterName
          type: string
        status:
          type: string
      type: object
    api.UpdateRequest:
      properties:
        members:
          items:
            type: integer
          type: array
        name:
          example: cluster_group_name
          type: string
      type: object
    api.UpdateResponse:
      example:
        name: cluster_group_name
        id: 0
      properties:
        id:
          type: integer
        name:
          example: cluster_group_name
          type: string
      type: object
    deployment.ClusterGroupDeployment:
      properties:
        atomic:
          type: boolean
        dryrun:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        package:
          items:
            type: integer
          type: array
        releaseName:
          type: string
        reuseValues:
          type: boolean
        rollingMode:
          type: boolean
        valueOverrides:
          type: object
        values:
          type: object
        version:
          type: string
      required:
      - name
      type: object
    deployment.CreateUpdateDeploymentResponse:
      example:
        releaseName: releaseName
        targetClusters:
        - cloud: cloud
          stale: true
          clusterName: clusterName
          clusterId: 0
          distribution: distribution
          error: error
          version: version
          status: status
        - cloud: cloud
          stale: true
          clusterName: clusterName
          clusterId: 0
          distribution: distribution
          error: error
          version: version
          status: status
      properties:
        releaseName:
          type: string
        targetClusters:
          items:
            $ref: '#/components/schemas/deployment.TargetClusterStatus'
          type: array
      type: object
    deployment.DeploymentInfo:
      example:
        createdAt: createdAt
        chartName: chartName
        chartVersion: chartVersion
        releaseName: releaseName
        values: '{}'
        namespace: namespace
        description: description
        valueOverrides: '{}'
        targetClusters:
        - cloud: cloud
          stale: true
          clusterName: clusterName
          clusterId: 0
          distribution: distribution
          error: error
          version: version
          status: status
        - cloud: cloud
          stale: true
          clusterName: clusterName
          clusterId: 0
          distribution: distribution
          error: error
          version: version
          status: status
        chart: chart
        version: 0
        updatedAt: updatedAt
      properties:
        chart:
          type: string
        chartName:
          type: string
        chartVersion:
          type: string
        createdAt:
          type: string
        description:
          type: string
        namespace:
          type: string
        releaseName:
          type: string
        targetClusters:
          items:
            $ref: '#/components/schemas/deployment.TargetClusterStatus'
          type: array
        updatedAt:
          type: string
        valueOverrides:
          type: object
        values:
          type: object
        version:
          type: integer
      type: object
    deployment.ListDeploymentResponse:
      example:
        createdAt: createdAt
        chartName: chartName
        chartVersion: chartVersion
        releaseName: releaseName
        namespace: namespace
        chart: chart
        version: 0
        updatedAt: updatedAt
      properties:
        chart:
          type: string
        chartName:
          type: string
        chartVersion:
          type: string
        createdAt:
          type: string
        namespace:
          type: string
        releaseName:
          type: string
        updatedAt:
          type: string
        version:
          type: integer
      type: object
    deployment.TargetClusterStatus:
      example:
        cloud: cloud
        stale: true
        clusterName: clusterName
        clusterId: 0
        distribution: distribution
        error: error
        version: version
        status: status
      properties:
        cloud:
          type: string
        clusterId:
          type: integer
        clusterName:
          type: string
        distribution:
          type: string
        error:
          type: string
        stale:
          type: boolean
        status:
          type: string
        version:
          type: string
      type: object
    BackupServiceResponse:
      example:
        enabled: true
      properties:
        enabled:
          type: boolean
      type: object
    IntegratedServiceList:
      additionalProperties:
        $ref: '#/components/schemas/IntegratedServiceDetails'
      type: object
    ActivateIntegratedServiceRequest:
      example:
        spec: '{}'
      properties:
        spec:
          type: object
      required:
      - spec
      type: object
    IntegratedServiceDetails:
      example:
        output: '{}'
        spec: '{}'
        status: inactive
      properties:
        output:
          type: object
        spec:
          type: object
        status:
          enum:
          - inactive
          - pending
          - active
          - error
          type: string
      required:
      - status
      type: object
    UpdateIntegratedServiceRequest:
      example:
        spec: '{}'
      properties:
        spec:
          type: object
      required:
      - spec
      type: object
    IntegratedServiceSpec:
      type: object
    ListNodepoolLabelsResponse:
      additionalProperties:
        items:
          $ref: '#/components/schemas/NodepoolLabels'
        type: array
      type: object
    NodepoolLabels:
      properties:
        name:
          type: string
        value:
          type: string
        reserved:
          type: boolean
      type: object
    NamespaceListResponse:
      example:
        namespaces:
        - name: name
        - name: name
      properties:
        namespaces:
          items:
            $ref: '#/components/schemas/NamespaceItem'
          type: array
      type: object
    NamespaceList:
      items:
        $ref: '#/components/schemas/NamespaceItem'
      type: array
    NamespaceItem:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ListProcessesResponse:
      items:
        $ref: '#/components/schemas/Process'
      type: array
    Process:
      example:
        resourceId: resourceId
        log: log
        startedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        type: type
        parentId: parentId
        orgId: 0
        events:
        - processId: processId
          log: log
          id: 6
          type: type
          timestamp: 2000-01-23T04:56:07.000+00:00
        - processId: processId
          log: log
          id: 6
          type: type
          timestamp: 2000-01-23T04:56:07.000+00:00
        resourceType: resourceType
        finishedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        parentId:
          type: string
        orgId:
          type: integer
        type:
          type: string
        log:
          type: string
        resourceId:
          type: string
        resourceType:
          type: string
        status:
          $ref: '#/components/schemas/ProcessStatus'
        startedAt:
          format: date-time
          type: string
        finishedAt:
          format: date-time
          nullable: true
          type: string
        events:
          items:
            $ref: '#/components/schemas/ProcessEvent'
          type: array
      type: object
    ProcessEvent:
      example:
        processId: processId
        log: log
        id: 6
        type: type
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: integer
        processId:
          type: string
        type:
          type: string
        log:
          type: string
        status:
          $ref: '#/components/schemas/ProcessStatus'
        timestamp:
          format: date-time
          type: string
      type: object
    ProcessStatus:
      enum:
      - running
      - failed
      - finished
      - canceled
      title: ProcessStatus
      type: string
    CreatePKEClusterKubernetes_oidc:
      properties:
        enabled:
          example: true
          type: boolean
    CreatePKEClusterKubernetes_cri:
      properties:
        runtime:
          type: string
        runtimeConfig:
          type: object
    CreatePKEClusterRequestBase_allOf:
      properties:
        kubernetes:
          $ref: '#/components/schemas/CreatePKEClusterKubernetes'
        proxy:
          $ref: '#/components/schemas/PKEClusterHTTPProxy'
      required:
      - kubernetes
    CreatePKEOnAzureClusterRequest_allOf:
      properties:
        location:
          description: Non-existent resources will be created in this location. Existing
            resources that must have the same location as the cluster will be validated
            against this.
          example: westeurope
          type: string
        resourceGroup:
          description: Required resources will be created in this resource group.
          example: my-resource-group-1
          type: string
        network:
          $ref: '#/components/schemas/PKEOnAzureClusterNetwork'
        accessPoints:
          description: List of access points (i.e. load balancers, floating IPs) to
            be created for the cluster. Access points are implemented using cloud
            provider specific resources.
          items:
            enum:
            - private
            - public
            type: string
          type: array
        apiServerAccessPoints:
          description: List of access point references for the API server; currently,
            public and private are the only valid values
          items:
            enum:
            - private
            - public
            type: string
          type: array
        nodepools:
          items:
            $ref: '#/components/schemas/PKEOnAzureNodePool'
          type: array
      required:
      - resourceGroup
    PKEOnAzureNodePool_subnet:
      properties:
        name:
          example: my-azure-subnet
          type: string
        cidr:
          description: When referencing an already existing subnetwork this field
            does not need to be specified.
          example: 10.0.0.0/24
          type: string
    CreatePKEOnVsphereClusterRequest_allOf:
      properties:
        storageSecretId:
          description: Secret ID used to setup VSphere storage classes. Overrides
            the default settings in main cluster secret.
          example: 62bc3c75-91fb-4670-bad4-24b401a9deac
          type: string
        storageSecretName:
          description: Secret name used to setup VSphere storage classes. Overrides
            default value from the main cluster secret.
          example: my-vsphere-storage-secret
          type: string
        folder:
          description: Folder to create nodes in. Overrides default value from the
            main cluster secret.
          example: '[{"simple":{"value":"my-folder","summary":"The name of the folder
            anywhere in the hierarchy when it''s unambiguous."}},{"absolute":{"value":"/Datacenter/vm/my-folder","summary":"Absolute
            path to the folder. Most vSphere installations use paths prefixed with
            /Datacenter/vm/."}}]'
          type: string
        datastore:
          description: Name of datastore or datastore cluster to place VM disks on.
            Overrides default value from the main cluster secret.
          example: Datastore-cluster
          type: string
        resourcePool:
          description: Virtual machines will be created in this resource pool. Overrides
            default value from the main cluster secret.
          example: my-resource-pool
          type: string
        nodepools:
          items:
            $ref: '#/components/schemas/PKEOnVsphereNodePool'
          type: array
        loadBalancerIPRange:
          description: IPv4 range to allocate addresses for LoadBalancer Services
            (MetalLB)
          example: 192.168.23.150-192.168.23.180
          type: string
      required:
      - resourceGroup
    EksNodePool_allOf:
      properties:
        autoscaling:
          $ref: '#/components/schemas/NodePoolAutoScaling'
        volumeSize:
          description: Size of the EBS volume in GBs of the nodes in the pool.
          example: 50
          type: integer
        instanceType:
          description: Machine instance type.
          example: m4.xlarge
          type: string
        image:
          description: Instance AMI.
          example: ami-06d1667f
          type: string
        spotPrice:
          description: The upper limit price for the requested spot instance. If this
            field is left empty or 0 passed in on-demand instances used instead of
            spot instances.
          example: "0.2"
          type: string
        subnetId:
          example: subnet-xxxxxxxxxxxxxx
          type: string
        securityGroups:
          description: List of additional custom security groups for all nodes in
            the pool.
          example:
          - sg-00000xxxx0000xxx1
          - sg-00000xxxx0000xxx2
          items:
            type: string
          type: array
      required:
      - instanceType
    EksUpdateNodePoolRequest_allOf:
      properties:
        autoscaling:
          $ref: '#/components/schemas/NodePoolAutoScaling'
        volumeSize:
          description: Size of the EBS volume in GBs of the nodes in the pool.
          example: 50
          type: integer
        instanceType:
          description: The instance type to use for your node pool.
          example: m4.xlarge
          type: string
        image:
          description: The instance AMI to use for your node pool.
          example: ami-06d1667f
          type: string
        version:
          description: The Kubernetes version to use for your node pool.
          example: 1.18.6
          type: string
        spotPrice:
          description: The upper limit price for the requested spot instance. If this
            field is empty or 0 on-demand instances are used instead of spot instances.
          example: "0.2"
          type: string
        securityGroups:
          description: List of additional custom security groups for all nodes in
            the pool.
          example:
          - sg-00000xxxx0000xxx1
          - sg-00000xxxx0000xxx2
          items:
            type: string
          nullable: true
          type: array
        options:
          $ref: '#/components/schemas/BaseUpdateNodePoolOptions'
    PkeAwsUpdateNodePoolRequest_allOf:
      properties:
        autoscaling:
          $ref: '#/components/schemas/NodePoolAutoScaling'
        volumeSize:
          description: Size of the EBS volume in GBs of the nodes in the pool.
          example: 50
          type: integer
        instanceType:
          description: The instance type to use for your node pool.
          example: m4.xlarge
          type: string
        image:
          description: The instance AMI to use for your node pool.
          example: ami-06d1667f
          type: string
        spotPrice:
          description: The upper limit price for the requested spot instance. If this
            field is empty or 0 on-demand instances are used instead of spot instances.
          example: "0.2"
          type: string
        options:
          $ref: '#/components/schemas/BaseUpdateNodePoolOptions'
    CreateEKSProperties_eks:
      properties:
        authConfig:
          $ref: '#/components/schemas/EKSAuthConfig'
        version:
          example: "1.10"
          type: string
        encryptionConfig:
          description: List of encryption config objects to define the encryption
            providers and their corresponding resources to encrypt. More information
            can be found at https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html
            and https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html.
          example: |
            [
                {
                    "provider": {
                        "keyARN": "arn:aws:kms:<REGION>:000000000000:key/00000000-0000-0000-0000-000000000000"
                    },
                    "resources": [
                        "secrets"
                    ]
                }
            ]
          items:
            $ref: '#/components/schemas/EKSEncryptionConfig'
          type: array
        logTypes:
          example:
          - api
          - scheduler
          items:
            type: string
          type: array
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/EKSNodePool'
          type: object
        vpc:
          $ref: '#/components/schemas/EKSVpc'
        routeTableId:
          description: Id of the RouteTable of the VPC to be used by subnets. This
            is used only when subnets are created into existing VPC.
          type: string
        subnets:
          description: Subnets for EKS master and worker nodes. All worker nodes will
            be launched in the same subnet (the first subnet in the list - which may
            not coincide with first subnet in the cluster create request payload as
            the deserialization may change the order) unless a subnet is specified
            for the workers that belong to a node pool at node pool level.
          items:
            $ref: '#/components/schemas/EKSSubnet'
          minItems: 2
          type: array
        iam:
          $ref: '#/components/schemas/EKSIam'
        apiServerAccessPoints:
          default:
          - public
          description: List of access point types for the API server; public and private
            are the only valid values
          items:
            enum:
            - private
            - public
            type: string
          type: array
        tags:
          additionalProperties:
            example: '{"customTagKey":"customTagValue"}'
            type: string
          description: User defined tags to be added to created AWS resources. Empty
            keys and values are not permitted.
          type: object
      required:
      - nodePools
    CreateACKProperties_ack:
      properties:
        regionId:
          type: string
        zoneId:
          type: string
        vswitchId:
          example: vsw-zysrfslpfhasklu338qys
          type: string
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolsACK'
          type: object
      required:
      - nodePools
      - regionId
      - zoneId
    CreateAKSProperties_aks:
      properties:
        resourceGroup:
          example: myRg
          type: string
        kubernetesVersion:
          example: 1.8.2
          type: string
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolsAzure'
          type: object
        vnetSubnetID:
          example: /subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name
          type: string
      required:
      - kubernetesVersion
      - nodePools
      - resourceGroup
    CreateGKEProperties_gke_master:
      properties:
        version:
          example: "1.10"
          type: string
    CreateGKEProperties_gke:
      properties:
        projectId:
          type: string
        master:
          $ref: '#/components/schemas/CreateGKEProperties_gke_master'
        nodeVersion:
          example: "1.10"
          type: string
        vpc:
          description: Name of the GCP Network (VPC) to deploy the cluster to. If
            omitted than the "default" VPC is used.
          example: corp-vpc
          type: string
        subnet:
          description: Name of the GCP Subnet to deploy the cluster to. If "default"
            VPC is used this field can be omitted. The subnet must be in the same
            region as the location of the cluster.
          type: string
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolsGoogle'
          type: object
      required:
      - nodePools
    CreateUpdateOKEProperties_oke:
      properties:
        version:
          example: v1.10.3
          type: string
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolsOracle'
          type: object
        vcnId:
          example: ocid1.vcn.oc1.iad.aaaaaaaapt4vnv6vhy4nxwxfq7e5hji44ugdz3dqpffxk77gurec7skjbcyq
          type: string
        lbSubnetId1:
          example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx
          type: string
        lbSubnetId2:
          example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx
          type: string
      required:
      - nodePools
      - version
    CreatePKEProperties_network:
      properties:
        apiServerAddress:
          example: 10.240.0.204
          type: string
        serviceCIDR:
          example: 10.32.0.0/24
          type: string
        podCIDR:
          example: 10.200.0.0/16"
          type: string
        provider:
          example: weave
          type: string
      required:
      - apiServerAddress
      - podCIDR
      - provider
      - serviceCIDR
    CreatePKEProperties_kubernetes_rbac:
      properties:
        enabled:
          example: true
          type: boolean
      required:
      - enabled
    CreatePKEProperties_kubernetes:
      properties:
        version:
          example: v1.12.2
          type: string
        rbac:
          $ref: '#/components/schemas/CreatePKEProperties_kubernetes_rbac'
      required:
      - rbac
      - version
    CreatePKEProperties_cri:
      properties:
        runtime:
          example: containerd
          type: string
      required:
      - runtime
    AmazonAutoScalingGroup_size:
      properties:
        min:
          example: 1
          type: integer
        max:
          example: 1
          type: integer
      required:
      - max
      - min
    UpdateEksProperties_eks:
      properties:
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/EKSNodePool'
          type: object
      required:
      - nodePools
    UpdateACKProperties_ack:
      properties:
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/NodePoolsACK'
          type: object
      required:
      - nodePools
    UpdateAzureProperties_azure:
      properties:
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/UpdateNodePoolsAzure'
          type: object
    UpdateGoogleProperties_master:
      properties:
        version:
          type: string
    UpdatePKEProperties_pke:
      properties:
        nodePools:
          additionalProperties:
            $ref: '#/components/schemas/UpdateNodePoolsPKE'
          type: object
      required:
      - nodePools
    ListNodesResponse_metadata:
      example:
        resourceVersion: "30123"
        selfLink: /api/v1/nodes
      properties:
        selfLink:
          example: /api/v1/nodes
          type: string
        resourceVersion:
          example: "30123"
          type: string
    NodeItem_metadata:
      example:
        uid: f214d7fb-41ae-11e8-a4ea-42010a8001da
        resourceVersion: "30119"
        name: gke-gkecluster-feri-706-pool1-496eccb3-l25k
        creationTimestamp: 2018-04-16T19:47:07Z
        annotations:
          key: '{"node.alpha.kubernetes.io/ttl":"0"}'
        selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k
        labels:
          key: '{"beta.kubernetes.io/arch":"amd64"}'
      properties:
        name:
          example: gke-gkecluster-feri-706-pool1-496eccb3-l25k
          type: string
        selfLink:
          example: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k
          type: string
        uid:
          example: f214d7fb-41ae-11e8-a4ea-42010a8001da
          type: string
        resourceVersion:
          example: "30119"
          type: string
        creationTimestamp:
          example: 2018-04-16T19:47:07Z
          type: string
        labels:
          additionalProperties:
            example: '{"beta.kubernetes.io/arch":"amd64"}'
            type: string
          type: object
        annotations:
          additionalProperties:
            example: '{"node.alpha.kubernetes.io/ttl":"0"}'
            type: string
          type: object
    NodeItem_spec:
      example:
        providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k
        externalID: "5935724476937880453"
        podCIDR: 10.48.0.0/24
      properties:
        podCIDR:
          example: 10.48.0.0/24
          type: string
        externalID:
          example: "5935724476937880453"
          type: string
        providerID:
          example: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k
          type: string
    NodeItem_status_capacity:
      example:
        memory: 7664776Ki
        cpu: "2"
        pods: "110"
      properties:
        cpu:
          example: "2"
          type: string
        memory:
          example: 7664776Ki
          type: string
        pods:
          example: "110"
          type: string
    NodeItem_status_allocatable:
      example:
        memory: 5784712Ki
        cpu: 1930m
        pods: "110"
      properties:
        cpu:
          example: 1930m
          type: string
        memory:
          example: 5784712Ki
          type: string
        pods:
          example: "110"
          type: string
    NodeItem_status_conditions:
      example:
        reason: KernelHasNoDeadlock
        lastHeartbeatTime: 2018-04-17T09:02:45Z
        type: KernelDeadlock
        lastTransitionTime: 2018-04-16T19:46:26Z
        message: kernel has no deadlock
        status: "False"
      properties:
        type:
          example: KernelDeadlock
          type: string
        status:
          example: "False"
          type: string
        lastHeartbeatTime:
          example: 2018-04-17T09:02:45Z
          type: string
        lastTransitionTime:
          example: 2018-04-16T19:46:26Z
          type: string
        reason:
          example: KernelHasNoDeadlock
          type: string
        message:
          example: kernel has no deadlock
          type: string
    NodeItem_status_addresses:
      example:
        address: 10.128.0.2
        type: InternalIP
      properties:
        type:
          example: InternalIP
          type: string
        address:
          example: 10.128.0.2
          type: string
    NodeItem_status_daemonEndpoints:
      example:
        kubeletEndpoint: '{}'
      properties:
        kubeletEndpoint:
          properties:
            Port:
              example: 10250
              type: integer
    NodeItem_status_nodeInfo:
      example:
        machineID: 10d8adda771410ca912a387cf7e5cb06
        bootID: decb64ff-e662-410a-b862-04cb490b4772
        kernelVersion: 4.4.111+
        containerRuntimeVersion: docker://17.3.2
        kubeletVersion: v1.10
        systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
        kubeProxyVersion: v1.10
        operatingSystem: linux
        osImage: Container-Optimized OS from Google
        architecture: amd64
      properties:
        machineID:
          example: 10d8adda771410ca912a387cf7e5cb06
          type: string
        systemUUID:
          example: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
          type: string
        bootID:
          example: decb64ff-e662-410a-b862-04cb490b4772
          type: string
        kernelVersion:
          example: 4.4.111+
          type: string
        osImage:
          example: Container-Optimized OS from Google
          type: string
        containerRuntimeVersion:
          example: docker://17.3.2
          type: string
        kubeletVersion:
          example: v1.10
          type: string
        kubeProxyVersion:
          example: v1.10
          type: string
        operatingSystem:
          example: linux
          type: string
        architecture:
          example: amd64
          type: string
    NodeItem_status_images:
      example:
        name:
        - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
        - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
        sizeBytes: 286572743
      properties:
        name:
          example:
          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
          items:
            type: string
          type: array
        sizeBytes:
          example: 286572743
          type: integer
    NodeItem_status:
      example:
        daemonEndpoints:
          kubeletEndpoint: '{}'
        allocatable:
          memory: 5784712Ki
          cpu: 1930m
          pods: "110"
        addresses:
        - address: 10.128.0.2
          type: InternalIP
        - address: 10.128.0.2
          type: InternalIP
        images:
        - name:
          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
          sizeBytes: 286572743
        - name:
          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e
          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe
          sizeBytes: 286572743
        nodeInfo:
          machineID: 10d8adda771410ca912a387cf7e5cb06
          bootID: decb64ff-e662-410a-b862-04cb490b4772
          kernelVersion: 4.4.111+
          containerRuntimeVersion: docker://17.3.2
          kubeletVersion: v1.10
          systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06
          kubeProxyVersion: v1.10
          operatingSystem: linux
          osImage: Container-Optimized OS from Google
          architecture: amd64
        conditions:
        - reason: KernelHasNoDeadlock
          lastHeartbeatTime: 2018-04-17T09:02:45Z
          type: KernelDeadlock
          lastTransitionTime: 2018-04-16T19:46:26Z
          message: kernel has no deadlock
          status: "False"
        - reason: KernelHasNoDeadlock
          lastHeartbeatTime: 2018-04-17T09:02:45Z
          type: KernelDeadlock
          lastTransitionTime: 2018-04-16T19:46:26Z
          message: kernel has no deadlock
          status: "False"
        capacity:
          memory: 7664776Ki
          cpu: "2"
          pods: "110"
      properties:
        capacity:
          $ref: '#/components/schemas/NodeItem_status_capacity'
        allocatable:
          $ref: '#/components/schemas/NodeItem_status_allocatable'
        conditions:
          items:
            $ref: '#/components/schemas/NodeItem_status_conditions'
          type: array
        addresses:
          items:
            $ref: '#/components/schemas/NodeItem_status_addresses'
          type: array
        daemonEndpoints:
          $ref: '#/components/schemas/NodeItem_status_daemonEndpoints'
        nodeInfo:
          $ref: '#/components/schemas/NodeItem_status_nodeInfo'
        images:
          items:
            $ref: '#/components/schemas/NodeItem_status_images'
          type: array
    HelmChartDetailsResponse_chart_maintainers:
      example:
        name: jackzampolin
        email: jack.zampolin@gmail.com
      properties:
        name:
          example: jackzampolin
          type: string
        email:
          example: jack.zampolin@gmail.com
          type: string
    HelmChartDetailsResponse_chart:
      example:
        maintainers:
        - name: jackzampolin
          email: jack.zampolin@gmail.com
        - name: jackzampolin
          email: jack.zampolin@gmail.com
        appVersion: 0.12.0
        sources:
        - https://github.com/kubernetes/ingress-nginx
        keywords:
        - ingress, nginx
        created: 2018-04-11T18:11:24.761440762Z
        deprecated: false
        icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
        description: An nginx Ingress controller that uses ConfigMap to store the
          nginx configuration.
        version: 0.13.1
        home: https://github.com/kubernetes/ingress-nginx
        urls:
        - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
        apiVersion: v1
        engine: gotpl
        name: nginx-ingress
        digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
      properties:
        name:
          example: nginx-ingress
          type: string
        home:
          example: https://github.com/kubernetes/ingress-nginx
          type: string
        sources:
          example:
          - https://github.com/kubernetes/ingress-nginx
          items:
            type: string
          type: array
        version:
          example: 0.13.1
          type: string
        description:
          example: An nginx Ingress controller that uses ConfigMap to store the nginx
            configuration.
          type: string
        keywords:
          example:
          - ingress, nginx
          items:
            type: string
          type: array
        maintainers:
          items:
            $ref: '#/components/schemas/HelmChartDetailsResponse_chart_maintainers'
          type: array
        engine:
          example: gotpl
          type: string
        icon:
          example: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
          type: string
        appVersion:
          example: 0.12.0
          type: string
        apiVersion:
          example: v1
          type: string
        deprecated:
          example: false
          type: boolean
        urls:
          example:
          - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
          items:
            type: string
          type: array
        created:
          example: 2018-04-11T18:11:24.761440762Z
          type: string
        digest:
          example: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
          type: string
    HelmChartDetailsResponse_versions:
      example:
        values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==
        readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK
        chart:
          maintainers:
          - name: jackzampolin
            email: jack.zampolin@gmail.com
          - name: jackzampolin
            email: jack.zampolin@gmail.com
          appVersion: 0.12.0
          sources:
          - https://github.com/kubernetes/ingress-nginx
          keywords:
          - ingress, nginx
          created: 2018-04-11T18:11:24.761440762Z
          deprecated: false
          icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
          description: An nginx Ingress controller that uses ConfigMap to store the
            nginx configuration.
          version: 0.13.1
          home: https://github.com/kubernetes/ingress-nginx
          urls:
          - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz
          apiVersion: v1
          engine: gotpl
          name: nginx-ingress
          digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa
      properties:
        chart:
          $ref: '#/components/schemas/HelmChartDetailsResponse_chart'
        values:
          example: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==
          type: string
        readme:
          example: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK
          type: string
    InstallSecretsRequest_query:
      example:
        ids:
        - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b
        type: amazon
        tags:
        - repo:pipeline
      properties:
        type:
          example: amazon
          type: string
        ids:
          example:
          - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b
          items:
            type: string
          type: array
        tags:
          example:
          - repo:pipeline
          items:
            type: string
          type: array
    SecretTypeResponse_fields:
      example:
        name: name
        isSafeToDisplay: true
        description: description
        required: true
      properties:
        name:
          type: string
        required:
          type: boolean
        isSafeToDisplay:
          type: boolean
        description:
          type: string
    BucketInfo_secret:
      example:
        accessId: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef
        accessName: myaccesssecretname
        name: mysecretname
        id: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1
      properties:
        id:
          example: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1
          type: string
        name:
          example: mysecretname
          type: string
        accessId:
          description: the secret identifier of the azure access information
          example: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef
          type: string
        accessName:
          description: the secret name of the azure access information
          example: myaccesssecretname
          type: string
      required:
      - id
    PodItem_labels:
      example:
        app: pipeline-traefik
        release: pipeline
        chart: traefik-1.14.2
      properties:
        app:
          example: pipeline-traefik
          type: string
        chart:
          example: traefik-1.14.2
          type: string
        release:
          example: pipeline
          type: string
    PKEClusterReadinessResponse_master:
      example:
        ready: true
      properties:
        ready:
          description: true when the node has been reported to be ready
          example: true
          type: boolean
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
