/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

// GenericNodePool - Generic node pool object for all cluster distributions.
type GenericNodePool struct {

	// Node pool name.
	Name string `json:"name"`

	// Node pool size.
	Size int32 `json:"size"`

	// Node pool labels.
	Labels map[string]string `json:"labels,omitempty"`
}

// AssertGenericNodePoolRequired checks if the required fields are not zero-ed
func AssertGenericNodePoolRequired(obj GenericNodePool) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"size": obj.Size,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseGenericNodePoolRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GenericNodePool (e.g. [][]GenericNodePool), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGenericNodePoolRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGenericNodePool, ok := obj.(GenericNodePool)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGenericNodePoolRequired(aGenericNodePool)
	})
}
