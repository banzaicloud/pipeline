/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type IntegratedServiceDetails struct {

	Output map[string]interface{} `json:"output,omitempty"`

	Spec map[string]interface{} `json:"spec,omitempty"`

	Status string `json:"status"`
}

// AssertIntegratedServiceDetailsRequired checks if the required fields are not zero-ed
func AssertIntegratedServiceDetailsRequired(obj IntegratedServiceDetails) error {
	elements := map[string]interface{}{
		"status": obj.Status,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseIntegratedServiceDetailsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of IntegratedServiceDetails (e.g. [][]IntegratedServiceDetails), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseIntegratedServiceDetailsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aIntegratedServiceDetails, ok := obj.(IntegratedServiceDetails)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertIntegratedServiceDetailsRequired(aIntegratedServiceDetails)
	})
}
