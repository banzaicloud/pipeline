/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type PkeHosts struct {

	Name string `json:"name"`

	PrivateIP string `json:"privateIP"`

	Roles []string `json:"roles"`
}

// AssertPkeHostsRequired checks if the required fields are not zero-ed
func AssertPkeHostsRequired(obj PkeHosts) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"privateIP": obj.PrivateIP,
		"roles": obj.Roles,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecursePkeHostsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PkeHosts (e.g. [][]PkeHosts), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePkeHostsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPkeHosts, ok := obj.(PkeHosts)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPkeHostsRequired(aPkeHosts)
	})
}
