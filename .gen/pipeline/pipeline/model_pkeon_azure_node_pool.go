/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type PkeonAzureNodePool struct {

	Name string `json:"name"`

	Roles []string `json:"roles"`

	Labels map[string]string `json:"labels,omitempty"`

	Subnet PkeonAzureNodePoolSubnet `json:"subnet,omitempty"`

	Zones []string `json:"zones,omitempty"`

	Autoscaling bool `json:"autoscaling,omitempty"`

	MinCount int32 `json:"minCount,omitempty"`

	MaxCount int32 `json:"maxCount,omitempty"`

	Count int32 `json:"count,omitempty"`

	InstanceType string `json:"instanceType"`
}

// AssertPkeonAzureNodePoolRequired checks if the required fields are not zero-ed
func AssertPkeonAzureNodePoolRequired(obj PkeonAzureNodePool) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"roles": obj.Roles,
		"instanceType": obj.InstanceType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPkeonAzureNodePoolSubnetRequired(obj.Subnet); err != nil {
		return err
	}
	return nil
}

// AssertRecursePkeonAzureNodePoolRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PkeonAzureNodePool (e.g. [][]PkeonAzureNodePool), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePkeonAzureNodePoolRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPkeonAzureNodePool, ok := obj.(PkeonAzureNodePool)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPkeonAzureNodePoolRequired(aPkeonAzureNodePool)
	})
}
