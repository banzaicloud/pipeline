/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type SecretKeyValueTls struct {

	Hosts string `json:"hosts"`

	Validity string `json:"validity,omitempty"`

	CaCert string `json:"caCert,omitempty"`

	CaKey string `json:"caKey,omitempty"`

	ServerCert string `json:"serverCert,omitempty"`

	ServerKey string `json:"serverKey,omitempty"`

	ClientCert string `json:"clientCert,omitempty"`

	ClientKey string `json:"clientKey,omitempty"`
}

// AssertSecretKeyValueTlsRequired checks if the required fields are not zero-ed
func AssertSecretKeyValueTlsRequired(obj SecretKeyValueTls) error {
	elements := map[string]interface{}{
		"hosts": obj.Hosts,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSecretKeyValueTlsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SecretKeyValueTls (e.g. [][]SecretKeyValueTls), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSecretKeyValueTlsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSecretKeyValueTls, ok := obj.(SecretKeyValueTls)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSecretKeyValueTlsRequired(aSecretKeyValueTls)
	})
}
