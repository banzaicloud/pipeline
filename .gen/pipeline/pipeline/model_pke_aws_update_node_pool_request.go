/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

// PkeAwsUpdateNodePoolRequest - Node pool update request object for an PKE AWS cluster.
type PkeAwsUpdateNodePoolRequest struct {

	// Node pool size.
	Size int32 `json:"size"`

	// Node pool labels.
	Labels map[string]string `json:"labels,omitempty"`

	Autoscaling NodePoolAutoScaling `json:"autoscaling,omitempty"`

	// Size of the EBS volume in GiBs of the nodes in the pool.
	VolumeSize int32 `json:"volumeSize,omitempty"`

	// The instance type to use for your node pool.
	InstanceType string `json:"instanceType,omitempty"`

	// The instance AMI to use for your node pool.
	Image string `json:"image,omitempty"`

	// The upper limit price for the requested spot instance. If this field is empty or 0 on-demand instances are used instead of spot instances.
	SpotPrice string `json:"spotPrice,omitempty"`

	Options BaseUpdateNodePoolOptions `json:"options,omitempty"`
}

// AssertPkeAwsUpdateNodePoolRequestRequired checks if the required fields are not zero-ed
func AssertPkeAwsUpdateNodePoolRequestRequired(obj PkeAwsUpdateNodePoolRequest) error {
	elements := map[string]interface{}{
		"size": obj.Size,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertNodePoolAutoScalingRequired(obj.Autoscaling); err != nil {
		return err
	}
	if err := AssertBaseUpdateNodePoolOptionsRequired(obj.Options); err != nil {
		return err
	}
	return nil
}

// AssertRecursePkeAwsUpdateNodePoolRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of PkeAwsUpdateNodePoolRequest (e.g. [][]PkeAwsUpdateNodePoolRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecursePkeAwsUpdateNodePoolRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aPkeAwsUpdateNodePoolRequest, ok := obj.(PkeAwsUpdateNodePoolRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertPkeAwsUpdateNodePoolRequestRequired(aPkeAwsUpdateNodePoolRequest)
	})
}
