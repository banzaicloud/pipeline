/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type ListNodesResponse struct {

	Metadata ListNodesResponseMetadata `json:"metadata,omitempty"`

	Items []NodeItem `json:"items,omitempty"`
}

// AssertListNodesResponseRequired checks if the required fields are not zero-ed
func AssertListNodesResponseRequired(obj ListNodesResponse) error {
	if err := AssertListNodesResponseMetadataRequired(obj.Metadata); err != nil {
		return err
	}
	for _, el := range obj.Items {
		if err := AssertNodeItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseListNodesResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ListNodesResponse (e.g. [][]ListNodesResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseListNodesResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aListNodesResponse, ok := obj.(ListNodesResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertListNodesResponseRequired(aListNodesResponse)
	})
}
