/*
 * Pipeline API
 *
 * Pipeline is a feature rich application platform, built for containers on top of Kubernetes to automate the DevOps experience, continuous application development and the lifecycle of deployments. 
 *
 * API version: latest
 * Contact: info@banzaicloud.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package pipeline

type SubnetInfo struct {

	// The IPv4 CIDR blocks assigned to the subnet
	Cidrs []string `json:"cidrs"`

	// Identifier of the subnetwork
	Id string `json:"id"`

	// The location of the subnetwork.
	Location string `json:"location,omitempty"`

	// Name of the subnetwork
	Name string `json:"name,omitempty"`
}

// AssertSubnetInfoRequired checks if the required fields are not zero-ed
func AssertSubnetInfoRequired(obj SubnetInfo) error {
	elements := map[string]interface{}{
		"cidrs": obj.Cidrs,
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSubnetInfoRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SubnetInfo (e.g. [][]SubnetInfo), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSubnetInfoRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSubnetInfo, ok := obj.(SubnetInfo)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSubnetInfoRequired(aSubnetInfo)
	})
}
