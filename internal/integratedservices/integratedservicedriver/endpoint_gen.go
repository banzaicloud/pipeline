// Code generated by mga tool. DO NOT EDIT.
package integratedservicedriver

import (
	"github.com/banzaicloud/pipeline/internal/integratedservices"
	"github.com/go-kit/kit/endpoint"
	kitoc "github.com/go-kit/kit/tracing/opencensus"
	kitxendpoint "github.com/sagikazarmark/kitx/endpoint"
)

// Endpoint name constants
const (
	ActivateEndpoint   = "integratedservices.Activate"
	DeactivateEndpoint = "integratedservices.Deactivate"
	DetailsEndpoint    = "integratedservices.Details"
	ListEndpoint       = "integratedservices.List"
	UpdateEndpoint     = "integratedservices.Update"
)

// Endpoints collects all of the endpoints that compose the underlying service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	Activate   endpoint.Endpoint
	Deactivate endpoint.Endpoint
	Details    endpoint.Endpoint
	List       endpoint.Endpoint
	Update     endpoint.Endpoint
}

// MakeEndpoints returns a(n) Endpoints struct where each endpoint invokes
// the corresponding method on the provided service.
func MakeEndpoints(service integratedservices.Service, middleware ...endpoint.Middleware) Endpoints {
	mw := kitxendpoint.Combine(middleware...)

	return Endpoints{
		Activate:   kitxendpoint.OperationNameMiddleware(ActivateEndpoint)(mw(MakeActivateEndpoint(service))),
		Deactivate: kitxendpoint.OperationNameMiddleware(DeactivateEndpoint)(mw(MakeDeactivateEndpoint(service))),
		Details:    kitxendpoint.OperationNameMiddleware(DetailsEndpoint)(mw(MakeDetailsEndpoint(service))),
		List:       kitxendpoint.OperationNameMiddleware(ListEndpoint)(mw(MakeListEndpoint(service))),
		Update:     kitxendpoint.OperationNameMiddleware(UpdateEndpoint)(mw(MakeUpdateEndpoint(service))),
	}
}

// TraceEndpoints returns a(n) Endpoints struct where each endpoint is wrapped with a tracing middleware.
func TraceEndpoints(endpoints Endpoints) Endpoints {
	return Endpoints{
		Activate:   kitoc.TraceEndpoint("integratedservices.Activate")(endpoints.Activate),
		Deactivate: kitoc.TraceEndpoint("integratedservices.Deactivate")(endpoints.Deactivate),
		Details:    kitoc.TraceEndpoint("integratedservices.Details")(endpoints.Details),
		List:       kitoc.TraceEndpoint("integratedservices.List")(endpoints.List),
		Update:     kitoc.TraceEndpoint("integratedservices.Update")(endpoints.Update),
	}
}
