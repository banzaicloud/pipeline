AWSTemplateFormatVersion: 2010-09-09
Description: 'Master Node and SGs for Banzai Cloud Pipeline Kubernetes Engine'

Parameters:
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: "127.0.0.1/32"
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  InstanceType:
    Description: EC2 instance type(s)
    Type: String
  ImageId:
    Type: 'AWS::EC2::Image::Id'
    Description: Amazon image
  ClusterName:
    Description: PKE Cluster name
    Type: String
  VPCId:
    Type: 'AWS::EC2::VPC::Id'
    Description: Specify VPC Id for Autoscaling
  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'
    Description: Specify Subnet Id for Autoscaling
  IamInstanceProfile:
    Type: String
  PkeCommand:
    Type: String
  EIPAllocationId:
    Type: String
  PkeVersion:
    Type: String
  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Default: ""

Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      IamInstanceProfile: !Ref IamInstanceProfile
      SecurityGroupIds:
      - !Ref MasterSecurityGroup
      - !Ref ClusterSecurityGroup
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          VolumeSize: '50'
      UserData:
        Fn::Base64:
          Fn::Sub:
          - |
            #!/usr/bin/env bash
            set -e

            curl -v https://banzaicloud.com/downloads/pke/pke-${PkeVersion} -o /usr/local/bin/pke
            chmod +x /usr/local/bin/pke
            export PATH=$PATH:/usr/local/bin/

            ${PkeCommand}
          - {
            AwsRegion: !Ref 'AWS::Region',
            PkeVersion: !Ref PkeVersion,
            PkeCommand: !Ref PkeCommand,
            }
      SubnetId: !Ref SubnetId
      Tags:
      - Key: ClusterName
        Value: !Ref ClusterName
      - Key: Name
        Value: !Join ["", ["pke-", !Ref ClusterName, "-master"]]
      - Key: !Join [ "", [ "kubernetes.io/cluster/", !Ref ClusterName] ]
        Value: "owned"
    DependsOn:
      - MasterSecurityGroup
      - ClusterSecurityGroup

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref Ec2Instance
      AllocationId: !Ref EIPAllocationId

  MasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH via port 22'
      VpcId:
        Ref: VPCId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SSHLocation
      - IpProtocol: tcp
        FromPort: '6443'
        ToPort: '6443'
        CidrIp: 0.0.0.0/0
      - IpProtocol: -1
        SourceSecurityGroupId: !Ref "ClusterSecurityGroup"
      Tags:
      - Key: Name
        Value: !Join ["", ["pke-", !Ref ClusterName, "-sg-master"]]

  ClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Allow all traffic in cluster'
      VpcId:
        Ref: VPCId
      Tags:
      - Key: ClusterName
        Value: !Ref ClusterName
      - Key: Name
        Value: !Join ["", ["pke-",!Ref ClusterName, "-sg-cluster" ]]
      - Key: !Join [ "", [ "kubernetes.io/cluster/", !Ref ClusterName] ]
        Value: "owned"

Outputs:
  ClusterSecurityGroup:
    Description: 'ID of the cluster security group created'
    Value: !Ref ClusterSecurityGroup
  MasterSecurityGroup:
    Description: 'ID of the created master security group'
    Value: !Ref MasterSecurityGroup
